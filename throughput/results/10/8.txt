BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	o_year,
	sum(case
		when nation = 'ROMANIA' then volume
		else 0
	end) / sum(volume) as mkt_share
from
	(
		select
			extract(year from o_orderdate) as o_year,
			l_extendedprice * (1 - l_discount) as volume,
			n2.n_name as nation
		from
			part,
			supplier,
			lineitem,
			orders,
			customer,
			nation n1,
			nation n2,
			region
		where
			p_partkey = l_partkey
			and s_suppkey = l_suppkey
			and l_orderkey = o_orderkey
			and o_custkey = c_custkey
			and c_nationkey = n1.n_nationkey
			and n1.n_regionkey = r_regionkey
			and r_name = 'EUROPE'
			and s_nationkey = n2.n_nationkey
			and o_orderdate between date '1995-01-01' and date '1996-12-31'
			and p_type = 'STANDARD BRUSHED COPPER'
	) as all_nations
group by
	o_year
order by
	o_year;
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1745915.22..1745917.06 rows=734 width=38) (actual time=12442.776..12442.776 rows=2 loops=1)
   Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=1948064 read=348648 dirtied=3402 written=27
   ->  HashAggregate  (cost=1745867.44..1745880.29 rows=734 width=38) (actual time=12442.731..12442.731 rows=2 loops=1)
         Group Key: date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)
         Buffers: shared hit=1948061 read=348648 dirtied=3402 written=27
         ->  Hash Join  (cost=38738.96..1745381.04 rows=24320 width=38) (actual time=1994.008..12401.158 rows=23984 loops=1)
               Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
               Buffers: shared hit=1948061 read=348648 dirtied=3402 written=27
               ->  Nested Loop  (cost=38737.39..1744923.48 rows=24320 width=16) (actual time=1993.965..12362.053 rows=23984 loops=1)
                     Buffers: shared hit=1948057 read=348648 dirtied=3402 written=27
                     ->  Hash Join  (cost=38737.10..1737073.77 rows=24328 width=16) (actual time=1993.930..12197.927 rows=23984 loops=1)
                           Hash Cond: (orders.o_custkey = customer.c_custkey)
                           Buffers: shared hit=1877250 read=347371 dirtied=3402 written=26
                           ->  Nested Loop  (cost=406.95..1698044.20 rows=121640 width=20) (actual time=7.205..10136.832 rows=120005 loops=1)
                                 Buffers: shared hit=1700854 read=347369 dirtied=3402 written=26
                                 ->  Nested Loop  (cost=406.52..1502765.42 rows=398795 width=16) (actual time=7.052..4467.255 rows=395367 loops=1)
                                       Buffers: shared hit=261119 read=203511 dirtied=3402 written=13
                                       ->  Bitmap Heap Scan on part  (cost=405.95..27832.29 rows=13100 width=4) (actual time=6.981..175.378 rows=13179 loops=1)
                                             Recheck Cond: ((p_type)::text = 'STANDARD BRUSHED COPPER'::text)
                                             Heap Blocks: exact=11308
                                             Buffers: shared hit=8 read=11382
                                             ->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.68 rows=13100 width=0) (actual time=4.735..4.735 rows=13179 loops=1)
                                                   Index Cond: ((p_type)::text = 'STANDARD BRUSHED COPPER'::text)
                                                   Buffers: shared read=82
                                       ->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..112.27 rows=32 width=20) (actual time=0.027..0.316 rows=30 loops=13179)
                                             Index Cond: (l_partkey = part.p_partkey)
                                             Buffers: shared hit=261111 read=192129 dirtied=3402 written=13
                                 ->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=395367)
                                       Index Cond: (o_orderkey = lineitem.l_orderkey)
                                       Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 1
                                       Buffers: shared hit=1439735 read=143858 written=13
                           ->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1983.719..1983.719 rows=300963 loops=1)
                                 Buckets: 524288  Batches: 1  Memory Usage: 14677kB
                                 Buffers: shared hit=176396 read=2
                                 ->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.719..1888.740 rows=300963 loops=1)
                                       Buffers: shared hit=176396 read=2
                                       ->  Hash Join  (cost=1.07..2.47 rows=5 width=4) (actual time=0.030..0.049 rows=5 loops=1)
                                             Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                             Buffers: shared hit=2
                                             ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.004..0.010 rows=25 loops=1)
                                                   Buffers: shared hit=1
                                             ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.013..0.013 rows=1 loops=1)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   Buffers: shared hit=1
                                                   ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.009 rows=1 loops=1)
                                                         Filter: (r_name = 'EUROPE'::bpchar)
                                                         Rows Removed by Filter: 4
                                                         Buffers: shared hit=1
                                       ->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.620..368.564 rows=60193 loops=5)
                                             Recheck Cond: (c_nationkey = n1.n_nationkey)
                                             Rows Removed by Index Recheck: 1439807
                                             Heap Blocks: lossy=176390
                                             Buffers: shared hit=176394 read=2
                                             ->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.587..3.587 rows=353280 loops=5)
                                                   Index Cond: (c_nationkey = n1.n_nationkey)
                                                   Buffers: shared hit=4 read=2
                     ->  Index Scan using pk_supplier on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.006..0.006 rows=1 loops=23984)
                           Index Cond: (s_suppkey = lineitem.l_suppkey)
                           Buffers: shared hit=70807 read=1277 written=1
               ->  Hash  (cost=1.25..1.25 rows=25 width=30) (actual time=0.016..0.016 rows=25 loops=1)
                     Buckets: 1024  Batches: 1  Memory Usage: 10kB
                     Buffers: shared hit=1
                     ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=30) (actual time=0.003..0.007 rows=25 loops=1)
                           Buffers: shared hit=1
 Planning time: 6.242 ms
 Execution time: 12443.411 ms
(69 rows)

COMMIT;
COMMIT
