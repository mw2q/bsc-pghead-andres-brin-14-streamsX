Q21,697440.0,->  Nested Loop Semi Join  (cost=2406.31..2869492.96 rows=1 width=34) (actual time=31.761..38198.392 rows=697440 loops=1)
Q3,316657.9,->  Sort  (cost=2567088.59..2575005.04 rows=3166579 width=20) (actual time=36746.368..36746.371 rows=10 loops=1)
Q18,303866.1,->  GroupAggregate  (cost=10174709.02..11001984.64 rows=30082750 width=39) (actual time=73693.919..73694.232 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2183578.59..2798301.27 rows=7522476 width=39) (actual time=47390.590..53630.870 rows=99 loops=1)
Q18,75984.6,->  Hash Join  (cost=2114550.59..2616436.13 rows=7522476 width=20) (actual time=46406.545..52646.438 rows=99 loops=1)
Q18,75984.6,->  Hash  (cost=2798301.27..2798301.27 rows=7522476 width=39) (actual time=53631.112..53631.112 rows=99 loops=1)
Q18,43409.4,->  Sort  (cost=10174709.02..10249915.89 rows=30082750 width=39) (actual time=73693.908..73693.954 rows=693 loops=1)
Q18,43409.4,->  Hash Join  (cost=2892332.22..5615488.49 rows=30082750 width=39) (actual time=53844.528..73692.866 rows=693 loops=1)
Q18,41403.4,->  Hash  (cost=2063313.78..2063313.78 rows=4098945 width=4) (actual time=46263.200..46263.200 rows=99 loops=1)
Q18,41403.4,->  HashAggregate  (cost=1971087.51..2022324.33 rows=4098945 width=8) (actual time=40605.626..46262.940 rows=99 loops=1)
Q21,38986.0,->  Nested Loop Anti Join  (cost=2406.88..2869494.74 rows=1 width=26) (actual time=32.431..40997.442 rows=38986 loops=1)
Q10,29011.1,->  Sort  (cost=2294820.02..2296270.58 rows=580223 width=175) (actual time=32763.652..32763.654 rows=20 loops=1)
Q9,26464.3,->  Sort  (cost=1129061.09..1129061.40 rows=123 width=46) (actual time=95718.835..96433.903 rows=3255114 loops=1)
Q9,26464.3,->  Nested Loop  (cost=66799.57..1129052.96 rows=123 width=24) (actual time=979.991..86174.919 rows=3255114 loops=1)
Q9,26464.3,->  Nested Loop  (cost=66799.13..1128993.34 rows=123 width=24) (actual time=979.974..55232.331 rows=3255114 loops=1)
Q9,26464.3,->  Nested Loop  (cost=66798.84..1128953.65 rows=123 width=28) (actual time=979.960..44584.695 rows=3255114 loops=1)
Q9,26464.3,->  Hash Join  (cost=66801.13..1129056.82 rows=123 width=46) (actual time=980.048..89362.211 rows=3255114 loops=1)
Q2,4625.0,->  Merge Join  (cost=465618.54..891389.90 rows=1 width=190) (actual time=6881.047..8842.492 rows=4625 loops=1)
Q21,3945.0,->  HashAggregate  (cost=2869494.75..2869494.76 rows=1 width=26) (actual time=41046.042..41047.055 rows=3945 loops=1)
Q15,3746.0,->  Subquery Scan on revenue10  (cost=1466160.86..1466245.14 rows=3746 width=12) (actual time=55430.429..55450.947 rows=1 loops=1)
Q15,3746.0,->  Sort  (cost=1466467.49..1466476.85 rows=3746 width=12) (actual time=55450.967..55450.968 rows=1 loops=1)
Q15,3746.0,Merge Join  (cost=2915832.16..2920929.55 rows=3746 width=79) (actual time=55484.447..55484.449 rows=1 loops=1)
Q15,3746.0,->  HashAggregate  (cost=1466160.86..1466207.68 rows=3746 width=12) (actual time=55430.428..55450.945 rows=1 loops=1)
Q7,764.0,Sort  (cost=2129363.54..2129371.18 rows=3056 width=64) (actual time=24757.273..24757.273 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2129140.80..2129186.64 rows=3056 width=64) (actual time=24757.196..24757.206 rows=4 loops=1)
Q8,367.0,Sort  (cost=1745915.22..1745917.06 rows=734 width=38) (actual time=12442.776..12442.776 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1745867.44..1745880.29 rows=734 width=38) (actual time=12442.731..12442.731 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2869494.77..2869494.77 rows=1 width=26) (actual time=41048.182..41048.189 rows=100 loops=1)
Q21,100.0,Limit  (cost=2869494.77..2869494.77 rows=1 width=26) (actual time=41048.183..41048.201 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=891389.91..891389.92 rows=1 width=190) (actual time=8847.824..8847.837 rows=100 loops=1)
Q2,100.0,Limit  (cost=891389.91..891389.92 rows=1 width=190) (actual time=8847.826..8847.849 rows=100 loops=1)
Q11,34.7,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8402.185..8403.246 rows=9218 loops=1)
Q11,34.7,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8320.219..8396.981 rows=9218 loops=1)
Q3,27.7,->  HashAggregate  (cost=2466994.17..2498659.96 rows=3166579 width=20) (actual time=36673.110..36725.204 rows=114047 loops=1)
Q15,26.6,->  HashAggregate  (cost=1449280.08..1449317.54 rows=3746 width=12) (actual time=27116.967..27156.250 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=723601)
Q14,14.5,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7547.24 rows=739924 width=0) (actual time=134.513..134.513 rows=10771200 loops=1)
Q3,10.4,->  Hash Join  (cost=770844.58..2419495.48 rows=3166579 width=20) (actual time=8380.415..36386.887 rows=301824 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2398.56 rows=318207 width=0) (actual time=34.821..34.821 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.017..0.088 rows=8 loops=433844)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.587..3.587 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.643..3.643 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.237..0.237 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.290..0.290 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.264..0.264 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.258..0.258 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1880590.57..1880590.63 rows=25 width=34) (actual time=18665.043..18665.043 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1880589.74..1880589.99 rows=25 width=34) (actual time=18664.996..18664.998 rows=5 loops=1)
Q4,5.0,Sort  (cost=1509331.69..1509331.70 rows=1 width=16) (actual time=13412.441..13412.442 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.03 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=573824)
Q4,5.0,->  HashAggregate  (cost=1509331.67..1509331.68 rows=1 width=16) (actual time=13412.391..13412.392 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=697440)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5928.17 rows=588817 width=0) (actual time=27.629..27.629 rows=2571520 loops=1)
Q13,4.3,Sort  (cost=850054.31..850054.81 rows=200 width=8) (actual time=27245.847..27245.849 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850044.67..850046.67 rows=200 width=8) (actual time=27245.781..27245.788 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5900.60 rows=586060 width=0) (actual time=29.271..29.271 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1205662)
Q17,3.8,->  Nested Loop  (cost=82.75..114356.40 rows=20155 width=4) (actual time=1.499..199.240 rows=5298 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=455108)
Q4,3.3,->  Nested Loop Semi Join  (cost=6075.94..1508539.05 rows=158525 width=16) (actual time=27.888..13110.609 rows=526289 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.037 rows=3 loops=1967)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247840.98 rows=33025730 width=0) (actual time=125.948..125.948 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.331..0.403 rows=3 loops=21725)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54847.18 rows=7307624 width=0) (actual time=32.029..32.029 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=696415.98..696415.99 rows=3 width=20) (actual time=9725.759..9725.760 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643495.68..643495.73 rows=3 width=20) (actual time=9725.715..9725.717 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.058 rows=2 loops=6198)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=13.217..9105.929 rows=59124 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=9144.387..9144.387 rows=59124 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.725..4.725 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402641.57..404107.18 rows=586243 width=40) (actual time=10379.313..10543.226 rows=1183701 loops=1)
Q16,2.0,->  Hash Join  (cost=54655.72..346476.15 rows=586243 width=40) (actual time=1306.347..6696.867 rows=1183701 loops=1)
Q12,2.0,Sort  (cost=3035025.62..3035025.63 rows=1 width=27) (actual time=33417.718..33417.718 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3035025.60..3035025.61 rows=1 width=27) (actual time=33417.670..33417.670 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.461..3793.996 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=346994.33..2259072.69 rows=580223 width=175) (actual time=7730.850..30369.341 rows=1147833 loops=1)
Q10,1.9,->  Hash Join  (cost=346992.77..2251093.07 rows=580223 width=153) (actual time=7730.821..29937.634 rows=1147833 loops=1)
Q10,1.9,->  Hash Join  (cost=277964.77..2173361.72 rows=580223 width=12) (actual time=6393.101..27859.902 rows=1147833 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1833348.23 rows=20194779 width=8) (actual time=0.015..19173.659 rows=37965313 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2344697.96 rows=392720 width=38) (actual time=31.723..33296.697 rows=723601 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1919559.13 rows=807517 width=34) (actual time=31.677..25806.177 rows=1496439 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.040..0.419 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=9175.837..9175.946 rows=1774 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=9144.812..9174.338 rows=1774 loops=1)
Q1,1.5,Sort  (cost=4183367.95..4183367.97 rows=6 width=20) (actual time=91584.167..91584.168 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4183367.77..4183367.88 rows=6 width=20) (actual time=91584.116..91584.117 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2273578.27..2279380.50 rows=580223 width=175) (actual time=32415.835..32625.132 rows=381190 loops=1)
Q9,1.4,GroupAggregate  (cost=1129061.09..1129065.40 rows=123 width=46) (actual time=95729.654..98680.066 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27413.94 rows=3649859 width=0) (actual time=27.667..27.667 rows=2571520 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.156..4.156 rows=405760 loops=1)
Q15,1.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..119654.23 rows=15934164 width=0) (actual time=120.230..120.230 rows=10676480 loops=1)
Q15,1.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..119654.23 rows=15934164 width=0) (actual time=118.767..118.767 rows=10686720 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2876.12 rows=140115 width=0) (actual time=778.679..778.679 rows=190579 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2911.15..41867.17 rows=140115 width=24) (actual time=787.563..943.732 rows=190579 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91163.89 rows=9101589 width=0) (actual time=120.174..120.174 rows=10664960 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..24.728 rows=87911 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=102102 width=4) (actual time=0.017..938.624 rows=108461 loops=1)
Q9,1.0,->  Hash Join  (cost=66798.27..351811.64 rows=405536 width=16) (actual time=979.917..5443.359 rows=433844 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=102102 width=4) (actual time=979.323..979.323 rows=108461 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.719..1888.740 rows=300963 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.95..1698044.20 rows=121640 width=20) (actual time=7.205..10136.832 rows=120005 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.52..1502765.42 rows=398795 width=16) (actual time=7.052..4467.255 rows=395367 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.39..1744923.48 rows=24320 width=16) (actual time=1993.965..12362.053 rows=23984 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..112.27 rows=32 width=20) (actual time=0.027..0.316 rows=30 loops=13179)
Q8,1.0,->  Hash Join  (cost=38738.96..1745381.04 rows=24320 width=38) (actual time=1994.008..12401.158 rows=23984 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.10..1737073.77 rows=24328 width=16) (actual time=1993.930..12197.927 rows=23984 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1983.719..1983.719 rows=300963 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.68 rows=13100 width=0) (actual time=4.735..4.735 rows=13179 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=405.95..27832.29 rows=13100 width=4) (actual time=6.981..175.378 rows=13179 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.620..368.564 rows=60193 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.007..3009.102 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2116355.31 rows=1464059 width=42) (actual time=934.747..23898.874 rows=1468042 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2128227.18 rows=60908 width=64) (actual time=978.163..24660.622 rows=58534 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=934.621..10189.492 rows=1205662 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.042..886.146 rows=120519 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..39.769 rows=7974 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=934.034..934.034 rows=120519 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=42.337..42.337 rows=7974 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91361.87..1362620.62 rows=791913 width=8) (actual time=120.948..29365.683 rows=795270 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.765..2122.962 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=66333.53..1860579.56 rows=1847197 width=46) (actual time=2263.047..17676.288 rows=1820472 loops=1)
Q5,1.0,->  Hash Join  (cost=71012.53..1879851.14 rows=73860 width=34) (actual time=2325.655..18575.349 rows=72714 loops=1)
Q5,1.0,->  Hash Join  (cost=66332.97..391426.81 rows=461912 width=38) (actual time=2263.004..10792.394 rows=455108 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2233.136..2233.136 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27991.33..339805.22 rows=2309558 width=8) (actual time=27.841..7595.400 rows=2275958 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.678..414.047 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6075.37..271973.63 rows=588817 width=20) (actual time=27.802..5246.611 rows=573824 loops=1)
Q3,1.0,->  Hash Join  (cost=106372.23..496517.70 rows=1458358 width=12) (actual time=754.160..7705.875 rows=1449450 loops=1)
Q3,1.0,->  Hash  (cost=496517.70..496517.70 rows=1458358 width=12) (actual time=8244.643..8244.643 rows=1449450 loops=1)
Q3,1.0,->  Hash  (cost=45956.26..45956.26 rows=299350 width=4) (actual time=719.589..719.589 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.55 rows=299350 width=0) (actual time=68.464..68.464 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56674.09..404832.39 rows=7307624 width=16) (actual time=32.192..4407.751 rows=7228131 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=256097.41..1749236.03 rows=33025730 width=12) (actual time=126.706..22282.700 rows=32639889 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.39..45956.26 rows=299350 width=4) (actual time=77.441..617.603 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.011..3971.654 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8570.899..8570.899 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598996.09..643054.82 rows=58781 width=20) (actual time=9432.627..9703.911 rows=63359 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6554.50 rows=382335 width=0) (actual time=95.565..95.565 rows=381336 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6650.09..51964.38 rows=382335 width=4) (actual time=104.477..648.574 rows=381336 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.316..30.506 rows=3945 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.625..31.625 rows=3945 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.303..29.825 rows=3945 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6880.733..7010.347 rows=1586954 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.292..136.815 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8127 width=30) (actual time=0.100..1143.971 rows=8078 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=148.246..5722.173 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.105..148.105 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.249..26.511 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.274..28.122 rows=3981 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.109..9.109 rows=21725 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.258..27.526 rows=3981 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.748..310.960 rows=21725 loops=1)
Q19,1.0,->  Nested Loop  (cost=12868.12..630224.21 rows=1141 width=8) (actual time=38.222..2016.898 rows=1151 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.183..4.183 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8002 width=0) (actual time=3.629..3.629 rows=8048 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.43 rows=7972 width=0) (actual time=3.499..3.499 rows=7912 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7927 width=0) (actual time=3.655..3.655 rows=8005 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.025..0.025 rows=30 loops=4783)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12863.37..26569.60 rows=4762 width=30) (actual time=33.396..293.750 rows=4783 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.004..2514.759 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.004..8980.765 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.011..9098.006 rows=60045379 loops=1)
Q18,1.0,Limit  (cost=10174709.02..10174711.77 rows=100 width=39) (actual time=73693.922..73694.247 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=1967)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=1967)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.49 rows=2006 width=0) (actual time=0.934..0.934 rows=1967 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.99..6643.88 rows=2006 width=4) (actual time=1.269..32.073 rows=1967 loops=1)
Q16,1.0,Sort  (cost=412288.26..412357.45 rows=27675 width=40) (actual time=11210.496..11213.956 rows=27837 loops=1)
Q16,1.0,->  Hash  (cost=50949.53..50949.53 rows=295197 width=40) (actual time=1303.507..1303.507 rows=296075 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402641.57..410246.36 rows=27675 width=40) (actual time=10379.366..11150.313 rows=27837 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2472.36..50949.53 rows=295197 width=40) (actual time=34.886..1174.357 rows=296075 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=120216.92..1426772.38 rows=2250770 width=12) (actual time=119.514..24819.873 rows=2247156 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=120216.92..1426772.38 rows=2250770 width=12) (actual time=120.990..26039.037 rows=2247156 loops=1)
Q14,1.0,->  Hash Join  (cost=93254.22..1136988.91 rows=739924 width=29) (actual time=1389.538..24678.774 rows=749783 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7732.22..1040368.05 rows=739924 width=12) (actual time=135.308..22650.751 rows=749783 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14939074 width=8) (actual time=0.019..7852.139 rows=14854020 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737849.30 rows=14939074 width=8) (actual time=812.386..17597.455 rows=15354036 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=20) (actual time=0.010..4046.287 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2427161.63 rows=290139 width=15) (actual time=0.054..24033.490 rows=313865 loops=1)
Q12,1.0,->  Hash Join  (cost=593719.70..3029948.17 rows=290139 width=27) (actual time=8705.998..33091.492 rows=313865 loops=1)
Q12,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=20) (actual time=8644.458..8644.458 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..31.347 rows=4009 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..23.536 rows=4009 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.431..3819.870 rows=320720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=32.349..4152.906 rows=320720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.286..32.286 rows=4009 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.368..24.368 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.279..22.885 rows=4009 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..30.689 rows=4009 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826108.85 rows=58931473 width=20) (actual time=0.012..20296.787 rows=58646093 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833348.23 rows=14999066 width=12) (actual time=0.063..18112.108 rows=14808082 loops=1)
Q10,1.0,->  Hash  (cost=270639.02..270639.02 rows=586060 width=8) (actual time=6388.506..6388.506 rows=573186 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6047.12..270639.02 rows=586060 width=8) (actual time=29.436..6169.922 rows=573186 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.014..0.014 rows=0 loops=395367)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1496439)
Q19,,->  BitmapOr  (cost=12863.37..12863.37 rows=4765 width=0) (actual time=29.598..29.598 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.318..0.355 rows=0 loops=4783)
Q19,,->  BitmapAnd  (cost=6282.86..6282.86 rows=2383 width=0) (actual time=8.333..8.333 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.85..4292.85 rows=1596 width=0) (actual time=8.548..8.548 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.16..2287.16 rows=786 width=0) (actual time=9.131..9.131 rows=0 loops=1)
