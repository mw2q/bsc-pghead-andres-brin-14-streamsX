Q21,715249.0,->  Nested Loop Semi Join  (cost=2406.31..2872367.90 rows=1 width=34) (actual time=33.545..38701.951 rows=715249 loops=1)
Q3,316715.0,->  Sort  (cost=2566458.37..2574376.25 rows=3167150 width=20) (actual time=39960.047..39960.047 rows=10 loops=1)
Q18,301125.6,->  GroupAggregate  (cost=10184759.94..11012855.43 rows=30112563 width=39) (actual time=74093.800..74094.137 rows=100 loops=1)
Q18,67837.5,->  Hash Join  (cost=2185531.96..2800826.05 rows=7529968 width=39) (actual time=48742.071..54685.133 rows=111 loops=1)
Q18,67837.5,->  Hash Join  (cost=2116503.96..2618848.53 rows=7529968 width=20) (actual time=47498.438..53441.067 rows=111 loops=1)
Q18,67837.5,->  Hash  (cost=2800826.05..2800826.05 rows=7529968 width=39) (actual time=54685.370..54685.370 rows=111 loops=1)
Q18,42956.5,->  Sort  (cost=10184759.94..10260041.35 rows=30112563 width=39) (actual time=74093.790..74093.841 rows=701 loops=1)
Q21,39689.0,->  Nested Loop Anti Join  (cost=2406.88..2872369.68 rows=1 width=26) (actual time=34.393..41628.466 rows=39689 loops=1)
Q18,38754.9,->  Hash Join  (cost=2894950.65..5620805.62 rows=30112563 width=39) (actual time=54854.014..74092.703 rows=777 loops=1)
Q18,36927.4,->  Hash  (cost=2065267.15..2065267.15 rows=4098945 width=4) (actual time=47357.852..47357.852 rows=111 loops=1)
Q18,36927.4,->  HashAggregate  (cost=1973040.89..2024277.70 rows=4098945 width=8) (actual time=40709.653..47357.577 rows=111 loops=1)
Q10,28682.2,->  Sort  (cost=2300314.90..2301749.01 rows=573644 width=175) (actual time=29598.044..29598.047 rows=20 loops=1)
Q9,23442.8,->  Sort  (cost=1225111.87..1225112.21 rows=139 width=46) (actual time=96848.258..97558.963 rows=3258557 loops=1)
Q9,23442.8,->  Nested Loop  (cost=66974.74..1225102.75 rows=139 width=24) (actual time=1135.490..87349.729 rows=3258557 loops=1)
Q9,23442.8,->  Nested Loop  (cost=66974.31..1225035.38 rows=139 width=24) (actual time=1135.471..54832.039 rows=3258557 loops=1)
Q9,23442.8,->  Nested Loop  (cost=66974.01..1224990.53 rows=139 width=28) (actual time=1135.461..44053.587 rows=3258557 loops=1)
Q9,23442.8,->  Hash Join  (cost=66976.30..1225106.92 rows=139 width=46) (actual time=1135.543..90625.007 rows=3258557 loops=1)
Q2,4754.0,->  Merge Join  (cost=465618.54..888360.98 rows=1 width=190) (actual time=5141.082..7043.079 rows=4754 loops=1)
Q21,4044.0,->  HashAggregate  (cost=2872369.69..2872369.70 rows=1 width=26) (actual time=41679.578..41680.621 rows=4044 loops=1)
Q15,3711.0,->  Subquery Scan on revenue12  (cost=1433477.92..1433561.42 rows=3711 width=12) (actual time=50579.139..50584.819 rows=1 loops=1)
Q15,3711.0,->  Sort  (cost=1433781.43..1433790.71 rows=3711 width=12) (actual time=50584.842..50584.842 rows=1 loops=1)
Q15,3711.0,Merge Join  (cost=2850406.13..2855502.99 rows=3711 width=79) (actual time=50593.070..50593.073 rows=1 loops=1)
Q15,3711.0,->  HashAggregate  (cost=1433477.92..1433524.31 rows=3711 width=12) (actual time=50579.138..50584.816 rows=1 loops=1)
Q7,764.0,Sort  (cost=2118897.86..2118905.50 rows=3056 width=64) (actual time=23930.621..23930.621 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2118675.11..2118720.95 rows=3056 width=64) (actual time=23930.553..23930.560 rows=4 loops=1)
Q8,367.0,Sort  (cost=1683263.76..1683265.59 rows=734 width=38) (actual time=11129.184..11129.185 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1683215.98..1683228.82 rows=734 width=38) (actual time=11129.145..11129.147 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2872369.71..2872369.71 rows=1 width=26) (actual time=41681.749..41681.756 rows=100 loops=1)
Q21,100.0,Limit  (cost=2872369.71..2872369.71 rows=1 width=26) (actual time=41681.750..41681.766 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=888360.99..888360.99 rows=1 width=190) (actual time=7047.940..7047.957 rows=100 loops=1)
Q2,100.0,Limit  (cost=888360.99..888360.99 rows=1 width=190) (actual time=7047.941..7047.967 rows=100 loops=1)
Q11,30.8,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7045.699..7046.892 rows=10364 loops=1)
Q11,30.8,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=6954.804..7039.912 rows=10364 loops=1)
Q3,27.7,->  HashAggregate  (cost=2466345.90..2498017.40 rows=3167150 width=20) (actual time=39879.185..39937.344 rows=113980 loops=1)
Q15,26.9,->  HashAggregate  (cost=1416540.89..1416578.00 rows=3711 width=12) (actual time=24613.131..24647.006 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=742188)
Q14,13.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8071.75 rows=792375 width=0) (actual time=120.617..120.617 rows=10814720 loops=1)
Q3,10.4,->  Hash Join  (cost=770825.21..2418838.65 rows=3167150 width=20) (actual time=11221.045..39589.356 rows=301717 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2411.81 rows=319973 width=0) (actual time=34.770..34.770 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.086 rows=8 loops=434220)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.597..3.597 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.875..3.875 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.294..0.294 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2015951.15..2015951.22 rows=25 width=34) (actual time=16438.507..16438.507 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2015950.32..2015950.57 rows=25 width=34) (actual time=16438.465..16438.465 rows=5 loops=1)
Q4,5.0,Sort  (cost=1495085.69..1495085.70 rows=1 width=16) (actual time=12267.627..12267.627 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.10 rows=5 width=4) (actual time=0.009..0.009 rows=1 loops=573887)
Q4,5.0,->  HashAggregate  (cost=1495085.67..1495085.68 rows=1 width=16) (actual time=12267.580..12267.582 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=715249)
Q15,4.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..6.150 rows=20927 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5816.88 rows=577688 width=0) (actual time=27.594..27.594 rows=2558720 loops=1)
Q13,4.4,Sort  (cost=852554.61..852555.11 rows=200 width=8) (actual time=31259.720..31259.725 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852544.97..852546.97 rows=200 width=8) (actual time=31259.645..31259.653 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5834.02 rows=579402 width=0) (actual time=27.530..27.530 rows=2566400 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.009 rows=1 loops=1192772)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.012..0.013 rows=4 loops=457469)
Q17,3.6,->  Nested Loop  (cost=77.85..109404.45 rows=19252 width=4) (actual time=1.689..217.126 rows=5319 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5961.87..1494304.18 rows=156298 width=16) (actual time=27.791..11990.601 rows=526018 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.015..0.038 rows=3 loops=2013)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247544.13 rows=32986150 width=0) (actual time=119.679..119.679 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.346..0.417 rows=3 loops=21625)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54922.83 rows=7317711 width=0) (actual time=27.512..27.512 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=694628.27..694628.27 rows=3 width=20) (actual time=8754.642..8754.643 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641715.12..641715.17 rows=3 width=20) (actual time=8754.596..8754.598 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.031..0.047 rows=2 loops=6358)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=13.521..9257.086 rows=58877 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=9291.735..9291.735 rows=58877 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.272..4.272 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403119.35..404593.76 rows=589762 width=40) (actual time=10390.191..10577.757 rows=1186677 loops=1)
Q16,2.0,->  Hash Join  (cost=54735.71..346591.33 rows=589762 width=40) (actual time=1274.888..6559.175 rows=1186677 loops=1)
Q12,2.0,Sort  (cost=3038012.16..3038012.17 rows=1 width=27) (actual time=33444.463..33444.463 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038012.14..3038012.15 rows=1 width=27) (actual time=33444.416..33444.417 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347501.99..2264972.90 rows=573644 width=175) (actual time=6671.501..27251.195 rows=1148583 loops=1)
Q10,2.0,->  Hash Join  (cost=347500.43..2257083.73 rows=573644 width=153) (actual time=6671.470..26841.531 rows=1148583 loops=1)
Q10,2.0,->  Hash Join  (cost=278472.43..2179451.07 rows=573644 width=12) (actual time=5340.708..24794.256 rows=1148583 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1921470.86 rows=808322 width=34) (actual time=33.474..25910.867 rows=1536549 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.407..3719.754 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835176.39 rows=20214917 width=8) (actual time=0.012..19058.266 rows=37965800 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347039.59 rows=393111 width=38) (actual time=33.511..33775.347 rows=742188 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.366 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=9322.455..9322.563 rows=1811 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=9292.180..9321.066 rows=1811 loops=1)
Q1,1.5,Sort  (cost=4197174.72..4197174.74 rows=6 width=20) (actual time=90407.051..90407.051 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4197174.54..4197174.64 rows=6 width=20) (actual time=90407.000..90407.001 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2279314.00..2285050.44 rows=573644 width=175) (actual time=29186.622..29457.372 rows=381486 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.169..4.169 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.42 rows=140043 width=0) (actual time=737.198..737.198 rows=190758 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.43..41864.56 rows=140043 width=24) (actual time=745.896..1179.614 rows=190758 loops=1)
Q9,1.2,GroupAggregate  (cost=1225111.87..1225116.73 rows=139 width=46) (actual time=96858.579..99790.750 rows=175 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..104103.54 rows=13860739 width=0) (actual time=122.518..122.518 rows=10814720 loops=1)
Q15,1.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..104103.54 rows=13860739 width=0) (actual time=119.891..119.891 rows=10814720 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92338.69 rows=9219069 width=0) (actual time=124.470..124.470 rows=10728960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=116116 width=4) (actual time=0.015..1089.049 rows=108555 loops=1)
Q9,1.0,->  Hash Join  (cost=66973.45..352543.43 rows=461198 width=16) (actual time=1135.404..5485.057 rows=434220 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=116116 width=4) (actual time=1134.819..1134.819 rows=108555 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.734..2171.418 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.40..1635611.20 rows=118838 width=20) (actual time=7.221..8560.873 rows=121205 loops=1)
Q8,1.0,->  Nested Loop  (cost=400.97..1444837.95 rows=389611 width=16) (actual time=7.173..4425.789 rows=398184 loops=1)
Q8,1.0,->  Nested Loop  (cost=38731.84..1682293.71 rows=23760 width=16) (actual time=2277.916..11048.612 rows=24163 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.55 rows=31 width=20) (actual time=0.027..0.311 rows=30 loops=13301)
Q8,1.0,->  Hash Join  (cost=38733.41..1682740.78 rows=23760 width=38) (actual time=2277.958..11087.445 rows=24163 loops=1)
Q8,1.0,->  Hash Join  (cost=38731.55..1674624.67 rows=23768 width=16) (actual time=2277.902..10904.961 rows=24163 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2268.075..2268.075 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.18 rows=12900 width=0) (actual time=4.839..4.839 rows=13301 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=400.40..27580.80 rows=12900 width=4) (actual time=7.108..156.234 rows=13301 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.635..424.280 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.007..3914.872 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1456820 width=42) (actual time=896.948..23056.599 rows=1448288 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117766.02 rows=60606 width=64) (actual time=936.023..23832.566 rows=58595 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=896.911..11126.124 rows=1192772 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.047..845.987 rows=119325 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..36.040 rows=8098 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=896.354..896.354 rows=119325 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.357..38.357 rows=8098 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92531.42..1372814.47 rows=770942 width=8) (actual time=125.274..25734.872 rows=763194 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..483528.15 rows=2291107 width=8) (actual time=0.013..5263.012 rows=2279304 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.935..2415.313 rows=300963 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1996062.68 rows=1832432 width=46) (actual time=2549.262..15617.499 rows=1829321 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2015217.62 rows=73270 width=34) (actual time=2621.164..16352.637 rows=72820 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535043.64 rows=458221 width=38) (actual time=2549.219..8774.340 rows=457469 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2546.670..2546.670 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.913..471.515 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5961.30..270427.62 rows=577688 width=20) (actual time=27.769..6178.258 rows=573887 loops=1)
Q3,1.0,->  Hash Join  (cost=106450.40..496779.91 rows=1460371 width=12) (actual time=419.239..10499.386 rows=1451915 loops=1)
Q3,1.0,->  Hash  (cost=496779.91..496779.91 rows=1460371 width=12) (actual time=11094.287..11094.287 rows=1451915 loops=1)
Q3,1.0,->  Hash  (cost=45956.26..45956.26 rows=299350 width=4) (actual time=389.575..389.575 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.55 rows=299350 width=0) (actual time=67.491..67.491 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56752.26..405036.64 rows=7317711 width=16) (actual time=27.675..6990.794 rows=7240737 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255790.67..1748434.54 rows=32986150 width=12) (actual time=120.431..22652.649 rows=32589917 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.39..45956.26 rows=299350 width=4) (actual time=76.403..311.527 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=4) (actual time=0.012..3494.678 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=4) (actual time=7380.070..7380.070 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597220.27..641274.49 rows=58751 width=20) (actual time=8171.334..8727.254 rows=63266 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.03 rows=382139 width=0) (actual time=87.966..87.966 rows=382093 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6648.57..51957.71 rows=382139 width=4) (actual time=96.802..607.592 rows=382093 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.321..32.256 rows=4044 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.420..33.420 rows=4044 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.307..31.584 rows=4044 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=5140.570..5266.144 rows=1586890 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.293..130.083 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8049 width=30) (actual time=0.266..1162.647 rows=7980 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=140.981..4084.133 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=140.835..140.835 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.252..25.134 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..27.595 rows=3974 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.204..9.204 rows=21625 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.278..27.026 rows=3974 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.892..215.660 rows=21625 loops=1)
Q19,1.0,->  Nested Loop  (cost=12871.39..625384.09 rows=1147 width=8) (actual time=34.374..2213.627 rows=1167 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.212..4.212 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.99 rows=8127 width=0) (actual time=3.623..3.623 rows=8006 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8064 width=0) (actual time=3.858..3.858 rows=8160 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8045 width=0) (actual time=3.479..3.479 rows=8175 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.027..0.027 rows=30 loops=4880)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12866.65..26670.90 rows=4732 width=19) (actual time=33.701..141.044 rows=4880 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=16) (actual time=0.008..2705.938 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1671915.26 rows=60225126 width=8) (actual time=0.008..9952.891 rows=60045303 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1671915.26 rows=60225126 width=8) (actual time=0.012..9084.108 rows=60045303 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=2013)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.042 rows=30 loops=2013)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..67.61 rows=1918 width=0) (actual time=0.931..0.931 rows=2013 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.09..6383.85 rows=1918 width=4) (actual time=1.274..35.680 rows=2013 loops=1)
Q16,1.0,Sort  (cost=412825.14..412894.74 rows=27841 width=40) (actual time=11257.081..11261.504 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51007.37..51007.37 rows=296969 width=40) (actual time=1272.456..1272.456 rows=296834 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403119.35..410769.79 rows=27841 width=40) (actual time=10390.252..11195.332 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2486.05..51007.37 rows=296969 width=40) (actual time=34.834..1150.170 rows=296834 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=104668.11..1393958.19 rows=2258270 width=12) (actual time=120.662..22539.825 rows=2248071 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=104668.11..1393958.19 rows=2258270 width=12) (actual time=123.293..23685.620 rows=2248071 loops=1)
Q14,1.0,->  Hash Join  (cost=93791.85..1163193.48 rows=792375 width=29) (actual time=1367.625..27663.793 rows=773514 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8269.85..1065785.86 rows=792375 width=12) (actual time=121.371..25500.679 rows=773514 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446056.09 rows=14998044 width=8) (actual time=0.018..9322.808 rows=14852853 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740054.75 rows=14998044 width=8) (actual time=893.980..20326.123 rows=15352871 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.013..4641.563 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429559.93 rows=290100 width=15) (actual time=0.121..23695.513 rows=310962 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032935.39 rows=290100 width=27) (actual time=9128.901..33124.819 rows=310962 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9083.380..9083.380 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..24.367 rows=3933 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.285..32.556 rows=3933 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.214..3421.379 rows=314640 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=33.587..3229.392 rows=314640 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=33.544..33.544 rows=3933 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.156..25.156 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.257..23.719 rows=3933 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.265..31.917 rows=3933 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.30 rows=59503331 width=20) (actual time=0.008..18626.068 rows=59458347 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838827.60 rows=15043894 width=12) (actual time=0.040..16335.644 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271229.90..271229.90 rows=579402 width=8) (actual time=5337.286..5337.286 rows=573941 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5978.87..271229.90 rows=579402 width=8) (actual time=27.694..5154.450 rows=573941 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=398184)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1536549)
Q19,,->  BitmapOr  (cost=12866.65..12866.65 rows=4819 width=0) (actual time=29.810..29.810 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.51 rows=1 width=16) (actual time=0.381..0.415 rows=0 loops=4880)
Q19,,->  BitmapAnd  (cost=6283.57..6283.57 rows=2405 width=0) (actual time=8.436..8.436 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.44..4293.44 rows=1608 width=0) (actual time=8.948..8.948 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.14..2289.14 rows=806 width=0) (actual time=8.697..8.697 rows=0 loops=1)
