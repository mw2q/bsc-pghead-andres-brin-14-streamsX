Q21,708323.0,->  Nested Loop Semi Join  (cost=2406.31..2872367.90 rows=1 width=34) (actual time=34.005..38738.486 rows=708323 loops=1)
Q18,401903.6,->  GroupAggregate  (cost=10194934.85..11023861.03 rows=30142770 width=39) (actual time=71043.302..71043.548 rows=75 loops=1)
Q3,318586.3,->  Sort  (cost=2566505.93..2574470.59 rows=3185863 width=20) (actual time=37632.252..37632.253 rows=10 loops=1)
Q18,100499.4,->  Hash Join  (cost=2187511.16..2803376.66 rows=7537460 width=39) (actual time=47006.133..52806.072 rows=75 loops=1)
Q18,100499.4,->  Hash Join  (cost=2118483.16..2621286.76 rows=7537460 width=20) (actual time=46085.428..51885.069 rows=75 loops=1)
Q18,100499.4,->  Hash  (cost=2803376.66..2803376.66 rows=7537460 width=39) (actual time=52806.252..52806.252 rows=75 loops=1)
Q18,57414.8,->  Sort  (cost=10194934.85..10270291.78 rows=30142770 width=39) (actual time=71043.291..71043.320 rows=525 loops=1)
Q18,57414.8,->  Hash Join  (cost=2897594.91..5626184.23 rows=30142770 width=39) (actual time=52904.676..71042.583 rows=525 loops=1)
Q18,54652.6,->  Hash  (cost=2067246.35..2067246.35 rows=4098945 width=4) (actual time=45960.544..45960.544 rows=75 loops=1)
Q18,54652.6,->  HashAggregate  (cost=1975020.08..2026256.90 rows=4098945 width=8) (actual time=39770.496..45960.350 rows=75 loops=1)
Q21,40114.0,->  Nested Loop Anti Join  (cost=2406.88..2872369.68 rows=1 width=26) (actual time=34.416..41593.153 rows=40114 loops=1)
Q9,29320.3,->  Sort  (cost=1057222.14..1057222.42 rows=112 width=46) (actual time=99905.267..100628.816 rows=3283883 loops=1)
Q9,29320.3,->  Nested Loop  (cost=66699.47..1057214.66 rows=112 width=24) (actual time=674.474..90333.264 rows=3283883 loops=1)
Q9,29320.3,->  Nested Loop  (cost=66699.03..1057160.39 rows=112 width=24) (actual time=674.457..51313.744 rows=3283883 loops=1)
Q9,29320.3,->  Nested Loop  (cost=66698.74..1057124.25 rows=112 width=28) (actual time=674.449..40809.930 rows=3283883 loops=1)
Q9,29320.3,->  Hash Join  (cost=66701.03..1057218.33 rows=112 width=46) (actual time=674.537..93650.893 rows=3283883 loops=1)
Q10,28245.5,->  Sort  (cost=2301214.80..2302627.08 rows=564911 width=175) (actual time=30954.601..30954.605 rows=20 loops=1)
Q2,4681.0,->  Merge Join  (cost=465618.54..887090.78 rows=1 width=190) (actual time=7550.059..9501.548 rows=4681 loops=1)
Q21,4004.0,->  HashAggregate  (cost=2872369.69..2872369.70 rows=1 width=26) (actual time=41653.554..41654.603 rows=4004 loops=1)
Q15,3748.0,->  Subquery Scan on revenue14  (cost=1374214.72..1374299.05 rows=3748 width=12) (actual time=50939.690..50955.292 rows=1 loops=1)
Q15,3748.0,->  Sort  (cost=1374521.53..1374530.90 rows=3748 width=12) (actual time=50955.312..50955.312 rows=1 loops=1)
Q15,3748.0,Merge Join  (cost=2731814.16..2736911.58 rows=3748 width=79) (actual time=50969.621..50969.624 rows=1 loops=1)
Q15,3748.0,->  HashAggregate  (cost=1374214.72..1374261.57 rows=3748 width=12) (actual time=50939.688..50955.289 rows=1 loops=1)
Q7,764.0,Sort  (cost=2133549.57..2133557.21 rows=3056 width=64) (actual time=20361.000..20361.000 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2133326.83..2133372.67 rows=3056 width=64) (actual time=20360.942..20360.945 rows=4 loops=1)
Q8,367.0,Sort  (cost=1791827.91..1791829.75 rows=734 width=38) (actual time=10592.779..10592.780 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1791780.13..1791792.98 rows=734 width=38) (actual time=10592.740..10592.742 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2872369.71..2872369.71 rows=1 width=26) (actual time=41655.737..41655.744 rows=100 loops=1)
Q21,100.0,Limit  (cost=2872369.71..2872369.71 rows=1 width=26) (actual time=41655.739..41655.756 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887090.79..887090.80 rows=1 width=190) (actual time=9506.442..9506.457 rows=100 loops=1)
Q2,100.0,Limit  (cost=887090.79..887090.80 rows=1 width=190) (actual time=9506.443..9506.469 rows=100 loops=1)
Q11,35.7,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7173.321..7174.398 rows=8951 loops=1)
Q11,35.7,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=7084.472..7168.292 rows=8951 loops=1)
Q3,27.9,->  HashAggregate  (cost=2465801.95..2497660.58 rows=3185863 width=20) (actual time=37565.487..37611.198 rows=114004 loops=1)
Q15,26.6,->  HashAggregate  (cost=1357208.00..1357245.48 rows=3748 width=12) (actual time=25199.054..25238.068 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=735024)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7871.44 rows=772344 width=0) (actual time=133.762..133.762 rows=10782720 loops=1)
Q3,10.5,->  Hash Join  (cost=770983.74..2418014.00 rows=3185863 width=20) (actual time=9285.190..37279.864 rows=301214 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2421.46 rows=321260 width=0) (actual time=34.950..34.950 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.079 rows=7 loops=437952)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.599..3.599 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.026..4.026 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.232..0.232 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.251..0.251 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.238..0.238 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2001529.99..2001530.05 rows=25 width=34) (actual time=16981.109..16981.109 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2001529.16..2001529.41 rows=25 width=34) (actual time=16981.065..16981.065 rows=5 loops=1)
Q4,5.0,Sort  (cost=1470828.48..1470828.49 rows=1 width=16) (actual time=14163.150..14163.151 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.24 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=554786)
Q4,5.0,->  HashAggregate  (cost=1470828.46..1470828.47 rows=1 width=16) (actual time=14163.103..14163.105 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=708323)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5612.69 rows=557269 width=0) (actual time=27.552..27.552 rows=2543360 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5745.86 rows=570586 width=0) (actual time=27.607..27.607 rows=2568960 loops=1)
Q13,4.3,Sort  (cost=853339.49..853339.99 rows=200 width=8) (actual time=31369.700..31369.705 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=853329.85..853331.85 rows=200 width=8) (actual time=31369.631..31369.640 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.008..0.009 rows=1 loops=1203530)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.015..0.016 rows=4 loops=453952)
Q17,3.7,->  Nested Loop  (cost=82.83..122635.60 rows=20306 width=4) (actual time=1.705..215.860 rows=5466 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.78..57.56 rows=11 width=12) (actual time=0.015..0.037 rows=3 loops=2043)
Q4,3.3,->  Nested Loop Semi Join  (cost=5752.58..1470070.09 rows=151675 width=16) (actual time=27.771..13855.717 rows=508874 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247003.98 rows=32914131 width=0) (actual time=125.912..125.912 rows=10803200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.381..0.451 rows=3 loops=21890)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55036.30 rows=7332840 width=0) (actual time=27.563..27.563 rows=2568960 loops=1)
Q15,2.7,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.023..10.723 rows=35977 loops=1)
Q22,2.3,Sort  (cost=698737.64..698737.65 rows=3 width=20) (actual time=9455.112..9455.113 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645839.40..645839.45 rows=3 width=20) (actual time=9455.068..9455.071 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.034..0.050 rows=2 loops=6405)
Q20,2.0,->  Nested Loop  (cost=754.49..11669238.64 rows=29156 width=4) (actual time=14.685..10255.577 rows=59400 loops=1)
Q20,2.0,->  Hash  (cost=11669238.64..11669238.64 rows=29156 width=4) (actual time=10293.762..10293.762 rows=59400 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.634..4.634 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403459.93..404940.58 rows=592262 width=40) (actual time=10130.407..10287.653 rows=1189274 loops=1)
Q16,2.0,->  Hash Join  (cost=54793.59..346674.21 rows=592262 width=40) (actual time=1284.547..6518.495 rows=1189274 loops=1)
Q12,2.0,Sort  (cost=3065161.56..3065161.56 rows=1 width=27) (actual time=33017.797..33017.798 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3065161.54..3065161.55 rows=1 width=27) (actual time=33017.748..33017.749 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=347422.18..2266410.84 rows=564911 width=175) (actual time=6555.402..28599.842 rows=1136713 loops=1)
Q10,2.0,->  Hash Join  (cost=347420.62..2258641.75 rows=564911 width=153) (actual time=6555.373..28177.148 rows=1136713 loops=1)
Q10,2.0,->  Hash Join  (cost=278392.62..2181140.09 rows=564911 width=12) (actual time=5181.653..25978.900 rows=1136713 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.444..3685.062 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1835176.39 rows=20214917 width=8) (actual time=0.016..18897.120 rows=37965800 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2347039.59 rows=393111 width=38) (actual time=33.972..34092.725 rows=735024 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1921470.86 rows=808322 width=34) (actual time=33.926..26294.894 rows=1521115 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.037..0.405 rows=56 loops=1)
Q9,1.5,GroupAggregate  (cost=1057222.14..1057226.06 rows=112 width=46) (actual time=99915.328..103045.142 rows=175 loops=1)
Q20,1.5,Sort  (cost=11672045.64..11672048.56 rows=1166 width=51) (actual time=10325.952..10326.065 rows=1821 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669646.09..11671986.25 rows=1166 width=51) (actual time=10294.213..10323.826 rows=1821 loops=1)
Q1,1.5,Sort  (cost=4207713.87..4207713.89 rows=6 width=20) (actual time=90582.935..90582.935 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4207713.69..4207713.79 rows=6 width=20) (actual time=90582.880..90582.883 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.156..4.156 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2280533.62..2286182.73 rows=564911 width=175) (actual time=30614.596..30816.603 rows=378834 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2873.95 rows=139893 width=0) (actual time=771.182..771.182 rows=190779 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2908.93..41859.12 rows=139893 width=24) (actual time=780.075..1247.035 rows=190779 loops=1)
Q18,1.3,Limit  (cost=10194934.85..10194937.60 rows=100 width=39) (actual time=71043.305..71043.556 rows=75 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..65522.00 rows=94094 width=4) (actual time=0.009..642.192 rows=109488 loops=1)
Q9,1.1,->  Hash Join  (cost=66698.18..351393.46 rows=373729 width=16) (actual time=674.424..5107.008 rows=437952 loops=1)
Q9,1.1,->  Hash  (cost=65522.00..65522.00 rows=94094 width=4) (actual time=673.929..673.929 rows=109488 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..93071.24 rows=9292324 width=0) (actual time=120.658..120.658 rows=10814720 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.715..2243.895 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=418.21..1743671.72 rows=125293 width=20) (actual time=6.940..7926.728 rows=122145 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.77..1542529.44 rows=410774 width=16) (actual time=6.889..4215.230 rows=403440 loops=1)
Q8,1.0,->  Nested Loop  (cost=38748.65..1790807.88 rows=25050 width=16) (actual time=2362.207..10510.093 rows=24808 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.68 rows=32 width=20) (actual time=0.025..0.290 rows=30 loops=13449)
Q8,1.0,->  Hash Join  (cost=38750.21..1791279.13 rows=25050 width=38) (actual time=2362.250..10550.354 rows=24808 loops=1)
Q8,1.0,->  Hash Join  (cost=38748.36..1782722.30 rows=25059 width=16) (actual time=2362.195..10364.968 rows=24808 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2352.726..2352.726 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.83 rows=13520 width=0) (actual time=4.561..4.561 rows=13449 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.21..28347.82 rows=13520 width=4) (actual time=6.819..181.459 rows=13449 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.634..438.638 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=8) (actual time=0.007..2896.505 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2120523.42 rows=1466962 width=42) (actual time=706.300..19641.787 rows=1458492 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2132411.41 rows=61028 width=64) (actual time=744.930..20270.137 rows=58481 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534837.31 rows=1211997 width=30) (actual time=706.256..8608.602 rows=1203530 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..664.808 rows=120138 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..36.011 rows=7982 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=705.753..705.753 rows=120138 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.204..38.204 rows=7982 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=93166.86..1383623.15 rows=382462 width=8) (actual time=121.555..26024.196 rows=381161 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..480180.04 rows=2275242 width=8) (actual time=0.013..4493.356 rows=2279058 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=4.713..2436.268 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1981746.76 rows=1819752 width=46) (actual time=2568.163..16127.443 rows=1817474 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2000801.53 rows=72763 width=34) (actual time=2645.544..16892.362 rows=72118 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..531604.31 rows=455048 width=38) (actual time=2568.136..8009.631 rows=453952 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2564.933..2564.933 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.064..475.778 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5752.01..268392.05 rows=557269 width=20) (actual time=27.737..5467.941 rows=554786 loops=1)
Q3,1.0,->  Hash Join  (cost=106654.77..497348.56 rows=1472214 width=12) (actual time=758.568..8621.059 rows=1450650 loops=1)
Q3,1.0,->  Hash  (cost=497348.56..497348.56 rows=1472214 width=12) (actual time=9149.138..9149.138 rows=1450650 loops=1)
Q3,1.0,->  Hash  (cost=46020.82..46020.82 rows=301155 width=4) (actual time=728.328..728.328 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.09 rows=301155 width=0) (actual time=68.323..68.323 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56869.51..405343.01 rows=7332840 width=16) (actual time=27.724..4950.414 rows=7253411 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255232.51..1746976.15 rows=32914131 width=12) (actual time=126.669..22047.968 rows=32540143 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.38..46020.82 rows=301155 width=4) (actual time=77.413..634.905 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.017..3594.903 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=7967.016..7967.016 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601354.42..645399.24 rows=58688 width=20) (actual time=8825.403..9427.406 rows=63627 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6549.99 rows=381730 width=0) (actual time=90.437..90.437 rows=382233 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6645.42..51943.83 rows=381730 width=4) (actual time=99.467..640.449 rows=382233 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.303..32.717 rows=4004 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.862..33.862 rows=4004 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.287..32.053 rows=4004 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=7549.759..7679.570 rows=1603279 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.280..152.756 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8017 width=30) (actual time=0.095..1169.979 rows=8018 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=164.147..6376.043 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=164.001..164.001 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.243..29.655 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.302..28.201 rows=3933 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=10.051..10.051 rows=21890 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.286..27.598 rows=3933 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.852..356.729 rows=21890 loops=1)
Q19,1.0,->  Nested Loop  (cost=12865.53..633049.28 rows=1143 width=8) (actual time=35.529..1753.975 rows=1184 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.169..4.169 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.31 rows=8061 width=0) (actual time=3.660..3.660 rows=7903 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.83 rows=8013 width=0) (actual time=3.494..3.494 rows=7978 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.59 rows=7989 width=0) (actual time=3.705..3.705 rows=8047 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.96..26622.15 rows=4784 width=30) (actual time=33.690..304.703 rows=4842 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.006..2890.603 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.005..9123.881 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.011..8000.912 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.043 rows=30 loops=2043)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.043 rows=30 loops=2043)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.54 rows=2011 width=0) (actual time=0.960..0.960 rows=2043 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.04..6659.05 rows=2011 width=4) (actual time=1.305..35.943 rows=2043 loops=1)
Q16,1.0,Sort  (cost=413207.71..413277.60 rows=27959 width=40) (actual time=10949.415..10952.779 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51049.51..51049.51 rows=298228 width=40) (actual time=1281.579..1281.579 rows=297487 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403459.93..411142.79 rows=27959 width=40) (actual time=10130.459..10888.917 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2496.01..51049.51 rows=298228 width=40) (actual time=35.015..1157.023 rows=297487 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86429.49 rows=11504199 width=0) (actual time=132.985..132.985 rows=10750720 loops=1)
Q15,1.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..86429.49 rows=11504199 width=0) (actual time=118.883..118.883 rows=10750720 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=86996.38..1334532.37 rows=2267563 width=12) (actual time=119.686..22899.256 rows=2246369 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=86996.38..1334532.37 rows=2267563 width=12) (actual time=133.942..23353.593 rows=2246369 loops=1)
Q14,1.0,->  Hash Join  (cost=93586.53..1152452.23 rows=772344 width=29) (actual time=1758.154..26097.786 rows=774601 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8064.53..1055345.07 rows=772344 width=12) (actual time=134.583..23674.571 rows=774601 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=15059303 width=8) (actual time=0.019..6986.117 rows=14838104 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740533.33 rows=15059303 width=8) (actual time=1141.740..19687.912 rows=15338125 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.009..3991.704 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2451285.06 rows=292322 width=15) (actual time=0.030..23292.957 rows=311965 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..3060045.91 rows=292322 width=27) (actual time=9141.802..32725.993 rows=311965 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=9071.740..9071.740 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.287..36.605 rows=4044 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.277..24.441 rows=4044 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.384..3446.311 rows=323520 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=37.665..3320.207 rows=323520 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=37.615..37.615 rows=4044 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.311..25.311 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.252..23.838 rows=4044 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.266..35.933 rows=4044 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826108.85 rows=59540121 width=20) (actual time=0.019..19300.595 rows=59256298 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1840628.50 rows=15058628 width=12) (actual time=0.016..17557.952 rows=14822462 loops=1)
Q10,1.0,->  Hash  (cost=271260.30..271260.30 rows=570586 width=8) (actual time=5177.129..5177.129 rows=568338 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5888.51..271260.30 rows=570586 width=8) (actual time=27.774..4985.530 rows=568338 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=403440)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1521115)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..126.75 rows=1 width=16) (actual time=0.267..0.298 rows=0 loops=4842)
Q19,,->  BitmapOr  (cost=12864.96..12864.96 rows=4788 width=0) (actual time=29.768..29.768 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6283.27..6283.27 rows=2395 width=0) (actual time=8.384..8.384 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.70..4292.70 rows=1593 width=0) (actual time=8.651..8.651 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.49..2288.49 rows=799 width=0) (actual time=9.077..9.077 rows=0 loops=1)
