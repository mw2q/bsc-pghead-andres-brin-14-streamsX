Q21,694229.0,->  Nested Loop Semi Join  (cost=2406.31..2843835.91 rows=1 width=34) (actual time=50.968..34253.849 rows=694229 loops=1)
Q3,314873.3,->  Sort  (cost=2536123.38..2543995.21 rows=3148733 width=20) (actual time=33788.418..33788.418 rows=10 loops=1)
Q18,300827.5,->  GroupAggregate  (cost=10174709.02..11001984.64 rows=30082750 width=39) (actual time=72459.410..72459.753 rows=100 loops=1)
Q15,100000.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..0.022 rows=1 loops=1)
Q18,67770.0,->  Hash Join  (cost=2183578.59..2798301.27 rows=7522476 width=39) (actual time=46123.980..52534.806 rows=111 loops=1)
Q18,67770.0,->  Hash Join  (cost=2114550.59..2616436.13 rows=7522476 width=20) (actual time=45268.145..51678.572 rows=111 loops=1)
Q18,67770.0,->  Hash  (cost=2798301.27..2798301.27 rows=7522476 width=39) (actual time=52535.082..52535.082 rows=111 loops=1)
Q18,42914.0,->  Sort  (cost=10174709.02..10249915.89 rows=30082750 width=39) (actual time=72459.397..72459.446 rows=701 loops=1)
Q21,39113.0,->  Nested Loop Anti Join  (cost=2406.88..2843837.69 rows=1 width=26) (actual time=51.051..37116.528 rows=39113 loops=1)
Q18,38716.5,->  Hash Join  (cost=2892332.22..5615488.49 rows=30082750 width=39) (actual time=52584.634..72458.200 rows=777 loops=1)
Q18,36927.4,->  Hash  (cost=2063313.78..2063313.78 rows=4098945 width=4) (actual time=45140.831..45140.831 rows=111 loops=1)
Q18,36927.4,->  HashAggregate  (cost=1971087.51..2022324.33 rows=4098945 width=8) (actual time=38771.833..45140.521 rows=111 loops=1)
Q10,28478.4,->  Sort  (cost=2291210.98..2292634.91 rows=569569 width=175) (actual time=33378.977..33378.981 rows=20 loops=1)
Q9,25195.6,->  Sort  (cost=1174865.41..1174865.74 rows=130 width=46) (actual time=95880.807..96575.323 rows=3275432 loops=1)
Q9,25195.6,->  Nested Loop  (cost=66874.64..1174856.85 rows=130 width=24) (actual time=899.953..86346.189 rows=3275432 loops=1)
Q9,25195.6,->  Nested Loop  (cost=66874.21..1174793.84 rows=130 width=24) (actual time=899.932..54094.243 rows=3275432 loops=1)
Q9,25195.6,->  Nested Loop  (cost=66873.92..1174751.89 rows=130 width=28) (actual time=899.921..43350.484 rows=3275432 loops=1)
Q9,25195.6,->  Hash Join  (cost=66876.21..1174860.85 rows=130 width=46) (actual time=900.027..89592.725 rows=3275432 loops=1)
Q2,4669.0,->  Merge Join  (cost=465618.54..886553.39 rows=1 width=190) (actual time=6067.609..7972.872 rows=4669 loops=1)
Q21,3934.0,->  HashAggregate  (cost=2843837.69..2843837.70 rows=1 width=26) (actual time=37167.568..37168.659 rows=3934 loops=1)
Q7,764.0,Sort  (cost=2123082.96..2123090.60 rows=3056 width=64) (actual time=23542.174..23542.175 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2122860.22..2122906.06 rows=3056 width=64) (actual time=23542.111..23542.120 rows=4 loops=1)
Q8,367.0,Sort  (cost=1785268.55..1785270.38 rows=734 width=38) (actual time=12022.441..12022.441 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1785220.77..1785233.61 rows=734 width=38) (actual time=12022.399..12022.399 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=37169.779..37169.785 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=37169.780..37169.797 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886553.40..886553.41 rows=1 width=190) (actual time=7977.632..7977.643 rows=100 loops=1)
Q2,100.0,Limit  (cost=886553.40..886553.41 rows=1 width=190) (actual time=7977.633..7977.658 rows=100 loops=1)
Q11,34.6,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7866.055..7867.140 rows=9241 loops=1)
Q11,34.6,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=7778.904..7860.798 rows=9241 loops=1)
Q3,27.6,->  HashAggregate  (cost=2436593.06..2468080.39 rows=3148733 width=20) (actual time=33718.610..33767.248 rows=113875 loops=1)
Q15,26.5,->  HashAggregate  (cost=2003611.20..2003648.81 rows=3761 width=12) (actual time=19581.725..19612.965 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=720499)
Q14,14.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7750.16 rows=760216 width=0) (actual time=133.914..133.914 rows=10766080 loops=1)
Q3,10.4,->  Hash Join  (cost=762436.96..2389362.06 rows=3148733 width=20) (actual time=8898.518..33457.834 rows=300767 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2422.11 rows=321347 width=0) (actual time=34.970..34.970 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.016..0.085 rows=8 loops=436376)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.595..3.595 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.589..3.589 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.248..0.248 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.260..0.260 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.273..0.273 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1968465.97..1968466.03 rows=25 width=34) (actual time=17842.016..17842.016 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1968465.14..1968465.39 rows=25 width=34) (actual time=17841.977..17841.977 rows=5 loops=1)
Q4,5.0,Sort  (cost=1498469.25..1498469.26 rows=1 width=16) (actual time=13398.664..13398.665 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.12 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=573992)
Q4,5.0,->  HashAggregate  (cost=1498469.23..1498469.24 rows=1 width=16) (actual time=13398.614..13398.614 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=694229)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5820.21 rows=578021 width=0) (actual time=27.844..27.844 rows=2571520 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5793.03 rows=575303 width=0) (actual time=27.343..27.343 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=850353.53..850354.03 rows=200 width=8) (actual time=29446.214..29446.217 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=850343.89..850345.89 rows=200 width=8) (actual time=29446.142..29446.150 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1200431)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.012..0.014 rows=4 loops=454892)
Q17,3.7,->  Nested Loop  (cost=82.46..112730.65 rows=19903 width=4) (actual time=1.805..200.367 rows=5254 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5965.28..1497691.14 rows=155619 width=16) (actual time=28.034..13106.909 rows=526303 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.015..0.036 rows=3 loops=1946)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61686.46 rows=8219528 width=0) (actual time=27.301..27.301 rows=2545920 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243791.74 rows=32485832 width=0) (actual time=117.919..117.919 rows=10676480 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.298..0.370 rows=3 loops=21998)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54460.47 rows=7256063 width=0) (actual time=27.843..27.843 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=698746.70..698746.71 rows=3 width=20) (actual time=9994.754..9994.754 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645843.32..645843.37 rows=3 width=20) (actual time=9994.710..9994.712 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.035..0.051 rows=2 loops=6345)
Q20,2.0,->  Nested Loop  (cost=754.49..11669238.64 rows=29156 width=4) (actual time=13.469..8420.195 rows=59749 loops=1)
Q20,2.0,->  Hash  (cost=11669238.64..11669238.64 rows=29156 width=4) (actual time=8455.720..8455.720 rows=59749 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.665..4.665 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403483.19..404964.27 rows=592433 width=40) (actual time=9781.258..9944.952 rows=1190345 loops=1)
Q16,2.0,->  Hash Join  (cost=54797.51..346679.84 rows=592433 width=40) (actual time=1006.805..6130.535 rows=1190345 loops=1)
Q12,2.0,Sort  (cost=3040996.61..3040996.62 rows=1 width=27) (actual time=34846.103..34846.103 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3040996.60..3040996.60 rows=1 width=27) (actual time=34846.058..34846.058 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346335.25..2256120.04 rows=569569 width=175) (actual time=8204.265..30943.947 rows=1148653 loops=1)
Q10,2.0,->  Hash Join  (cost=346333.69..2248286.91 rows=569569 width=153) (actual time=8204.234..30518.267 rows=1148653 loops=1)
Q10,2.0,->  Hash Join  (cost=277305.69..2170715.37 rows=569569 width=12) (actual time=6721.208..28174.575 rows=1148653 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.435..3549.048 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.30 rows=20015155 width=8) (actual time=0.003..16759.188 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323804.50 rows=389226 width=38) (actual time=50.893..30124.841 rows=720499 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902506.79 rows=800334 width=34) (actual time=50.876..23062.571 rows=1490036 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.036..0.394 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672045.64..11672048.56 rows=1166 width=51) (actual time=8487.324..8487.432 rows=1777 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669646.09..11671986.25 rows=1166 width=51) (actual time=8456.176..8485.867 rows=1777 loops=1)
Q1,1.5,Sort  (cost=4227317.04..4227317.06 rows=6 width=20) (actual time=90410.695..90410.695 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4227316.86..4227316.96 rows=6 width=20) (actual time=90410.639..90410.641 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.191..4.191 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2270359.27..2276054.96 rows=569569 width=175) (actual time=33035.897..33240.609 rows=381747 loops=1)
Q9,1.3,GroupAggregate  (cost=1174865.41..1174869.96 rows=130 width=46) (actual time=95891.284..98822.022 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.44 rows=139945 width=0) (actual time=743.317..743.317 rows=190965 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.43..41860.99 rows=139945 width=24) (actual time=752.306..1362.771 rows=190965 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91330.08 rows=9118208 width=0) (actual time=119.615..119.615 rows=10718720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=108108 width=4) (actual time=0.021..860.823 rows=109094 loops=1)
Q9,1.0,->  Hash Join  (cost=66873.35..352125.26 rows=429391 width=16) (actual time=899.853..5323.697 rows=436376 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=108108 width=4) (actual time=899.277..899.277 rows=109094 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.737..2117.691 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.84..1737175.50 rows=124486 width=20) (actual time=7.439..9501.664 rows=121932 loops=1)
Q8,1.0,->  Nested Loop  (cost=417.41..1537332.98 rows=408126 width=16) (actual time=7.397..4652.777 rows=402780 loops=1)
Q8,1.0,->  Nested Loop  (cost=38748.28..1784254.75 rows=24889 width=16) (actual time=2228.584..11941.378 rows=24393 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.68 rows=32 width=20) (actual time=0.027..0.324 rows=30 loops=13383)
Q8,1.0,->  Hash Join  (cost=38749.85..1784722.99 rows=24889 width=38) (actual time=2228.628..11980.483 rows=24393 loops=1)
Q8,1.0,->  Hash Join  (cost=38747.99..1776221.44 rows=24897 width=16) (actual time=2228.572..11796.893 rows=24393 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2218.443..2218.443 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.48 rows=13473 width=0) (actual time=5.088..5.088 rows=13383 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.84..28291.02 rows=13473 width=4) (actual time=7.343..181.973 rows=13383 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.631..413.423 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=8) (actual time=0.007..3008.247 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2110101.54 rows=1459727 width=42) (actual time=643.106..22791.392 rows=1460870 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2121949.31 rows=60727 width=64) (actual time=682.884..23446.253 rows=58091 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532478.49 rows=1205994 width=30) (actual time=643.078..8821.314 rows=1200431 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.047..595.802 rows=119748 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.041..36.374 rows=7919 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=642.462..642.462 rows=119748 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=38.691..38.691 rows=7919 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91528.52..1368483.20 rows=793738 width=8) (actual time=120.478..25756.627 rows=794344 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.691..2005.434 rows=299436 loops=1)
Q5,1.0,->  Nested Loop  (cost=100604.34..1948500.10 rows=1841759 width=46) (actual time=2148.843..16944.301 rows=1817996 loops=1)
Q5,1.0,->  Hash Join  (cost=105283.34..1967728.71 rows=73643 width=34) (actual time=2205.066..17751.809 rows=72818 loops=1)
Q5,1.0,->  Hash Join  (cost=100603.78..491671.45 rows=460548 width=38) (actual time=2148.822..9991.506 rows=454892 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2118.967..2118.967 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62262.14..440089.06 rows=2302739 width=8) (actual time=27.462..6812.791 rows=2277722 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.622..391.216 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5964.71..271701.03 rows=578021 width=20) (actual time=28.011..5685.933 rows=573992 loops=1)
Q3,1.0,->  Hash Join  (cost=106059.74..492313.77 rows=1456800 width=12) (actual time=730.425..8195.807 rows=1452937 loops=1)
Q3,1.0,->  Hash  (cost=492313.77..492313.77 rows=1456800 width=12) (actual time=8767.328..8767.328 rows=1452937 loops=1)
Q3,1.0,->  Hash  (cost=46020.82..46020.82 rows=301155 width=4) (actual time=698.989..698.989 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.09 rows=301155 width=0) (actual time=72.585..72.585 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56274.49..400750.28 rows=7256063 width=16) (actual time=28.005..4436.856 rows=7265636 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251913.20..1725529.10 rows=32485832 width=12) (actual time=118.673..18729.722 rows=32491036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.38..46020.82 rows=301155 width=4) (actual time=83.154..591.425 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=4) (actual time=0.020..3968.558 rows=15000000 loops=1)
Q22,1.0,->  Hash  (cost=408509.11..408509.11 rows=15194911 width=4) (actual time=8412.378..8412.378 rows=15000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=601354.93..645403.00 rows=58710 width=20) (actual time=9210.881..9964.744 rows=63783 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6551.04 rows=381871 width=0) (actual time=88.707..88.707 rows=382305 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6646.50..51948.62 rows=381871 width=4) (actual time=97.802..611.969 rows=382305 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.276..49.469 rows=3934 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=50.821..50.821 rows=3934 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.265..48.635 rows=3934 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6067.434..6192.889 rows=1603891 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.311..129.789 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8003 width=30) (actual time=0.012..1135.654 rows=7943 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=141.179..4960.382 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=141.030..141.030 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.257..25.103 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.295..28.101 rows=4021 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.131..9.131 rows=21998 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.276..27.501 rows=4021 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.908..254.939 rows=21998 loops=1)
Q19,1.0,->  Nested Loop  (cost=12868.65..630860.59 rows=1138 width=8) (actual time=39.268..2107.302 rows=1174 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.199..4.199 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8029 width=0) (actual time=3.707..3.707 rows=7865 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.83 rows=8013 width=0) (actual time=3.549..3.549 rows=7978 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.87 rows=7916 width=0) (actual time=3.829..3.829 rows=8159 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.026..0.026 rows=30 loops=4791)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12863.90..26580.34 rows=4767 width=30) (actual time=34.082..277.215 rows=4791 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.008..2862.230 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.004..9466.554 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.045..9813.202 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=1946)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=1946)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.20 rows=1977 width=0) (actual time=1.020..1.020 rows=1946 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.69..6558.74 rows=1977 width=4) (actual time=1.344..35.803 rows=1946 loops=1)
Q16,1.0,Sort  (cost=413233.83..413303.75 rows=27967 width=40) (actual time=10614.394..10617.906 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51052.36..51052.36 rows=298314 width=40) (actual time=1003.978..1003.978 rows=297754 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403483.19..411168.27 rows=27967 width=40) (actual time=9781.308..10553.875 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2496.69..51052.36 rows=298314 width=40) (actual time=35.027..888.693 rows=297754 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1980882.05 rows=2272915 width=12) (actual time=0.025..17735.853 rows=2250245 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1980882.05 rows=2272915 width=12) (actual time=0.034..19217.481 rows=2250245 loops=1)
Q14,1.0,->  Hash Join  (cost=93462.22..1146009.98 rows=760216 width=29) (actual time=1671.180..27933.133 rows=771130 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7940.22..1049084.74 rows=760216 width=12) (actual time=134.699..25429.216 rows=771130 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=14954035 width=8) (actual time=0.024..8125.958 rows=14854075 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738073.71 rows=14954035 width=8) (actual time=1588.756..18961.003 rows=15354096 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.010..4774.171 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431960.47 rows=289924 width=15) (actual time=0.126..24331.092 rows=311072 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035922.93 rows=289924 width=27) (actual time=9863.805..34520.580 rows=311072 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=9787.568..9787.568 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.335..32.305 rows=4010 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.323..24.378 rows=4010 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.279..3344.890 rows=320800 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=33.399..4092.783 rows=320800 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=33.296..33.296 rows=4010 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.193..25.193 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.296..23.763 rows=4010 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.314..31.648 rows=4010 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1840628.50 rows=59667209 width=20) (actual time=0.014..19219.468 rows=58919521 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831523.48 rows=14984138 width=12) (actual time=0.013..17857.924 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=270114.40..270114.40 rows=575303 width=8) (actual time=6716.224..6716.224 rows=574178 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5936.86..270114.40 rows=575303 width=8) (actual time=27.534..6470.701 rows=574178 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=402780)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1490036)
Q19,,->  BitmapOr  (cost=12863.90..12863.90 rows=4770 width=0) (actual time=30.236..30.236 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.340..0.376 rows=0 loops=4791)
Q19,,->  BitmapAnd  (cost=6283.27..6283.27 rows=2395 width=0) (actual time=8.543..8.543 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4291.97..4291.97 rows=1579 width=0) (actual time=8.876..8.876 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.16..2288.16 rows=796 width=0) (actual time=9.207..9.207 rows=0 loops=1)
Q15,,->  Subquery Scan on revenue1  (cost=2020658.06..2020742.69 rows=3761 width=12) (actual time=41026.153..41026.153 rows=0 loops=1)
Q15,,->  Sort  (cost=2020966.03..2020975.43 rows=3761 width=12) (actual time=41026.167..41026.167 rows=0 loops=1)
Q15,,Merge Join  (cost=4024662.16..4029759.77 rows=3761 width=79) (actual time=41026.193..41026.193 rows=0 loops=1)
Q15,,->  HashAggregate  (cost=2020658.06..2020705.08 rows=3761 width=12) (actual time=41026.153..41026.153 rows=0 loops=1)
