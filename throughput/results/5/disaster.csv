Q21,711401.0,->  Nested Loop Semi Join  (cost=2406.31..2843835.91 rows=1 width=34) (actual time=58.717..35141.538 rows=711401 loops=1)
Q18,358842.5,->  GroupAggregate  (cost=10194934.85..11023861.03 rows=30142770 width=39) (actual time=71286.513..71286.785 rows=84 loops=1)
Q3,316842.0,->  Sort  (cost=2549211.10..2557132.15 rows=3168420 width=20) (actual time=36753.251..36753.253 rows=10 loops=1)
Q18,89731.6,->  Hash Join  (cost=2187511.16..2803376.66 rows=7537460 width=39) (actual time=46219.621..52343.960 rows=84 loops=1)
Q18,89731.6,->  Hash Join  (cost=2118483.16..2621286.76 rows=7537460 width=20) (actual time=45337.828..51461.924 rows=84 loops=1)
Q18,89731.6,->  Hash  (cost=2803376.66..2803376.66 rows=7537460 width=39) (actual time=52344.119..52344.119 rows=84 loops=1)
Q18,51263.2,->  Sort  (cost=10194934.85..10270291.78 rows=30142770 width=39) (actual time=71286.503..71286.537 rows=588 loops=1)
Q18,51263.2,->  Hash Join  (cost=2897594.91..5626184.23 rows=30142770 width=39) (actual time=52939.228..71285.744 rows=588 loops=1)
Q18,48796.9,->  Hash  (cost=2067246.35..2067246.35 rows=4098945 width=4) (actual time=45218.883..45218.883 rows=84 loops=1)
Q18,48796.9,->  HashAggregate  (cost=1975020.08..2026256.90 rows=4098945 width=8) (actual time=39254.159..45218.692 rows=84 loops=1)
Q21,39697.0,->  Nested Loop Anti Join  (cost=2406.88..2843837.69 rows=1 width=26) (actual time=61.216..38055.535 rows=39697 loops=1)
Q9,30752.1,->  Sort  (cost=1022020.42..1022020.68 rows=106 width=46) (actual time=97303.782..98043.314 rows=3259729 loops=1)
Q9,30752.1,->  Nested Loop  (cost=66624.39..1022013.30 rows=106 width=24) (actual time=1014.325..87829.964 rows=3259729 loops=1)
Q9,30752.1,->  Nested Loop  (cost=66623.96..1021961.92 rows=106 width=24) (actual time=1014.308..51873.442 rows=3259729 loops=1)
Q9,30752.1,->  Nested Loop  (cost=66623.67..1021927.72 rows=106 width=28) (actual time=1014.296..41543.433 rows=3259729 loops=1)
Q9,30752.1,->  Hash Join  (cost=66625.96..1022016.85 rows=106 width=46) (actual time=1014.382..91071.998 rows=3259729 loops=1)
Q10,28823.9,->  Sort  (cost=2300707.39..2302148.59 rows=576478 width=175) (actual time=31178.990..31178.993 rows=20 loops=1)
Q2,4676.0,->  Merge Join  (cost=465618.54..887530.47 rows=1 width=190) (actual time=6624.426..8391.677 rows=4676 loops=1)
Q21,4029.0,->  HashAggregate  (cost=2843837.69..2843837.70 rows=1 width=26) (actual time=38110.280..38111.570 rows=4029 loops=1)
Q15,3722.0,->  Subquery Scan on revenue5  (cost=2008263.94..2008347.69 rows=3722 width=12) (actual time=39071.843..39074.281 rows=1 loops=1)
Q15,3722.0,->  Sort  (cost=2008568.43..2008577.74 rows=3722 width=12) (actual time=39074.298..39074.299 rows=1 loops=1)
Q15,3722.0,Merge Join  (cost=4000144.14..4005241.17 rows=3722 width=79) (actual time=39077.496..39077.497 rows=1 loops=1)
Q15,3722.0,->  HashAggregate  (cost=2008263.94..2008310.47 rows=3722 width=12) (actual time=39071.842..39074.280 rows=1 loops=1)
Q7,764.0,Sort  (cost=2120986.82..2120994.46 rows=3056 width=64) (actual time=22847.430..22847.431 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2120764.08..2120809.92 rows=3056 width=64) (actual time=22847.368..22847.376 rows=4 loops=1)
Q8,367.0,Sort  (cost=1773615.54..1773617.38 rows=734 width=38) (actual time=11353.030..11353.030 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1773567.76..1773580.61 rows=734 width=38) (actual time=11352.989..11352.991 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=38112.707..38112.713 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=38112.708..38112.725 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=887530.48..887530.48 rows=1 width=190) (actual time=8396.645..8396.657 rows=100 loops=1)
Q2,100.0,Limit  (cost=887530.48..887530.48 rows=1 width=190) (actual time=8396.647..8396.673 rows=100 loops=1)
Q11,35.2,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7224.914..7225.963 rows=9062 loops=1)
Q11,35.2,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=7129.344..7219.790 rows=9062 loops=1)
Q3,27.9,->  HashAggregate  (cost=2449058.48..2480742.68 rows=3168420 width=20) (actual time=36677.815..36732.239 rows=113456 loops=1)
Q15,26.8,->  HashAggregate  (cost=1991491.66..1991528.88 rows=3722 width=12) (actual time=19612.049..19642.470 rows=100000 loops=1)
Q14,15.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..6921.67 rows=677367 width=0) (actual time=132.993..132.993 rows=10718720 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=737941)
Q15,12.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..2.424 rows=7917 loops=1)
Q3,10.5,->  Hash Join  (cost=766645.52..2401532.18 rows=3168420 width=20) (actual time=8591.711..36396.986 rows=299906 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2418.11 rows=320813 width=0) (actual time=34.819..34.819 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.015..0.082 rows=8 loops=434128)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.645..3.645 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.599..3.599 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.246..0.246 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1928517.12..1928517.18 rows=25 width=34) (actual time=15379.106..15379.106 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1928516.29..1928516.54 rows=25 width=34) (actual time=15379.062..15379.063 rows=5 loops=1)
Q4,5.0,Sort  (cost=1467090.19..1467090.20 rows=1 width=16) (actual time=12197.994..12197.994 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.26 rows=5 width=4) (actual time=0.011..0.011 rows=1 loops=555284)
Q4,5.0,->  HashAggregate  (cost=1467090.17..1467090.18 rows=1 width=16) (actual time=12197.944..12197.945 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=711401)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5581.70 rows=554170 width=0) (actual time=27.507..27.507 rows=2540800 loops=1)
Q13,4.5,Sort  (cost=850082.37..850082.87 rows=200 width=8) (actual time=29618.158..29618.159 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=850072.73..850074.73 rows=200 width=8) (actual time=29618.094..29618.102 rows=44 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5862.65 rows=582265 width=0) (actual time=27.571..27.571 rows=2566400 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.010 rows=1 loops=1199335)
Q17,3.9,->  Nested Loop  (cost=78.27..119389.70 rows=19820 width=4) (actual time=1.594..185.234 rows=5028 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.010..0.012 rows=4 loops=456354)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.78..57.58 rows=11 width=12) (actual time=0.016..0.038 rows=3 loops=1882)
Q4,3.3,->  Nested Loop Semi Join  (cost=5720.81..1466335.26 rows=150982 width=16) (actual time=27.694..11929.185 rows=509338 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244434.52 rows=32571536 width=0) (actual time=125.127..125.127 rows=10739200 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.295..0.364 rows=3 loops=21743)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54996.55 rows=7327541 width=0) (actual time=27.397..27.397 rows=2553600 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44680.92 rows=5952122 width=0) (actual time=27.456..27.456 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=695340.19..695340.19 rows=3 width=20) (actual time=9578.905..9578.905 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642364.83..642364.88 rows=3 width=20) (actual time=9578.856..9578.857 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.059 rows=2 loops=6355)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=14.091..8256.900 rows=59111 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=8292.385..8292.385 rows=59111 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.878..4.878 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403308.92..404786.72 rows=591120 width=40) (actual time=10452.972..10627.326 rows=1186868 loops=1)
Q16,2.0,->  Hash Join  (cost=54771.74..346640.94 rows=591120 width=40) (actual time=1033.379..6728.652 rows=1186868 loops=1)
Q12,2.0,Sort  (cost=3056262.45..3056262.46 rows=1 width=27) (actual time=33716.964..33716.964 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056262.43..3056262.44 rows=1 width=27) (actual time=33716.916..33716.916 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902506.79 rows=800334 width=34) (actual time=58.488..23834.215 rows=1527418 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.470..4029.349 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=347610.07..2265190.79 rows=576478 width=175) (actual time=6935.831..28820.754 rows=1149769 loops=1)
Q10,1.9,->  Hash Join  (cost=347608.50..2257262.66 rows=576478 width=153) (actual time=6935.800..28401.858 rows=1149769 loops=1)
Q10,1.9,->  Hash Join  (cost=278580.50..2179587.49 rows=576478 width=12) (actual time=5596.561..26345.341 rows=1149769 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.30 rows=20015155 width=8) (actual time=0.004..17255.834 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323804.50 rows=389226 width=38) (actual time=58.704..30938.244 rows=737941 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.036..0.425 rows=56 loops=1)
Q9,1.6,GroupAggregate  (cost=1022020.42..1022024.13 rows=106 width=46) (actual time=97314.521..100290.245 rows=175 loops=1)
Q1,1.5,Sort  (cost=4227673.22..4227673.23 rows=6 width=20) (actual time=90739.235..90739.235 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4227673.04..4227673.14 rows=6 width=20) (actual time=90739.184..90739.186 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2279602.74..2285367.52 rows=576478 width=175) (actual time=30828.997..31040.670 rows=381757 loops=1)
Q20,1.4,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=8321.841..8321.913 rows=1732 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=8292.867..8320.649 rows=1732 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.774..4.774 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.27 rows=140427 width=0) (actual time=757.041..757.041 rows=190718 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.38..41906.59 rows=140427 width=24) (actual time=765.371..973.166 rows=190718 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=88088 width=4) (actual time=0.013..973.509 rows=108532 loops=1)
Q9,1.2,->  Hash Join  (cost=66623.10..351079.84 rows=349874 width=16) (actual time=1014.254..5047.077 rows=434128 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=88088 width=4) (actual time=1013.707..1013.707 rows=108532 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91535.58 rows=9138758 width=0) (actual time=118.431..118.431 rows=10686720 loops=1)
Q18,1.1,Limit  (cost=10194934.85..10194937.60 rows=100 width=39) (actual time=71286.515..71286.800 rows=84 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.979..1919.731 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.97..1725584.59 rows=123688 width=20) (actual time=8.446..9016.060 rows=121183 loops=1)
Q8,1.0,->  Nested Loop  (cost=412.53..1527021.44 rows=405509 width=16) (actual time=8.319..4586.437 rows=399794 loops=1)
Q8,1.0,->  Nested Loop  (cost=38743.41..1772607.95 rows=24729 width=16) (actual time=2018.435..11269.039 rows=24229 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..111.87 rows=32 width=20) (actual time=0.027..0.324 rows=30 loops=13295)
Q8,1.0,->  Hash Join  (cost=38744.97..1773073.18 rows=24729 width=38) (actual time=2018.478..11309.758 rows=24229 loops=1)
Q8,1.0,->  Hash Join  (cost=38743.12..1764625.94 rows=24738 width=16) (actual time=2018.416..11115.053 rows=24229 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2007.907..2007.907 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..408.63 rows=13360 width=0) (actual time=5.172..5.172 rows=13295 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=411.97..28151.81 rows=13360 width=4) (actual time=8.271..144.064 rows=13295 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.679..374.558 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=8) (actual time=0.006..2750.333 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2108014.45 rows=1458264 width=42) (actual time=612.616..22053.151 rows=1455136 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2119854.09 rows=60666 width=64) (actual time=672.520..22752.216 rows=58311 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..532007.47 rows=1204795 width=30) (actual time=612.550..8751.239 rows=1199335 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.041..572.960 rows=120039 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.040..57.462 rows=7984 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=612.045..612.045 rows=120039 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=59.609..59.609 rows=7984 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91726.45..1365953.51 rows=763499 width=8) (actual time=119.192..24681.460 rows=761717 loops=1)
Q5,1.0,->  Nested Loop  (cost=83602.27..1908459.22 rows=1852846 width=46) (actual time=2180.913..14493.455 rows=1824491 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.720..2031.849 rows=299436 loops=1)
Q5,1.0,->  Hash Join  (cost=88281.27..1927775.43 rows=74086 width=34) (actual time=2238.523..15294.931 rows=73318 loops=1)
Q5,1.0,->  Hash Join  (cost=83601.71..442258.16 rows=463326 width=38) (actual time=2180.893..8419.568 rows=456354 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2150.892..2150.892 rows=299436 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45260.07..390595.90 rows=2316631 width=8) (actual time=27.620..5227.192 rows=2284200 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.633..396.523 rows=59887 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5720.25..268060.80 rows=554170 width=20) (actual time=27.674..5501.376 rows=555284 loops=1)
Q3,1.0,->  Hash Join  (cost=106607.40..495683.02 rows=1470808 width=12) (actual time=783.666..7965.729 rows=1457729 loops=1)
Q3,1.0,->  Hash  (cost=495683.02..495683.02 rows=1470808 width=12) (actual time=8459.272..8459.272 rows=1457729 loops=1)
Q3,1.0,->  Hash  (cost=46015.40..46015.40 rows=301085 width=4) (actual time=754.089..754.089 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.56 rows=301085 width=0) (actual time=68.527..68.527 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56828.44..403717.70 rows=7327541 width=16) (actual time=27.558..4627.375 rows=7290745 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252577.40..1733636.60 rows=32571536 width=12) (actual time=125.889..22340.554 rows=32389697 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.84..46015.40 rows=301085 width=4) (actual time=77.645..652.976 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.033..4101.979 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8389.283..8389.283 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597844.71..641922.99 rows=58912 width=20) (actual time=9233.212..9555.343 rows=63236 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6584.91 rows=383185 width=0) (actual time=86.452..86.452 rows=381925 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6680.70..52017.31 rows=383185 width=4) (actual time=95.096..625.065 rows=381925 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.294..56.895 rows=4029 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=58.443..58.443 rows=4029 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.280..55.959 rows=4029 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6624.179..6747.585 rows=1602868 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.319..146.189 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8028 width=30) (actual time=0.070..944.097 rows=7843 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=157.482..5475.488 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=157.350..157.350 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.258..28.350 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.309..26.506 rows=3961 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.753..9.753 rows=21743 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.292..25.951 rows=3961 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.426..297.261 rows=21743 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.01..612245.42 rows=1133 width=8) (actual time=44.115..2530.613 rows=1128 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.996..4.996 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.23 rows=8051 width=0) (actual time=4.044..4.044 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8029 width=0) (actual time=4.609..4.609 rows=7945 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.83 rows=7910 width=0) (actual time=4.055..4.055 rows=7938 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.029..0.029 rows=30 loops=4782)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.27..26595.96 rows=4773 width=30) (actual time=39.718..310.064 rows=4782 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.007..3078.092 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.005..9483.741 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.016..8328.574 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.045 rows=30 loops=1882)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.025..0.045 rows=30 loops=1882)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.00 rows=1957 width=0) (actual time=0.950..0.950 rows=1882 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.49..6496.85 rows=1957 width=4) (actual time=1.262..13.194 rows=1882 loops=1)
Q16,1.0,Sort  (cost=413037.51..413107.28 rows=27905 width=40) (actual time=11297.508..11300.814 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=51034.85..51034.85 rows=297653 width=40) (actual time=1029.344..1029.344 rows=296891 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403308.92..410976.97 rows=27905 width=40) (actual time=10453.022..11237.360 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2492.52..51034.85 rows=297653 width=40) (actual time=34.883..901.999 rows=296891 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1969128.62 rows=2236304 width=12) (actual time=0.011..17739.850 rows=2244271 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1969128.62 rows=2236304 width=12) (actual time=0.020..17611.568 rows=2244271 loops=1)
Q14,1.0,->  Hash Join  (cost=92613.01..1101718.19 rows=677367 width=29) (actual time=1760.823..25935.112 rows=697587 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7091.01..1006035.68 rows=677367 width=12) (actual time=133.948..23542.942 rows=697587 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..443852.85 rows=14984594 width=8) (actual time=0.016..8199.684 rows=14838569 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..737649.76 rows=14984594 width=8) (actual time=988.331..18905.572 rows=15338590 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.011..4832.080 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444047.13 rows=294563 width=15) (actual time=0.135..23453.331 rows=313231 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051107.58 rows=294563 width=27) (actual time=9640.478..33410.853 rows=313231 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9594.265..9594.265 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.300..24.295 rows=4021 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.285..32.323 rows=4021 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.255..3917.548 rows=321680 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=33.354..2904.375 rows=321680 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=33.296..33.296 rows=4021 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.180..25.180 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..23.673 rows=4021 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..31.666 rows=4021 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831523.48 rows=59903739 width=20) (actual time=0.014..19083.807 rows=59440379 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1838827.60 rows=15043894 width=12) (actual time=0.014..17470.662 rows=14822649 loops=1)
Q10,1.0,->  Hash  (cost=271302.19..271302.19 rows=582265 width=8) (actual time=5592.957..5592.957 rows=574510 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6008.22..271302.19 rows=582265 width=8) (actual time=27.740..5380.039 rows=574510 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=399794)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1527418)
Q19,,->  BitmapOr  (cost=12864.27..12864.27 rows=4776 width=0) (actual time=34.670..34.670 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.415..0.458 rows=0 loops=4782)
Q19,,->  BitmapAnd  (cost=6283.43..6283.43 rows=2400 width=0) (actual time=10.391..10.391 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4291.94..4291.94 rows=1578 width=0) (actual time=10.079..10.079 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.40..2288.40 rows=799 width=0) (actual time=9.784..9.784 rows=0 loops=1)
