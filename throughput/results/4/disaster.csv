Q21,704946.0,->  Nested Loop Semi Join  (cost=2406.31..2846704.08 rows=1 width=34) (actual time=33.921..36700.304 rows=704946 loops=1)
Q3,318296.1,->  Sort  (cost=2559900.44..2567857.85 rows=3182961 width=20) (actual time=39535.339..39535.340 rows=10 loops=1)
Q18,302921.6,->  GroupAggregate  (cost=10245302.59..11078337.24 rows=30292169 width=39) (actual time=72449.362..72449.690 rows=100 loops=1)
Q18,67633.7,->  Hash Join  (cost=2197300.14..2816027.23 rows=7574980 width=39) (actual time=46232.814..52861.661 rows=112 loops=1)
Q18,67633.7,->  Hash Join  (cost=2128272.14..2633374.53 rows=7574980 width=20) (actual time=45138.567..51767.078 rows=112 loops=1)
Q18,67633.7,->  Hash  (cost=2816027.23..2816027.23 rows=7574980 width=39) (actual time=52861.845..52861.845 rows=112 loops=1)
Q18,43212.7,->  Sort  (cost=10245302.59..10321033.02 rows=30292169 width=39) (actual time=72449.353..72449.386 rows=701 loops=1)
Q21,39582.0,->  Nested Loop Anti Join  (cost=2406.88..2846705.86 rows=1 width=26) (actual time=34.112..39524.865 rows=39582 loops=1)
Q18,38637.9,->  Hash Join  (cost=2910714.48..5652827.80 rows=30292169 width=39) (actual time=53028.356..72448.394 rows=784 loops=1)
Q18,36597.7,->  Hash  (cost=2077035.33..2077035.33 rows=4098945 width=4) (actual time=45005.909..45005.909 rows=112 loops=1)
Q18,36597.7,->  HashAggregate  (cost=1984809.07..2036045.88 rows=4098945 width=8) (actual time=39294.616..45005.684 rows=112 loops=1)
Q10,28195.6,->  Sort  (cost=2290427.54..2291837.32 rows=563912 width=175) (actual time=32070.810..32070.815 rows=20 loops=1)
Q9,23920.0,->  Sort  (cost=1209482.36..1209482.71 rows=137 width=46) (actual time=92064.070..92642.617 rows=3277050 loops=1)
Q9,23920.0,->  Nested Loop  (cost=66949.72..1209473.37 rows=137 width=24) (actual time=764.358..83199.560 rows=3277050 loops=1)
Q9,23920.0,->  Nested Loop  (cost=66949.28..1209406.97 rows=137 width=24) (actual time=764.324..51484.104 rows=3277050 loops=1)
Q9,23920.0,->  Nested Loop  (cost=66948.99..1209362.77 rows=137 width=28) (actual time=764.314..40901.613 rows=3277050 loops=1)
Q9,23920.0,->  Hash Join  (cost=66951.28..1209477.50 rows=137 width=46) (actual time=764.420..86388.461 rows=3277050 loops=1)
Q2,4637.0,->  Merge Join  (cost=465618.54..890266.27 rows=1 width=190) (actual time=6977.413..8953.025 rows=4637 loops=1)
Q21,3995.0,->  HashAggregate  (cost=2846705.87..2846705.88 rows=1 width=26) (actual time=39573.986..39575.015 rows=3995 loops=1)
Q15,3711.0,->  Subquery Scan on revenue4  (cost=1655201.91..1655285.41 rows=3711 width=12) (actual time=50217.154..50236.092 rows=1 loops=1)
Q15,3711.0,->  Sort  (cost=1655505.43..1655514.70 rows=3711 width=12) (actual time=50236.111..50236.112 rows=1 loops=1)
Q15,3711.0,Merge Join  (cost=3294054.19..3299151.06 rows=3711 width=79) (actual time=50258.983..50258.985 rows=1 loops=1)
Q15,3711.0,->  HashAggregate  (cost=1655201.91..1655248.30 rows=3711 width=12) (actual time=50217.153..50236.091 rows=1 loops=1)
Q7,764.0,Sort  (cost=2144018.09..2144025.73 rows=3056 width=64) (actual time=25322.882..25322.883 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2143795.34..2143841.18 rows=3056 width=64) (actual time=25322.819..25322.826 rows=4 loops=1)
Q8,367.0,Sort  (cost=1732179.03..1732180.87 rows=734 width=38) (actual time=13233.528..13233.528 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1732131.25..1732144.10 rows=734 width=38) (actual time=13233.490..13233.491 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2846705.89..2846705.89 rows=1 width=26) (actual time=39576.134..39576.134 rows=100 loops=1)
Q21,100.0,Limit  (cost=2846705.89..2846705.89 rows=1 width=26) (actual time=39576.135..39576.149 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=890266.28..890266.29 rows=1 width=190) (actual time=8957.992..8958.013 rows=100 loops=1)
Q2,100.0,Limit  (cost=890266.28..890266.29 rows=1 width=190) (actual time=8957.994..8958.022 rows=100 loops=1)
Q11,32.6,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8393.486..8394.650 rows=9789 loops=1)
Q11,32.6,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8307.655..8387.977 rows=9789 loops=1)
Q3,28.1,->  HashAggregate  (cost=2459288.19..2491117.80 rows=3182961 width=20) (actual time=39469.066..39514.421 rows=113229 loops=1)
Q15,26.9,->  HashAggregate  (cost=1638464.96..1638502.07 rows=3711 width=12) (actual time=22896.124..22938.265 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=731671)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7586.64 rows=743864 width=0) (actual time=132.228..132.228 rows=10686720 loops=1)
Q3,10.6,->  Hash Join  (cost=771324.22..2411543.77 rows=3182961 width=20) (actual time=11834.372..39188.602 rows=299102 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2403.31 rows=318840 width=0) (actual time=34.993..34.993 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.080 rows=8 loops=436052)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.616..3.616 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.738..3.738 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.241..0.241 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.286..0.286 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1908798.98..1908799.04 rows=25 width=34) (actual time=18509.110..18509.111 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1908798.15..1908798.40 rows=25 width=34) (actual time=18509.067..18509.068 rows=5 loops=1)
Q4,5.0,Sort  (cost=1492881.27..1492881.27 rows=1 width=16) (actual time=13859.966..13859.966 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=574421)
Q4,5.0,->  HashAggregate  (cost=1492881.25..1492881.26 rows=1 width=16) (actual time=13859.918..13859.919 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=704946)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5819.00 rows=577900 width=0) (actual time=27.744..27.744 rows=2548480 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5735.89 rows=569589 width=0) (actual time=27.483..27.483 rows=2556160 loops=1)
Q13,4.3,Sort  (cost=855248.43..855248.93 rows=200 width=8) (actual time=28499.438..28499.439 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855238.79..855240.79 rows=200 width=8) (actual time=28499.368..28499.373 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.010 rows=1 loops=1191512)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.017..0.019 rows=4 loops=456088)
Q17,3.5,->  Nested Loop  (cost=77.87..109518.74 rows=19272 width=4) (actual time=1.437..214.358 rows=5367 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5964.04..1492096.36 rows=156978 width=16) (actual time=27.952..13550.504 rows=526443 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.61 rows=10 width=12) (actual time=0.017..0.052 rows=3 loops=2006)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.60 rows=1 width=8) (actual time=0.325..0.397 rows=3 loops=21685)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..56097.16 rows=7474288 width=0) (actual time=27.626..27.626 rows=2571520 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243383.82 rows=32431443 width=0) (actual time=124.967..124.967 rows=10814720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44239.48 rows=5893264 width=0) (actual time=27.305..27.305 rows=2535680 loops=1)
Q22,2.3,Sort  (cost=699937.20..699937.21 rows=3 width=20) (actual time=8932.056..8932.057 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=647028.00..647028.05 rows=3 width=20) (actual time=8932.008..8932.012 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=753.99..10937912.88 rows=26506 width=4) (actual time=13.559..8892.343 rows=58834 loops=1)
Q20,2.2,->  Hash  (cost=10937912.88..10937912.88 rows=26506 width=4) (actual time=8927.272..8927.272 rows=58834 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182427.38 rows=24303917 width=0) (actual time=118.789..118.789 rows=10686720 loops=1)
Q15,2.2,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..182427.38 rows=24303917 width=0) (actual time=118.782..118.782 rows=10696960 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.058 rows=2 loops=6330)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=24.695..24.695 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402819.58..404288.48 rows=587561 width=40) (actual time=10731.216..10913.592 rows=1184426 loops=1)
Q16,2.0,->  Hash Join  (cost=54684.76..346518.37 rows=587561 width=40) (actual time=1067.278..6917.685 rows=1184426 loops=1)
Q12,2.0,Sort  (cost=3031899.99..3031899.99 rows=1 width=27) (actual time=35086.920..35086.920 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3031899.97..3031899.98 rows=1 width=27) (actual time=35086.872..35086.874 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346119.55..2255685.13 rows=563912 width=175) (actual time=7602.505..29674.843 rows=1147576 loops=1)
Q10,2.0,->  Hash Join  (cost=346117.98..2247929.78 rows=563912 width=153) (actual time=7602.473..29252.394 rows=1147576 loops=1)
Q10,2.0,->  Hash Join  (cost=277089.98..2170443.10 rows=563912 width=12) (actual time=6156.253..27020.736 rows=1147576 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.396..4151.416 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1818864.35 rows=20035236 width=8) (actual time=0.015..18260.334 rows=37966905 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2326140.03 rows=389617 width=38) (actual time=33.858..32452.701 rows=731671 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1904413.17 rows=801137 width=34) (actual time=33.816..24644.679 rows=1516367 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.344 rows=56 loops=1)
Q20,1.6,Sort  (cost=10940679.06..10940681.71 rows=1060 width=51) (actual time=8963.741..8963.838 rows=1712 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=10938287.21..10940625.79 rows=1060 width=51) (actual time=8927.723..8962.291 rows=1712 loops=1)
Q15,1.6,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..16.680 rows=61971 loops=1)
Q1,1.5,Sort  (cost=4245444.60..4245444.62 rows=6 width=20) (actual time=91664.917..91664.917 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4245444.42..4245444.52 rows=6 width=20) (actual time=91664.867..91664.869 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2269782.93..2275422.05 rows=563912 width=175) (actual time=31730.512..31932.555 rows=381909 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.00 rows=140003 width=0) (actual time=871.620..871.620 rows=191013 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.00..41863.08 rows=140003 width=24) (actual time=880.485..1314.371 rows=191013 loops=1)
Q9,1.2,GroupAggregate  (cost=1209482.36..1209487.16 rows=137 width=46) (actual time=92073.970..94822.922 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91717.91 rows=9156991 width=0) (actual time=123.136..123.136 rows=10708480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=114114 width=4) (actual time=0.012..729.869 rows=109013 loops=1)
Q9,1.0,->  Hash Join  (cost=66948.43..352438.89 rows=453246 width=16) (actual time=764.272..5108.035 rows=436052 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=114114 width=4) (actual time=763.764..763.764 rows=109013 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.740..2164.128 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.21..1684172.20 rows=123382 width=20) (actual time=7.181..10642.244 rows=120264 loops=1)
Q8,1.0,->  Nested Loop  (cost=420.77..1486103.94 rows=404507 width=16) (actual time=7.121..5341.480 rows=397245 loops=1)
Q8,1.0,->  Nested Loop  (cost=38751.65..1731173.80 rows=24668 width=16) (actual time=2275.557..13145.593 rows=24096 loops=1)
Q8,1.0,->  Hash Join  (cost=38753.21..1731637.89 rows=24668 width=38) (actual time=2275.600..13188.477 rows=24096 loops=1)
Q8,1.0,->  Hash Join  (cost=38751.35..1723211.79 rows=24676 width=16) (actual time=2275.547..12996.240 rows=24096 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2265.798..2265.798 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..412.78 rows=13380 width=0) (actual time=4.830..4.830 rows=13191 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=13191)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=416.12..28180.29 rows=13380 width=4) (actual time=7.037..133.283 rows=13191 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.042..0.379 rows=30 loops=13191)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.651..422.931 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.006..4462.206 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130946.96 rows=1474235 width=42) (actual time=896.550..24475.120 rows=1444709 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142875.38 rows=61331 width=64) (actual time=937.994..25223.779 rows=58040 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537192.39 rows=1217990 width=30) (actual time=896.515..11471.401 rows=1191512 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..851.602 rows=119637 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.041..38.781 rows=8045 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=896.001..896.001 rows=119637 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=41.085..41.085 rows=8045 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91917.09..1368686.39 rows=796734 width=8) (actual time=123.891..21500.235 rows=797523 loops=1)
Q5,1.0,->  Nested Loop  (cost=83155.11..1888893.05 rows=1834536 width=46) (actual time=2594.856..17577.371 rows=1825535 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.797..2449.464 rows=299493 loops=1)
Q5,1.0,->  Hash Join  (cost=87834.11..1908064.61 rows=73354 width=34) (actual time=2645.807..18415.571 rows=72611 loops=1)
Q5,1.0,->  Hash Join  (cost=83154.55..438264.42 rows=458745 width=38) (actual time=2594.835..8350.822 rows=456088 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2565.000..2565.000 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44812.91..386733.87 rows=2293723 width=8) (actual time=27.465..4732.057 rows=2281857 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.769..479.691 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5963.47..269418.97 rows=577900 width=20) (actual time=27.923..5676.884 rows=574421 loops=1)
Q3,1.0,->  Hash Join  (cost=107689.07..501154.60 rows=1494235 width=12) (actual time=431.298..11165.301 rows=1475776 loops=1)
Q3,1.0,->  Hash  (cost=501154.60..501154.60 rows=1494235 width=12) (actual time=11701.878..11701.878 rows=1475776 loops=1)
Q3,1.0,->  Hash  (cost=45974.90..45974.90 rows=299875 width=4) (actual time=401.524..401.524 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.49 rows=299875 width=0) (actual time=68.274..68.274 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57965.73..408460.33 rows=7474288 width=16) (actual time=27.792..8088.214 rows=7376812 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251491.68..1738263.72 rows=32431443 width=12) (actual time=125.732..21790.323 rows=31982886 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.46..45974.90 rows=299875 width=4) (actual time=80.814..321.658 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=4) (actual time=0.013..3497.234 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=4) (actual time=7423.490..7423.490 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=602535.78..646587.50 rows=58734 width=20) (actual time=8349.518..8904.457 rows=63241 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6552.24 rows=382030 width=0) (actual time=109.107..109.107 rows=381724 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6647.75..51954.04 rows=382030 width=4) (actual time=118.674..726.718 rows=381724 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.312..32.622 rows=3995 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.767..33.767 rows=3995 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.301..32.000 rows=3995 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6976.765..7101.720 rows=1603251 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.318..144.573 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8099 width=30) (actual time=0.223..1155.935 rows=7844 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=155.707..5810.285 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=155.563..155.563 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.257..28.053 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.270..33.268 rows=3924 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.043..9.043 rows=21685 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.252..32.608 rows=3924 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=753.56..34891.02 rows=20020 width=4) (actual time=12.722..261.575 rows=21685 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.22..613245.90 rows=1131 width=8) (actual time=54.122..1903.021 rows=1183 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.179..4.179 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.95 rows=8023 width=0) (actual time=3.631..3.631 rows=7877 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7984 width=0) (actual time=3.798..3.798 rows=8101 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4797)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.48..26616.54 rows=4781 width=30) (actual time=53.663..306.467 rows=4797 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.005..3565.535 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681887.38 rows=60584338 width=8) (actual time=0.005..10812.670 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681887.38 rows=60584338 width=8) (actual time=0.036..9589.051 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2006)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.023..0.040 rows=30 loops=2006)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..67.63 rows=1920 width=0) (actual time=0.940..0.940 rows=2006 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.11..6389.96 rows=1920 width=4) (actual time=1.264..13.736 rows=2006 loops=1)
Q16,1.0,Sort  (cost=412488.39..412557.73 rows=27737 width=40) (actual time=11587.073..11590.622 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50970.27..50970.27 rows=295861 width=40) (actual time=1064.433..1064.433 rows=296268 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402819.58..410441.46 rows=27737 width=40) (actual time=10731.271..11527.002 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2477.27..50970.27 rows=295861 width=40) (actual time=35.043..951.176 rows=296268 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=182985.28..1616149.03 rows=2231593 width=12) (actual time=119.513..20800.567 rows=2243697 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=182985.28..1616149.03 rows=2231593 width=12) (actual time=119.530..24960.062 rows=2243697 loops=1)
Q14,1.0,->  Hash Join  (cost=93294.61..1133258.29 rows=743864 width=29) (actual time=1392.447..26418.968 rows=747351 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7772.61..1036578.33 rows=743864 width=12) (actual time=133.068..24282.588 rows=747351 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15088705 width=8) (actual time=0.017..8030.922 rows=14853478 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742295.26 rows=15088705 width=8) (actual time=1141.090..18342.029 rows=15353499 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..404880.36 rows=15059936 width=20) (actual time=0.012..4953.662 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2424729.33 rows=288022 width=15) (actual time=0.117..24026.280 rows=311205 loops=1)
Q12,1.0,->  Hash Join  (cost=593129.56..3026859.58 rows=288022 width=27) (actual time=10371.215..34763.070 rows=311205 loops=1)
Q12,1.0,->  Hash  (cost=404880.36..404880.36 rows=15059936 width=20) (actual time=10293.705..10293.705 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.314..23.558 rows=3974 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.312..32.368 rows=3974 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.488..3842.023 rows=317920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=33.449..4103.363 rows=317920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=33.378..33.378 rows=3974 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.414..24.414 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.283..22.915 rows=3974 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.292..31.736 rows=3974 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1836997.74 rows=60211167 width=20) (actual time=0.012..19637.778 rows=59561109 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1831523.48 rows=14984138 width=12) (actual time=0.016..17673.130 rows=14822845 loops=1)
Q10,1.0,->  Hash  (cost=269970.12..269970.12 rows=569589 width=8) (actual time=6150.986..6150.986 rows=574380 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5878.29..269970.12 rows=569589 width=8) (actual time=27.653..5940.117 rows=574380 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=397245)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1516367)
Q19,,->  BitmapOr  (cost=12864.48..12864.48 rows=4785 width=0) (actual time=49.910..49.910 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.300..0.327 rows=0 loops=4797)
Q19,,->  BitmapAnd  (cost=6283.19..6283.19 rows=2393 width=0) (actual time=8.420..8.420 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.06..4293.06 rows=1600 width=0) (actual time=8.551..8.551 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.73..2287.73 rows=792 width=0) (actual time=29.376..29.376 rows=0 loops=1)
