Q21,705240.0,->  Nested Loop Semi Join  (cost=2406.31..2883793.65 rows=1 width=34) (actual time=32.707..38771.428 rows=705240 loops=1)
Q3,316738.8,->  Sort  (cost=2558583.88..2566502.35 rows=3167388 width=20) (actual time=37177.075..37177.077 rows=10 loops=1)
Q18,302921.6,->  GroupAggregate  (cost=10245302.59..11078337.24 rows=30292169 width=39) (actual time=69716.077..69716.397 rows=100 loops=1)
Q18,75749.8,->  Hash Join  (cost=2197300.14..2816027.23 rows=7574980 width=39) (actual time=45425.415..51415.510 rows=100 loops=1)
Q18,75749.8,->  Hash Join  (cost=2128272.14..2633374.53 rows=7574980 width=20) (actual time=44462.694..50452.379 rows=100 loops=1)
Q18,75749.8,->  Hash  (cost=2816027.23..2816027.23 rows=7574980 width=39) (actual time=51415.757..51415.757 rows=100 loops=1)
Q18,43274.5,->  Sort  (cost=10245302.59..10321033.02 rows=30292169 width=39) (actual time=69716.065..69716.110 rows=700 loops=1)
Q18,43274.5,->  Hash Join  (cost=2910714.48..5652827.80 rows=30292169 width=39) (actual time=51489.082..69715.133 rows=700 loops=1)
Q18,40989.4,->  Hash  (cost=2077035.33..2077035.33 rows=4098945 width=4) (actual time=44383.067..44383.067 rows=100 loops=1)
Q18,40989.4,->  HashAggregate  (cost=1984809.07..2036045.88 rows=4098945 width=8) (actual time=38595.388..44382.825 rows=100 loops=1)
Q21,39934.0,->  Nested Loop Anti Join  (cost=2406.88..2883795.43 rows=1 width=26) (actual time=34.833..41660.017 rows=39934 loops=1)
Q10,27559.0,->  Sort  (cost=2275961.19..2277339.14 rows=551180 width=175) (actual time=30659.483..30659.486 rows=20 loops=1)
Q9,20702.6,->  Sort  (cost=1345187.68..1345188.07 rows=158 width=46) (actual time=95471.933..96141.688 rows=3271017 loops=1)
Q9,20702.6,->  Nested Loop  (cost=67174.94..1345177.38 rows=158 width=24) (actual time=1068.433..86235.513 rows=3271017 loops=1)
Q9,20702.6,->  Nested Loop  (cost=67174.51..1345100.81 rows=158 width=24) (actual time=1068.411..54152.967 rows=3271017 loops=1)
Q9,20702.6,->  Nested Loop  (cost=67174.21..1345049.83 rows=158 width=28) (actual time=1068.402..43824.611 rows=3271017 loops=1)
Q9,20702.6,->  Hash Join  (cost=67176.50..1345181.91 rows=158 width=46) (actual time=1068.494..89414.197 rows=3271017 loops=1)
Q2,4736.0,->  Merge Join  (cost=465618.54..886846.51 rows=1 width=190) (actual time=6084.540..8054.568 rows=4736 loops=1)
Q21,3988.0,->  HashAggregate  (cost=2883795.44..2883795.45 rows=1 width=26) (actual time=41717.306..41718.448 rows=3988 loops=1)
Q15,3763.0,->  Subquery Scan on revenue2  (cost=1713088.32..1713172.98 rows=3763 width=12) (actual time=49774.281..49792.175 rows=1 loops=1)
Q15,3763.0,->  Sort  (cost=1713396.46..1713405.87 rows=3763 width=12) (actual time=49792.195..49792.196 rows=1 loops=1)
Q15,3763.0,Merge Join  (cost=3409548.11..3414645.75 rows=3763 width=79) (actual time=49810.661..49810.664 rows=1 loops=1)
Q15,3763.0,->  HashAggregate  (cost=1713088.32..1713135.35 rows=3763 width=12) (actual time=49774.279..49792.171 rows=1 loops=1)
Q7,764.0,Sort  (cost=2131453.78..2131461.42 rows=3056 width=64) (actual time=24085.109..24085.109 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2131231.04..2131276.88 rows=3056 width=64) (actual time=24085.046..24085.052 rows=4 loops=1)
Q8,367.0,Sort  (cost=1749541.61..1749543.45 rows=734 width=38) (actual time=11932.952..11932.952 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1749493.83..1749506.67 rows=734 width=38) (actual time=11932.912..11932.912 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2883795.46..2883795.46 rows=1 width=26) (actual time=41719.634..41719.641 rows=100 loops=1)
Q21,100.0,Limit  (cost=2883795.46..2883795.46 rows=1 width=26) (actual time=41719.636..41719.653 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886846.52..886846.53 rows=1 width=190) (actual time=8059.454..8059.469 rows=100 loops=1)
Q2,100.0,Limit  (cost=886846.52..886846.53 rows=1 width=190) (actual time=8059.456..8059.480 rows=100 loops=1)
Q11,37.9,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8603.946..8604.957 rows=8440 loops=1)
Q11,37.9,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8500.620..8599.128 rows=8440 loops=1)
Q3,28.0,->  HashAggregate  (cost=2458463.88..2490137.76 rows=3167388 width=20) (actual time=37102.158..37156.157 rows=112930 loops=1)
Q15,26.5,->  HashAggregate  (cost=1696066.68..1696104.31 rows=3763 width=12) (actual time=24149.843..24188.602 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=731576)
Q14,13.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7977.56 rows=782956 width=0) (actual time=132.840..132.840 rows=10676480 loops=1)
Q3,10.6,->  Hash Join  (cost=770619.89..2410953.06 rows=3167388 width=20) (actual time=10590.592..36824.993 rows=297873 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2419.16 rows=320953 width=0) (actual time=34.763..34.763 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.086 rows=8 loops=435644)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.245..0.245 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.250..0.250 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.256..0.256 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1973000.62..1973000.69 rows=25 width=34) (actual time=17064.396..17064.397 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1972999.79..1973000.04 rows=25 width=34) (actual time=17064.354..17064.357 rows=5 loops=1)
Q4,5.0,Sort  (cost=1487106.14..1487106.15 rows=1 width=16) (actual time=12876.570..12876.571 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.21 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=562342)
Q4,5.0,->  HashAggregate  (cost=1487106.12..1487106.13 rows=1 width=16) (actual time=12876.523..12876.524 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=705240)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5713.65 rows=567365 width=0) (actual time=27.772..27.772 rows=2568960 loops=1)
Q13,4.5,Sort  (cost=851560.47..851560.97 rows=200 width=8) (actual time=31180.008..31180.012 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=851550.83..851552.83 rows=200 width=8) (actual time=31179.925..31179.933 rows=44 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5607.15 rows=556715 width=0) (actual time=27.319..27.319 rows=2540800 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.011..0.011 rows=1 loops=1200674)
Q17,3.9,->  Nested Loop  (cost=83.11..116321.65 rows=20446 width=4) (actual time=1.552..212.620 rows=5166 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=456025)
Q4,3.3,->  Nested Loop Semi Join  (cost=5856.06..1486341.62 rows=152900 width=16) (actual time=27.997..12585.167 rows=515574 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.59 rows=10 width=12) (actual time=0.018..0.046 rows=3 loops=1903)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61809.25 rows=8235901 width=0) (actual time=27.466..27.466 rows=2553600 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243773.98 rows=32483464 width=0) (actual time=120.428..120.428 rows=10808320 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.329..0.400 rows=3 loops=21890)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55928.52 rows=7451802 width=0) (actual time=27.738..27.738 rows=2568960 loops=1)
Q15,2.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..200434.92 rows=26704923 width=0) (actual time=122.731..122.731 rows=10718720 loops=1)
Q15,2.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..200434.92 rows=26704923 width=0) (actual time=118.905..118.905 rows=10728960 loops=1)
Q22,2.3,Sort  (cost=695800.96..695800.97 rows=3 width=20) (actual time=9674.559..9674.560 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642894.77..642894.82 rows=3 width=20) (actual time=9674.515..9674.516 rows=7 loops=1)
Q15,2.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.019..13.768 rows=46963 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.038..0.054 rows=2 loops=6402)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=14.359..8977.800 rows=59611 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=9013.603..9013.603 rows=59611 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.698..4.698 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403383.02..404862.28 rows=591702 width=40) (actual time=10316.319..10475.573 rows=1188536 loops=1)
Q16,2.0,->  Hash Join  (cost=54780.02..346655.04 rows=591702 width=40) (actual time=1263.598..6675.215 rows=1188536 loops=1)
Q12,2.0,Sort  (cost=3043994.82..3043994.83 rows=1 width=27) (actual time=33008.368..33008.369 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3043994.80..3043994.81 rows=1 width=27) (actual time=33008.315..33008.315 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344113.55..2242003.19 rows=551180 width=175) (actual time=7365.037..28449.749 rows=1110576 loops=1)
Q10,2.0,->  Hash Join  (cost=344111.99..2234422.90 rows=551180 width=153) (actual time=7365.009..28049.592 rows=1110576 loops=1)
Q10,2.0,->  Hash Join  (cost=275083.99..2157127.20 rows=551180 width=12) (actual time=5973.244..25973.791 rows=1110576 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.382..3807.352 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842437.93 rows=20294905 width=8) (actual time=0.013..18687.695 rows=37927733 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2356342.75 rows=394667 width=38) (actual time=32.653..34135.872 rows=731576 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1929064.33 rows=811520 width=34) (actual time=32.591..25717.711 rows=1512905 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.032..0.337 rows=56 loops=1)
Q20,1.6,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=9045.659..9045.780 rows=1895 loops=1)
Q20,1.6,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=9014.024..9043.975 rows=1895 loops=1)
Q1,1.5,Sort  (cost=4211868.08..4211868.10 rows=6 width=20) (actual time=90702.434..90702.434 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4211867.90..4211868.00 rows=6 width=20) (actual time=90702.386..90702.388 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.162..4.162 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2255782.69..2261294.49 rows=551180 width=175) (actual time=30314.920..30524.417 rows=372189 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2874.72 rows=139973 width=0) (actual time=759.517..759.517 rows=190663 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2909.72..41862.01 rows=139973 width=24) (actual time=768.111..917.965 rows=190663 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..65522.00 rows=132132 width=4) (actual time=0.015..1025.012 rows=108911 loops=1)
Q9,1.2,->  Hash Join  (cost=67173.65..353379.77 rows=524812 width=16) (actual time=1068.336..5266.775 rows=435644 loops=1)
Q9,1.2,->  Hash  (cost=65522.00..65522.00 rows=132132 width=4) (actual time=1066.974..1066.974 rows=108911 loops=1)
Q9,1.1,GroupAggregate  (cost=1345187.68..1345193.21 rows=158 width=46) (actual time=95482.212..98317.546 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..90877.32 rows=9072932 width=0) (actual time=119.670..119.670 rows=10664960 loops=1)
Q19,1.1,->  Nested Loop  (cost=12847.02..609888.45 rows=1120 width=8) (actual time=35.313..1632.488 rows=1237 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.723..2112.964 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.29..1701443.52 rows=124550 width=20) (actual time=7.405..9401.946 rows=122401 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.86..1501501.56 rows=408336 width=16) (actual time=7.176..5402.542 rows=401713 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.73..1748527.35 rows=24901 width=16) (actual time=2219.259..11848.943 rows=24522 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.29..1748995.81 rows=24901 width=38) (actual time=2219.310..11889.238 rows=24522 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.44..1740489.83 rows=24910 width=16) (actual time=2219.235..11706.585 rows=24522 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2209.317..2209.317 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.83 rows=13520 width=0) (actual time=4.762..4.762 rows=13399 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13399)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.21..28347.82 rows=13520 width=4) (actual time=7.052..118.372 rows=13399 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.042..0.379 rows=30 loops=13399)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.641..412.625 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..2863.046 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1465502 width=42) (actual time=924.871..23321.717 rows=1464282 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130316.52 rows=60968 width=64) (actual time=965.324..23985.589 rows=60161 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=924.721..8953.939 rows=1200674 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..879.268 rows=120263 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..37.998 rows=8108 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=924.190..924.190 rows=120263 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.259..40.259 rows=8108 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91066.82..1361680.79 rows=758000 width=8) (actual time=120.539..29373.824 rows=761098 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.738..2045.771 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=100728.28..1952997.70 rows=1846223 width=46) (actual time=2184.844..16142.567 rows=1825287 loops=1)
Q5,1.0,->  Hash Join  (cost=105407.28..1972261.58 rows=73821 width=34) (actual time=2241.010..16973.974 rows=73178 loops=1)
Q5,1.0,->  Hash Join  (cost=100727.72..492574.36 rows=461465 width=38) (actual time=2184.824..8411.197 rows=456025 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2155.169..2155.169 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62386.09..440965.60 rows=2307326 width=8) (actual time=27.632..5199.286 rows=2275313 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.639..399.385 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5855.49..271178.97 rows=567365 width=20) (actual time=27.964..5541.063 rows=562342 loops=1)
Q3,1.0,->  Hash Join  (cost=107450.92..500186.52 rows=1483082 width=12) (actual time=462.843..9870.089 rows=1467704 loops=1)
Q3,1.0,->  Hash  (cost=500186.52..500186.52 rows=1483082 width=12) (actual time=10458.808..10458.808 rows=1467704 loops=1)
Q3,1.0,->  Hash  (cost=45927.76..45927.76 rows=298535 width=4) (actual time=432.355..432.355 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.44 rows=298535 width=0) (actual time=69.840..69.840 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57791.47..407751.99 rows=7451802 width=16) (actual time=27.903..6729.883 rows=7358238 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=251894.85..1738741.15 rows=32483464 width=12) (actual time=121.188..20630.255 rows=32058412 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.07..45927.76 rows=298535 width=4) (actual time=78.986..351.177 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=4) (actual time=0.011..3915.239 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=4) (actual time=8549.523..8549.523 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598404.51..642454.36 rows=58721 width=20) (actual time=9387.231..9652.188 rows=63533 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6551.61 rows=381948 width=0) (actual time=88.896..88.896 rows=382242 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6647.10..51951.24 rows=381948 width=4) (actual time=97.856..629.846 rows=382242 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.281..31.452 rows=3988 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.547..32.547 rows=3988 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.267..30.823 rows=3988 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6084.002..6210.067 rows=1603360 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.325..130.249 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8010 width=30) (actual time=0.153..1179.074 rows=7979 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=141.662..4973.143 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=141.515..141.515 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.262..25.200 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.273..28.364 rows=4095 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.780..9.780 rows=21890 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.257..27.716 rows=4095 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.589..201.667 rows=21890 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.175..4.175 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.63 rows=7991 width=0) (actual time=3.882..3.882 rows=7986 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.03 rows=7930 width=0) (actual time=3.713..3.713 rows=8055 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..272.63 rows=7893 width=0) (actual time=3.471..3.471 rows=7906 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12846.45..26494.03 rows=4736 width=30) (actual time=33.914..305.785 rows=4778 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=16) (actual time=0.007..3107.443 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1681887.38 rows=60584338 width=8) (actual time=0.045..9705.375 rows=60044176 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1681887.38 rows=60584338 width=8) (actual time=0.013..7629.501 rows=60044176 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.039 rows=30 loops=1903)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.026..0.039 rows=30 loops=1903)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.84 rows=2041 width=0) (actual time=0.878..0.878 rows=1903 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=73.35..6743.98 rows=2041 width=4) (actual time=1.196..33.650 rows=1903 loops=1)
Q16,1.0,Sort  (cost=413121.44..413191.27 rows=27933 width=40) (actual time=11137.192..11140.324 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=51039.47..51039.47 rows=297946 width=40) (actual time=1261.237..1261.237 rows=297301 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403383.02..411058.63 rows=27933 width=40) (actual time=10316.374..11076.739 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2493.64..51039.47 rows=297946 width=40) (actual time=34.830..1138.877 rows=297301 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=201002.31..1673371.16 rows=2269552 width=12) (actual time=119.662..21962.968 rows=2243534 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=201002.31..1673371.16 rows=2269552 width=12) (actual time=123.520..23255.643 rows=2243534 loops=1)
Q14,1.0,->  Hash Join  (cost=93695.30..1149706.72 rows=782956 width=29) (actual time=1688.165..27418.691 rows=773605 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8173.30..1052440.38 rows=782956 width=12) (actual time=133.629..24972.153 rows=773605 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..444735.19 rows=15014382 width=8) (actual time=0.018..9254.955 rows=14838603 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..738978.92 rows=15014382 width=8) (actual time=1346.296..20122.600 rows=15338624 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=20) (actual time=0.012..4067.708 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2434365.58 rows=289937 width=15) (actual time=0.049..23847.776 rows=311505 loops=1)
Q12,1.0,->  Hash Join  (cost=595494.80..3038920.90 rows=289937 width=27) (actual time=8546.031..32690.636 rows=311505 loops=1)
Q12,1.0,->  Hash  (cost=406494.91..406494.91 rows=15119991 width=20) (actual time=8498.104..8498.104 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.305..31.009 rows=4079 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.300..24.675 rows=4079 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.645..3947.856 rows=326320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=32.032..4178.818 rows=326320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.954..31.954 rows=4079 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.571..25.571 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.272..24.034 rows=4079 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..30.356 rows=4079 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1836997.74 rows=59371754 width=20) (actual time=0.014..19515.791 rows=58740407 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1820673.76 rows=14895373 width=12) (actual time=0.019..16744.063 rows=14823192 loops=1)
Q10,1.0,->  Hash  (cost=268125.05..268125.05 rows=556715 width=8) (actual time=5968.678..5968.678 rows=554776 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5746.33..268125.05 rows=556715 width=8) (actual time=27.486..5755.463 rows=554776 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=401713)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.005..0.005 rows=0 loops=1512905)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.17 rows=1 width=16) (actual time=0.240..0.276 rows=0 loops=4778)
Q19,,->  BitmapOr  (cost=12846.45..12846.45 rows=4739 width=0) (actual time=29.944..29.944 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6266.05..6266.05 rows=2359 width=0) (actual time=8.348..8.348 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.72..4292.72 rows=1594 width=0) (actual time=8.808..8.808 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.18..2287.18 rows=786 width=0) (actual time=9.174..9.174 rows=0 loops=1)
