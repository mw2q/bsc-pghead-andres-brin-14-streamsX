Q21,703934.0,->  Nested Loop Semi Join  (cost=2406.31..2879345.14 rows=1 width=34) (actual time=32.704..37904.583 rows=703934 loops=1)
Q18,353688.9,->  GroupAggregate  (cost=10287346.32..11123820.59 rows=30417246 width=39) (actual time=72082.856..72083.141 rows=86 loops=1)
Q3,315238.6,->  Sort  (cost=2557633.02..2565513.99 rows=3152386 width=20) (actual time=36133.212..36133.214 rows=10 loops=1)
Q18,88429.6,->  Hash Join  (cost=2205495.46..2826508.18 rows=7604948 width=39) (actual time=46476.521..52583.124 rows=86 loops=1)
Q18,88429.6,->  Hash Join  (cost=2136467.46..2643405.96 rows=7604948 width=20) (actual time=45316.643..51422.990 rows=86 loops=1)
Q18,88429.6,->  Hash  (cost=2826508.18..2826508.18 rows=7604948 width=39) (actual time=52583.329..52583.329 rows=86 loops=1)
Q18,50526.9,->  Sort  (cost=10287346.32..10363389.44 rows=30417246 width=39) (actual time=72082.846..72082.879 rows=602 loops=1)
Q18,50526.9,->  Hash Join  (cost=2921570.03..5675005.58 rows=30417246 width=39) (actual time=52655.228..72082.038 rows=602 loops=1)
Q18,47662.1,->  Hash  (cost=2085230.64..2085230.64 rows=4098945 width=4) (actual time=45215.306..45215.306 rows=86 loops=1)
Q18,47662.1,->  HashAggregate  (cost=1993004.38..2044241.19 rows=4098945 width=8) (actual time=39565.333..45215.141 rows=86 loops=1)
Q21,39281.0,->  Nested Loop Anti Join  (cost=2406.88..2879346.92 rows=1 width=26) (actual time=33.786..40818.870 rows=39281 loops=1)
Q10,28279.9,->  Sort  (cost=2297061.83..2298475.83 rows=565598 width=175) (actual time=31200.936..31200.938 rows=20 loops=1)
Q9,26189.6,->  Sort  (cost=1133562.54..1133562.85 rows=125 width=46) (actual time=94453.882..95171.919 rows=3273708 loops=1)
Q9,26189.6,->  Nested Loop  (cost=66824.59..1133554.28 rows=125 width=24) (actual time=904.136..85015.905 rows=3273708 loops=1)
Q9,26189.6,->  Nested Loop  (cost=66824.16..1133493.70 rows=125 width=24) (actual time=904.118..52486.636 rows=3273708 loops=1)
Q9,26189.6,->  Nested Loop  (cost=66823.87..1133453.36 rows=125 width=28) (actual time=904.108..41769.673 rows=3273708 loops=1)
Q9,26189.6,->  Hash Join  (cost=66826.15..1133558.18 rows=125 width=46) (actual time=904.196..88218.048 rows=3273708 loops=1)
Q2,4834.0,->  Merge Join  (cost=465618.54..893295.20 rows=1 width=190) (actual time=6877.213..8898.958 rows=4834 loops=1)
Q21,3987.0,->  HashAggregate  (cost=2879346.92..2879346.93 rows=1 width=26) (actual time=40870.938..40871.968 rows=3987 loops=1)
Q15,3799.0,->  Subquery Scan on revenue8  (cost=1537197.14..1537282.62 rows=3799 width=12) (actual time=43926.844..43954.214 rows=1 loops=1)
Q15,3799.0,->  Sort  (cost=1537508.50..1537517.99 rows=3799 width=12) (actual time=43954.236..43954.236 rows=1 loops=1)
Q15,3799.0,Merge Join  (cost=3057657.70..3062755.88 rows=3799 width=79) (actual time=43980.996..43980.998 rows=1 loops=1)
Q15,3799.0,->  HashAggregate  (cost=1537197.14..1537244.63 rows=3799 width=12) (actual time=43926.843..43954.212 rows=1 loops=1)
Q7,764.0,Sort  (cost=2131453.78..2131461.42 rows=3056 width=64) (actual time=24333.611..24333.611 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2131231.04..2131276.88 rows=3056 width=64) (actual time=24333.540..24333.551 rows=4 loops=1)
Q8,367.0,Sort  (cost=1774049.40..1774051.23 rows=734 width=38) (actual time=10838.144..10838.145 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1774001.62..1774014.46 rows=734 width=38) (actual time=10838.105..10838.106 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2879346.94..2879346.95 rows=1 width=26) (actual time=40873.121..40873.129 rows=100 loops=1)
Q21,100.0,Limit  (cost=2879346.94..2879346.95 rows=1 width=26) (actual time=40873.123..40873.140 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=893295.21..893295.21 rows=1 width=190) (actual time=8904.165..8904.184 rows=100 loops=1)
Q2,100.0,Limit  (cost=893295.21..893295.21 rows=1 width=190) (actual time=8904.166..8904.192 rows=100 loops=1)
Q11,38.0,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8516.612..8517.605 rows=8406 loops=1)
Q11,38.0,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8415.934..8511.955 rows=8406 loops=1)
Q3,27.6,->  HashAggregate  (cost=2457987.24..2489511.10 rows=3152386 width=20) (actual time=36060.354..36111.951 rows=114020 loops=1)
Q15,26.3,->  HashAggregate  (cost=1520063.42..1520101.41 rows=3799 width=12) (actual time=22896.126..22935.639 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=730426)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7918.70 rows=777070 width=0) (actual time=134.247..134.247 rows=10739200 loops=1)
Q3,10.4,->  Hash Join  (cost=767947.54..2410701.45 rows=3152386 width=20) (actual time=8483.967..35781.698 rows=301705 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2406.01 rows=319200 width=0) (actual time=34.898..34.898 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.082 rows=8 loops=435720)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.604..3.604 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.647..3.647 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.239..0.239 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.254..0.254 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.265..0.265 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1859476.25..1859476.31 rows=25 width=34) (actual time=17177.308..17177.308 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1859475.42..1859475.67 rows=25 width=34) (actual time=17177.266..17177.268 rows=5 loops=1)
Q4,5.0,Sort  (cost=1493900.94..1493900.95 rows=1 width=16) (actual time=14887.311..14887.312 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.09 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=573516)
Q4,5.0,->  HashAggregate  (cost=1493900.92..1493900.93 rows=1 width=16) (actual time=14887.178..14887.179 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=703934)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5811.17 rows=577117 width=0) (actual time=27.439..27.439 rows=2556160 loops=1)
Q13,4.4,Sort  (cost=852539.03..852539.53 rows=200 width=8) (actual time=30794.640..30794.641 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=852529.39..852531.39 rows=200 width=8) (actual time=30794.566..30794.575 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5752.81 rows=571281 width=0) (actual time=27.586..27.586 rows=2563840 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1198724)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.013..0.014 rows=4 loops=454793)
Q17,3.7,->  Nested Loop  (cost=82.61..113575.62 rows=19995 width=4) (actual time=1.682..208.719 rows=5353 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5956.01..1493119.43 rows=156298 width=16) (actual time=27.668..14601.935 rows=526289 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.018..0.043 rows=3 loops=2006)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..247156.95 rows=32934526 width=0) (actual time=131.497..131.497 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.411..0.481 rows=3 loops=21781)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54537.02 rows=7266269 width=0) (actual time=31.426..31.426 rows=2558720 loops=1)
Q22,2.3,Sort  (cost=698117.04..698117.05 rows=3 width=20) (actual time=9880.882..9880.883 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=645236.09..645236.14 rows=3 width=20) (actual time=9880.835..9880.838 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.055 rows=2 loops=6537)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=42.271..10724.136 rows=59173 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=10761.415..10761.415 rows=59173 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.698..4.698 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402882.05..404352.02 rows=587986 width=40) (actual time=10141.280..10296.866 rows=1184709 loops=1)
Q16,2.0,->  Hash Join  (cost=54699.19..346537.05 rows=587986 width=40) (actual time=1445.554..6509.206 rows=1184709 loops=1)
Q12,2.0,Sort  (cost=3041037.22..3041037.23 rows=1 width=27) (actual time=33160.334..33160.335 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3041037.20..3041037.21 rows=1 width=27) (actual time=33160.284..33160.285 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346942.42..2262215.54 rows=565598 width=175) (actual time=6943.123..28860.322 rows=1136858 loops=1)
Q10,2.0,->  Hash Join  (cost=346940.85..2254437.01 rows=565598 width=153) (actual time=6943.094..28442.413 rows=1136858 loops=1)
Q10,2.0,->  Hash Join  (cost=277912.85..2176925.04 rows=565598 width=12) (actual time=5445.333..26238.674 rows=1136858 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.426..3493.290 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1839626.68 rows=20263938 width=8) (actual time=0.014..18684.618 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2352716.92 rows=394064 width=38) (actual time=32.633..32877.467 rows=730426 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1926124.58 rows=810282 width=34) (actual time=32.518..25507.782 rows=1512907 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.379 rows=56 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..142779.45 rows=19017526 width=0) (actual time=121.129..121.129 rows=10686720 loops=1)
Q15,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..142779.45 rows=19017526 width=0) (actual time=118.766..118.766 rows=10696960 loops=1)
Q1,1.5,Sort  (cost=4176661.56..4176661.58 rows=6 width=20) (actual time=90090.445..90090.445 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4176661.38..4176661.48 rows=6 width=20) (actual time=90090.397..90090.400 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1133562.54..1133566.91 rows=125 width=46) (actual time=94464.186..97388.776 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27117.38 rows=3610317 width=0) (actual time=27.286..27.286 rows=2543360 loops=1)
Q20,1.4,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=10791.508..10791.608 rows=1707 loops=1)
Q20,1.4,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=10761.845..10790.409 rows=1707 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.146..4.146 rows=405760 loops=1)
Q15,1.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..20.068 rows=67992 loops=1)
Q10,1.4,->  HashAggregate  (cost=2276355.49..2282011.47 rows=565598 width=175) (actual time=30833.444..31063.374 rows=378825 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2872.20 rows=139720 width=0) (actual time=475.892..475.892 rows=190715 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2907.13..41852.78 rows=139720 width=24) (actual time=484.625..953.109 rows=190715 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92072.28 rows=9192428 width=0) (actual time=120.344..120.344 rows=10771200 loops=1)
Q18,1.1,Limit  (cost=10287346.32..10287349.07 rows=100 width=39) (actual time=72082.859..72083.152 rows=86 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104104 width=4) (actual time=0.013..864.506 rows=108930 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.30..351916.18 rows=413488 width=16) (actual time=904.067..5147.202 rows=435720 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104104 width=4) (actual time=903.574..903.574 rows=108930 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.753..1896.817 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.91..1725812.74 rows=126327 width=20) (actual time=7.136..8556.227 rows=119897 loops=1)
Q8,1.0,->  Nested Loop  (cost=427.48..1523020.43 rows=414162 width=16) (actual time=7.062..4553.636 rows=394062 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.35..1773021.34 rows=25257 width=16) (actual time=1997.751..10760.790 rows=24148 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.45 rows=31 width=20) (actual time=0.027..0.323 rows=30 loops=13153)
Q8,1.0,->  Hash Join  (cost=38759.92..1773496.48 rows=25257 width=38) (actual time=1997.795..10797.907 rows=24148 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.06..1764869.27 rows=25265 width=16) (actual time=1997.732..10618.200 rows=24148 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1986.665..1986.665 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.48 rows=13740 width=0) (actual time=4.749..4.749 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=426.91..28615.49 rows=13740 width=4) (actual time=6.993..171.821 rows=13153 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.636..370.247 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=8) (actual time=0.006..3040.645 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2118436.65 rows=1465502 width=42) (actual time=624.472..23491.559 rows=1455449 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2130316.52 rows=60968 width=64) (actual time=665.277..24235.906 rows=58751 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..534366.29 rows=1210798 width=30) (actual time=624.448..9749.007 rows=1198724 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.044..584.569 rows=120098 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.035..38.140 rows=8010 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=623.952..623.952 rows=120098 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.334..40.334 rows=8010 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92264.27..1376210.90 rows=767983 width=8) (actual time=121.193..24373.218 rows=761866 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.766..2155.523 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=66030.71..1839631.33 rows=1827186 width=46) (actual time=2301.665..16181.044 rows=1818835 loops=1)
Q5,1.0,->  Hash Join  (cost=70709.71..1858744.82 rows=73060 width=34) (actual time=2357.687..17081.844 rows=72923 loops=1)
Q5,1.0,->  Hash Join  (cost=66030.15..387601.99 rows=456907 width=38) (actual time=2301.623..8940.846 rows=454793 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2271.615..2271.615 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27688.51..336124.27 rows=2284537 width=8) (actual time=27.455..5471.034 rows=2275706 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.679..420.234 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5955.44..270160.20 rows=577117 width=20) (actual time=27.615..5368.711 rows=573516 loops=1)
Q3,1.0,->  Hash Join  (cost=106051.73..494430.65 rows=1450105 width=12) (actual time=494.322..7804.063 rows=1446871 loops=1)
Q3,1.0,->  Hash  (cost=494430.65..494430.65 rows=1450105 width=12) (actual time=8342.712..8342.712 rows=1446871 loops=1)
Q3,1.0,->  Hash  (cost=45956.26..45956.26 rows=299350 width=4) (actual time=460.332..460.332 rows=300276 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6861.55 rows=299350 width=0) (actual time=67.847..67.847 rows=300276 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56353.59..402982.95 rows=7266269 width=16) (actual time=31.628..4770.437 rows=7215641 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=255390.58..1743116.15 rows=32934526 width=12) (actual time=132.260..21697.364 rows=32689026 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6936.39..45956.26 rows=299350 width=4) (actual time=76.903..357.002 rows=300276 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=4) (actual time=0.014..4076.339 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=4) (actual time=8655.737..8655.737 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=600762.49..644796.48 rows=58615 width=20) (actual time=9221.456..9853.168 rows=63725 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6546.42 rows=381257 width=0) (actual time=90.629..90.629 rows=381694 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6641.73..51927.73 rows=381257 width=4) (actual time=99.453..349.393 rows=381694 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.290..31.318 rows=3987 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=32.468..32.468 rows=3987 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.274..30.721 rows=3987 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6876.380..6998.954 rows=1586825 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.309..136.651 rows=19837 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8177 width=30) (actual time=0.061..1207.583 rows=8170 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=147.661..5729.061 rows=1586960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=147.524..147.524 rows=19837 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.251..26.469 rows=3967 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.273..27.205 rows=3934 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=37.814..37.814 rows=21781 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.259..26.625 rows=3934 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=41.519..211.213 rows=21781 loops=1)
Q19,1.0,->  Nested Loop  (cost=12864.11..610663.33 rows=1119 width=8) (actual time=47.475..3254.774 rows=1155 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.215..4.215 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.59 rows=8086 width=0) (actual time=3.446..3.446 rows=7975 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.99 rows=7926 width=0) (actual time=3.477..3.477 rows=8039 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.79 rows=7907 width=0) (actual time=3.361..3.361 rows=7959 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12863.54..26526.44 rows=4743 width=30) (actual time=32.264..352.941 rows=4735 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408911.95 rows=15209895 width=16) (actual time=0.006..3025.391 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1688831.92 rows=60834492 width=8) (actual time=0.004..10052.792 rows=59984976 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1688831.92 rows=60834492 width=8) (actual time=0.046..9512.835 rows=59984976 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.046 rows=30 loops=2006)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.028..0.046 rows=30 loops=2006)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.35 rows=1992 width=0) (actual time=0.938..0.938 rows=2006 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.85..6604.36 rows=1992 width=4) (actual time=1.261..14.390 rows=2006 loops=1)
Q16,1.0,Sort  (cost=412558.08..412627.48 rows=27758 width=40) (actual time=10953.712..10957.205 rows=27838 loops=1)
Q16,1.0,->  Hash  (cost=50982.03..50982.03 rows=296075 width=40) (actual time=1442.707..1442.707 rows=296343 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402882.05..410509.46 rows=27758 width=40) (actual time=10141.336..10893.390 rows=27838 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2480.03..50982.03 rows=296075 width=40) (actual time=34.954..1307.699 rows=296343 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=143350.57..1497218.46 rows=2284496 width=12) (actual time=119.521..20792.289 rows=2246869 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=143350.57..1497218.46 rows=2284496 width=12) (actual time=121.886..19054.419 rows=2246869 loops=1)
Q14,1.0,->  Hash Join  (cost=93634.97..1151595.31 rows=777070 width=29) (actual time=1452.385..26250.943 rows=772061 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8112.97..1054417.26 rows=777070 width=12) (actual time=135.115..24038.991 rows=772061 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446221.43 rows=14988998 width=8) (actual time=0.023..8405.054 rows=14839202 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..740084.40 rows=14988998 width=8) (actual time=1218.776..19576.381 rows=15339218 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=20) (actual time=0.009..4309.307 rows=15000000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2431960.47 rows=290757 width=15) (actual time=0.053..23665.525 rows=312408 loops=1)
Q12,1.0,->  Hash Join  (cost=594902.33..3035948.96 rows=290757 width=27) (actual time=8863.219..32840.741 rows=312408 loops=1)
Q12,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=20) (actual time=8793.597..8793.597 rows=15000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..27.511 rows=4095 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..46.148 rows=4095 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=28.562..3897.305 rows=327600 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=47.404..4166.868 rows=327600 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=47.339..47.339 rows=4095 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=28.491..28.491 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..26.844 rows=4095 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..45.385 rows=4095 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.30 rows=58990502 width=20) (actual time=0.015..18837.521 rows=58945231 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1836997.74 rows=15028924 width=12) (actual time=0.015..17497.681 rows=14822519 loops=1)
Q10,1.0,->  Hash  (cost=270771.84..270771.84 rows=571281 width=8) (actual time=5440.593..5440.593 rows=568317 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5895.63..270771.84 rows=571281 width=8) (actual time=27.762..5231.896 rows=568317 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.010 rows=0 loops=394062)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1512907)
Q19,,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..123.15 rows=1 width=16) (actual time=0.551..0.611 rows=0 loops=4735)
Q19,,->  BitmapOr  (cost=12863.54..12863.54 rows=4746 width=0) (actual time=28.330..28.330 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=6282.21..6282.21 rows=2364 width=0) (actual time=8.098..8.098 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.08..4292.08 rows=1581 width=0) (actual time=8.303..8.303 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.75..2288.75 rows=802 width=0) (actual time=8.769..8.769 rows=0 loops=1)
