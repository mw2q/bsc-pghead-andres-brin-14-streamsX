Q21,709563.0,->  Nested Loop Semi Join  (cost=2406.31..2880153.58 rows=1 width=34) (actual time=32.006..38558.746 rows=709563 loops=1)
Q18,401103.3,->  GroupAggregate  (cost=10174709.02..11001984.64 rows=30082750 width=39) (actual time=72618.575..72618.826 rows=75 loops=1)
Q3,315157.9,->  Sort  (cost=2550566.55..2558445.50 rows=3151579 width=20) (actual time=34286.012..34286.013 rows=10 loops=1)
Q18,100299.6,->  Hash Join  (cost=2183578.59..2798301.27 rows=7522476 width=39) (actual time=49003.628..54158.800 rows=75 loops=1)
Q18,100299.6,->  Hash Join  (cost=2114550.59..2616436.13 rows=7522476 width=20) (actual time=47847.414..53002.397 rows=75 loops=1)
Q18,100299.6,->  Hash  (cost=2798301.27..2798301.27 rows=7522476 width=39) (actual time=54158.951..54158.951 rows=75 loops=1)
Q18,57300.4,->  Sort  (cost=10174709.02..10249915.89 rows=30082750 width=39) (actual time=72618.564..72618.594 rows=525 loops=1)
Q18,57300.4,->  Hash Join  (cost=2892332.22..5615488.49 rows=30082750 width=39) (actual time=54188.857..72617.838 rows=525 loops=1)
Q18,54652.6,->  Hash  (cost=2063313.78..2063313.78 rows=4098945 width=4) (actual time=47726.380..47726.380 rows=75 loops=1)
Q18,54652.6,->  HashAggregate  (cost=1971087.51..2022324.33 rows=4098945 width=8) (actual time=40053.765..47726.194 rows=75 loops=1)
Q21,39412.0,->  Nested Loop Anti Join  (cost=2406.88..2880155.36 rows=1 width=26) (actual time=32.089..41465.581 rows=39412 loops=1)
Q10,27858.9,->  Sort  (cost=2281041.82..2282434.77 rows=557179 width=175) (actual time=31140.475..31140.479 rows=20 loops=1)
Q9,24285.4,->  Sort  (cost=1205547.70..1205548.04 rows=135 width=46) (actual time=92765.798..93453.305 rows=3278542 loops=1)
Q9,24285.4,->  Nested Loop  (cost=66924.69..1205538.83 rows=135 width=24) (actual time=715.556..83486.986 rows=3278542 loops=1)
Q9,24285.4,->  Nested Loop  (cost=66924.26..1205473.40 rows=135 width=24) (actual time=715.518..51974.930 rows=3278542 loops=1)
Q9,24285.4,->  Nested Loop  (cost=66923.96..1205429.84 rows=135 width=28) (actual time=715.509..41390.016 rows=3278542 loops=1)
Q9,24285.4,->  Hash Join  (cost=66926.25..1205542.93 rows=135 width=46) (actual time=715.622..86647.062 rows=3278542 loops=1)
Q2,4802.0,->  Merge Join  (cost=465618.54..886846.52 rows=1 width=190) (actual time=7104.084..9096.601 rows=4802 loops=1)
Q21,4021.0,->  HashAggregate  (cost=2880155.37..2880155.38 rows=1 width=26) (actual time=41525.507..41526.937 rows=4021 loops=1)
Q15,3711.0,->  Subquery Scan on revenue11  (cost=1941797.81..1941881.30 rows=3711 width=12) (actual time=57929.941..57931.553 rows=1 loops=1)
Q15,3711.0,->  Sort  (cost=1942101.32..1942110.60 rows=3711 width=12) (actual time=57931.568..57931.569 rows=1 loops=1)
Q15,3711.0,Merge Join  (cost=3867279.37..3872376.24 rows=3711 width=79) (actual time=57950.416..57950.418 rows=1 loops=1)
Q15,3711.0,->  HashAggregate  (cost=1941797.81..1941844.19 rows=3711 width=12) (actual time=57929.939..57931.551 rows=1 loops=1)
Q7,764.0,Sort  (cost=2144018.09..2144025.73 rows=3056 width=64) (actual time=22236.099..22236.100 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2143795.34..2143841.18 rows=3056 width=64) (actual time=22236.034..22236.039 rows=4 loops=1)
Q8,367.0,Sort  (cost=1693899.79..1693901.63 rows=734 width=38) (actual time=12064.435..12064.435 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1693852.01..1693864.86 rows=734 width=38) (actual time=12064.388..12064.388 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2880155.39..2880155.39 rows=1 width=26) (actual time=41528.149..41528.156 rows=100 loops=1)
Q21,100.0,Limit  (cost=2880155.39..2880155.39 rows=1 width=26) (actual time=41528.152..41528.169 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886846.53..886846.53 rows=1 width=190) (actual time=9101.610..9101.623 rows=100 loops=1)
Q2,100.0,Limit  (cost=886846.53..886846.53 rows=1 width=190) (actual time=9101.612..9101.636 rows=100 loops=1)
Q11,31.5,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8236.750..8237.920 rows=10130 loops=1)
Q11,31.5,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8151.127..8231.138 rows=10130 loops=1)
Q3,27.8,->  HashAggregate  (cost=2450946.28..2482462.07 rows=3151579 width=20) (actual time=34219.855..34265.193 rows=112981 loops=1)
Q15,26.9,->  HashAggregate  (cost=1925094.25..1925131.36 rows=3711 width=12) (actual time=28263.330..28297.435 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=736463)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7586.64 rows=743864 width=0) (actual time=140.108..140.108 rows=10686720 loops=1)
Q3,10.5,->  Hash Join  (cost=767734.20..2403672.59 rows=3151579 width=20) (actual time=7694.283..33954.328 rows=298137 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2396.01 rows=317867 width=0) (actual time=34.797..34.797 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.017..0.083 rows=8 loops=436824)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.621..3.621 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.645..3.645 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.274..0.274 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.266..0.266 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.277..0.277 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1869054.78..1869054.85 rows=25 width=34) (actual time=17608.627..17608.628 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1869053.95..1869054.20 rows=25 width=34) (actual time=17608.586..17608.586 rows=5 loops=1)
Q4,5.0,Sort  (cost=1488838.00..1488838.00 rows=1 width=16) (actual time=12960.930..12960.931 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.14 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=567700)
Q4,5.0,->  HashAggregate  (cost=1488837.98..1488837.99 rows=1 width=16) (actual time=12960.887..12960.888 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709563)
Q13,4.5,Sort  (cost=854470.91..854471.41 rows=200 width=8) (actual time=28638.019..28638.024 rows=44 loops=1)
Q13,4.5,->  HashAggregate  (cost=854461.27..854463.27 rows=200 width=8) (actual time=28637.953..28637.959 rows=44 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5667.72 rows=562772 width=0) (actual time=27.348..27.348 rows=2545920 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5760.98 rows=572098 width=0) (actual time=30.154..30.154 rows=2556160 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1205287)
Q17,3.9,->  Nested Loop  (cost=82.62..113628.75 rows=20025 width=4) (actual time=1.650..204.753 rows=5104 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.016..0.017 rows=4 loops=456159)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..278696.35 rows=37139780 width=0) (actual time=118.557..118.557 rows=10664960 loops=1)
Q15,3.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..278696.35 rows=37139780 width=0) (actual time=118.500..118.500 rows=10676480 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5904.57..1488063.28 rows=154939 width=16) (actual time=30.343..12666.698 rows=520502 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.017..0.038 rows=3 loops=1928)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..243877.51 rows=32497268 width=0) (actual time=119.586..119.586 rows=10763520 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.319..0.390 rows=3 loops=21726)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55406.88 rows=7382251 width=0) (actual time=27.420..27.420 rows=2558720 loops=1)
Q22,2.3,Sort  (cost=696516.32..696516.33 rows=3 width=20) (actual time=9727.682..9727.682 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643544.66..643544.70 rows=3 width=20) (actual time=9727.634..9727.636 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.037..0.054 rows=2 loops=6563)
Q20,2.0,->  Nested Loop  (cost=754.52..11669241.04 rows=29156 width=4) (actual time=13.462..8820.306 rows=58987 loops=1)
Q20,2.0,->  Hash  (cost=11669241.04..11669241.04 rows=29156 width=4) (actual time=8857.609..8857.609 rows=58987 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.629..4.629 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402576.18..404040.65 rows=585788 width=40) (actual time=10655.017..10804.653 rows=1184289 loops=1)
Q16,2.0,->  Hash Join  (cost=54641.75..346457.63 rows=585788 width=40) (actual time=1441.881..7083.055 rows=1184289 loops=1)
Q15,2.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.011..14.133 rows=47970 loops=1)
Q12,2.0,Sort  (cost=3050091.85..3050091.86 rows=1 width=27) (actual time=34260.305..34260.306 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3050091.84..3050091.85 rows=1 width=27) (actual time=34260.247..34260.247 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.405..4084.115 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1840149.74 rows=20269700 width=8) (actual time=0.013..18932.063 rows=37928434 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2353371.40 rows=394177 width=38) (actual time=31.973..33610.605 rows=736463 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1926671.55 rows=810512 width=34) (actual time=31.921..26162.955 rows=1525374 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.364 rows=56 loops=1)
Q10,1.6,->  Hash Join  (cost=344848.21..2246714.22 rows=557179 width=175) (actual time=7143.772..29038.899 rows=941607 loops=1)
Q10,1.6,->  Hash Join  (cost=344846.64..2239051.45 rows=557179 width=153) (actual time=7143.742..28686.434 rows=941607 loops=1)
Q10,1.6,->  Hash Join  (cost=275818.64..2161665.77 rows=557179 width=12) (actual time=5761.607..26664.046 rows=941607 loops=1)
Q20,1.5,Sort  (cost=11672048.05..11672050.96 rows=1166 width=51) (actual time=8893.475..8893.566 rows=1826 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669648.49..11671988.65 rows=1166 width=51) (actual time=8858.070..8891.487 rows=1826 loops=1)
Q1,1.5,Sort  (cost=4223420.95..4223420.97 rows=6 width=20) (actual time=91822.039..91822.039 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4223420.77..4223420.88 rows=6 width=20) (actual time=91821.990..91821.993 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2260643.70..2266215.49 rows=557179 width=175) (actual time=30732.962..31000.747 rows=354879 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27252.30 rows=3628306 width=0) (actual time=27.405..27.405 rows=2556160 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.174..4.174 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2906.92 rows=140390 width=0) (actual time=775.094..775.094 rows=190871 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.02..41905.26 rows=140390 width=24) (actual time=783.748..1204.048 rows=190871 loops=1)
Q18,1.3,Limit  (cost=10174709.02..10174711.77 rows=100 width=39) (actual time=72618.578..72618.839 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1205547.70..1205552.43 rows=135 width=46) (actual time=92775.888..95699.966 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92436.01 rows=9228801 width=0) (actual time=120.043..120.043 rows=10814720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112112 width=4) (actual time=0.010..681.989 rows=109206 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.40..352334.35 rows=445295 width=16) (actual time=715.430..4161.375 rows=436824 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112112 width=4) (actual time=714.962..714.962 rows=109206 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.787..2211.269 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=402.12..1646171.20 rows=119813 width=20) (actual time=7.390..9425.998 rows=121452 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.69..1453831.89 rows=392807 width=16) (actual time=7.337..4378.087 rows=398733 loops=1)
Q8,1.0,->  Nested Loop  (cost=38732.56..1692922.23 rows=23954 width=16) (actual time=2319.619..11978.580 rows=24278 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.45 rows=31 width=20) (actual time=0.027..0.308 rows=30 loops=13284)
Q8,1.0,->  Hash Join  (cost=38734.13..1693372.93 rows=23954 width=38) (actual time=2319.663..12020.018 rows=24278 loops=1)
Q8,1.0,->  Hash Join  (cost=38732.27..1685190.27 rows=23963 width=16) (actual time=2319.599..11827.841 rows=24278 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2309.678..2309.678 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.88 rows=12993 width=0) (actual time=4.975..4.975 rows=13284 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=401.12..27695.71 rows=12993 width=4) (actual time=7.289..146.117 rows=13284 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.657..431.837 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=8) (actual time=0.005..3360.683 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2130946.96 rows=1474235 width=42) (actual time=838.467..21484.133 rows=1464243 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2142875.38 rows=61331 width=64) (actual time=898.507..22137.890 rows=59467 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..537192.39 rows=1217990 width=30) (actual time=838.360..9120.688 rows=1205287 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.040..793.501 rows=120121 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.036..57.105 rows=8116 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=837.854..837.854 rows=120121 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=59.686..59.686 rows=8116 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92530.97..1381558.00 rows=379848 width=8) (actual time=120.825..24458.814 rows=379861 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.759..1926.163 rows=300270 loops=1)
Q5,1.0,->  Nested Loop  (cost=66168.48..1849134.60 rows=1836255 width=46) (actual time=2066.473..16721.082 rows=1823453 loops=1)
Q5,1.0,->  Hash Join  (cost=70847.48..1868319.73 rows=73422 width=34) (actual time=2124.923..17519.879 rows=73639 loops=1)
Q5,1.0,->  Hash Join  (cost=66167.91..389342.04 rows=459184 width=38) (actual time=2066.432..8100.865 rows=456159 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2036.204..2036.204 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27826.28..337798.87 rows=2295920 width=8) (actual time=27.586..5035.947 rows=2277940 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.676..375.478 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5904.01..270033.48 rows=572098 width=20) (actual time=30.324..5071.757 rows=567700 loops=1)
Q3,1.0,->  Hash Join  (cost=106911.89..497366.87 rows=1469240 width=12) (actual time=422.943..7107.949 rows=1460432 loops=1)
Q3,1.0,->  Hash  (cost=497366.87..497366.87 rows=1469240 width=12) (actual time=7567.347..7567.347 rows=1460432 loops=1)
Q3,1.0,->  Hash  (cost=45927.76..45927.76 rows=298535 width=4) (actual time=393.384..393.384 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.44 rows=298535 width=0) (actual time=67.170..67.170 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57252.44..405331.58 rows=7382251 width=16) (actual time=27.585..4329.077 rows=7321169 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252001.82..1734559.67 rows=32497268 width=12) (actual time=120.342..21053.214 rows=32206415 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.07..45927.76 rows=298535 width=4) (actual time=76.146..315.431 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.013..3947.363 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8283.779..8283.779 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599026.96..643102.94 rows=58896 width=20) (actual time=9148.732..9700.760 rows=63740 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6584.12 rows=383085 width=0) (actual time=89.513..89.513 rows=382321 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6679.89..52013.87 rows=383085 width=4) (actual time=98.535..646.113 rows=382321 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.306..30.771 rows=4021 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.876..31.876 rows=4021 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.290..30.121 rows=4021 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=7103.155..7243.016 rows=1602624 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.425..135.714 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8011 width=30) (actual time=0.624..1153.727 rows=8062 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=148.096..5943.708 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=147.952..147.952 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.282..26.285 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.301..31.618 rows=4029 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.58 rows=20003 width=0) (actual time=9.204..9.204 rows=21726 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.281..30.875 rows=4029 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.09..34893.92 rows=22022 width=4) (actual time=12.942..318.142 rows=21726 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.92..633577.93 rows=1146 width=8) (actual time=36.310..2310.467 rows=1170 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.203..4.203 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.67 rows=8094 width=0) (actual time=3.735..3.735 rows=7904 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.15 rows=8045 width=0) (actual time=3.468..3.468 rows=8175 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.11 rows=7940 width=0) (actual time=3.675..3.675 rows=8100 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.027..0.027 rows=30 loops=4968)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12865.17..26629.97 rows=4788 width=30) (actual time=33.915..293.162 rows=4968 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=16) (actual time=0.006..2158.448 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.007..7254.930 rows=60045379 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1670260.01 rows=60165501 width=8) (actual time=0.016..8513.681 rows=60045379 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.042 rows=30 loops=1928)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.042 rows=30 loops=1928)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.36 rows=1993 width=0) (actual time=0.921..0.921 rows=1928 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.86..6607.40 rows=1993 width=4) (actual time=1.236..33.724 rows=1928 loops=1)
Q16,1.0,Sort  (cost=412215.27..412284.40 rows=27654 width=40) (actual time=11461.012..11464.452 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50938.42..50938.42 rows=294968 width=40) (actual time=1438.957..1438.957 rows=296250 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402576.18..410175.07 rows=27654 width=40) (actual time=10655.069..11400.187 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2469.75..50938.42 rows=294968 width=40) (actual time=34.873..1291.072 rows=296250 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=279253.14..1902822.84 rows=2227141 width=12) (actual time=119.258..26094.797 rows=2242913 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=279253.14..1902822.84 rows=2227141 width=12) (actual time=119.300..27372.780 rows=2242913 loops=1)
Q14,1.0,->  Hash Join  (cost=93294.61..1133258.29 rows=743864 width=29) (actual time=1500.662..26500.576 rows=750317 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7772.61..1036578.33 rows=743864 width=12) (actual time=140.857..24187.340 rows=750317 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..447376.99 rows=15027814 width=8) (actual time=0.023..8375.005 rows=14854030 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..741822.20 rows=15027814 width=8) (actual time=1279.855..18828.383 rows=15354046 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407300.59 rows=15149959 width=20) (actual time=0.013..4307.299 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2439191.60 rows=291798 width=15) (actual time=0.146..24581.591 rows=312817 loops=1)
Q12,1.0,->  Hash Join  (cost=596675.08..3044985.37 rows=291798 width=27) (actual time=9021.983..33926.311 rows=312817 loops=1)
Q12,1.0,->  Hash  (cost=407300.59..407300.59 rows=15149959 width=20) (actual time=8967.945..8967.945 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.316..30.626 rows=3934 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.302..23.342 rows=3934 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.213..3780.079 rows=314720 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=31.649..4030.511 rows=314720 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.593..31.593 rows=3934 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.157..24.157 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.275..22.670 rows=3934 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.298..29.994 rows=3934 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1826108.85 rows=59932798 width=20) (actual time=0.014..19518.858 rows=59629607 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.24 rows=14925092 width=12) (actual time=0.014..17642.359 rows=14823489 loops=1)
Q10,1.0,->  Hash  (cost=268783.99..268783.99 rows=562772 width=8) (actual time=5756.523..5756.523 rows=562050 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5808.41..268783.99 rows=562772 width=8) (actual time=27.509..5531.572 rows=562050 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.012..0.012 rows=0 loops=398733)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1525374)
Q19,,->  BitmapOr  (cost=12865.17..12865.17 rows=4791 width=0) (actual time=29.958..29.958 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.365..0.400 rows=0 loops=4968)
Q19,,->  BitmapAnd  (cost=6283.60..6283.60 rows=2405 width=0) (actual time=8.389..8.389 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.22..4292.22 rows=1583 width=0) (actual time=8.666..8.666 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.85..2288.85 rows=803 width=0) (actual time=9.134..9.134 rows=0 loops=1)
