Q21,716631.0,->  Nested Loop Semi Join  (cost=2406.31..2849551.35 rows=1 width=34) (actual time=39.620..36857.337 rows=716631 loops=1)
Q3,317641.3,->  Sort  (cost=2553509.48..2561450.51 rows=3176413 width=20) (actual time=37205.714..37205.715 rows=10 loops=1)
Q18,303259.9,->  GroupAggregate  (cost=10154484.36..10980109.49 rows=30022732 width=39) (actual time=68292.523..68292.845 rows=99 loops=1)
Q15,100000.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..0.022 rows=1 loops=1)
Q18,75833.2,->  Hash Join  (cost=2179646.04..2793225.90 rows=7507492 width=39) (actual time=43727.942..49083.672 rows=99 loops=1)
Q18,75833.2,->  Hash Join  (cost=2110618.04..2611585.52 rows=7507492 width=20) (actual time=42537.511..47892.986 rows=99 loops=1)
Q18,75833.2,->  Hash  (cost=2793225.90..2793225.90 rows=7507492 width=39) (actual time=49083.862..49083.862 rows=99 loops=1)
Q18,43322.8,->  Sort  (cost=10154484.36..10229541.19 rows=30022732 width=39) (actual time=68292.511..68292.555 rows=693 loops=1)
Q18,43322.8,->  Hash Join  (cost=2887069.54..5604792.80 rows=30022732 width=39) (actual time=49457.895..68291.508 rows=693 loops=1)
Q18,41403.4,->  Hash  (cost=2059381.22..2059381.22 rows=4098945 width=4) (actual time=42419.833..42419.833 rows=99 loops=1)
Q18,41403.4,->  HashAggregate  (cost=1967154.96..2018391.77 rows=4098945 width=8) (actual time=37067.963..42419.664 rows=99 loops=1)
Q21,40172.0,->  Nested Loop Anti Join  (cost=2406.88..2849553.13 rows=1 width=26) (actual time=40.075..39661.462 rows=40172 loops=1)
Q10,27781.5,->  Sort  (cost=2295681.52..2297070.60 rows=555631 width=175) (actual time=30383.737..30383.741 rows=20 loops=1)
Q9,25941.3,->  Sort  (cost=1134000.21..1134000.53 rows=125 width=46) (actual time=94583.866..95248.380 rows=3242671 loops=1)
Q9,25941.3,->  Nested Loop  (cost=66824.59..1133991.95 rows=125 width=24) (actual time=1009.500..85225.362 rows=3242671 loops=1)
Q9,25941.3,->  Nested Loop  (cost=66824.16..1133931.37 rows=125 width=24) (actual time=1009.482..53708.518 rows=3242671 loops=1)
Q9,25941.3,->  Nested Loop  (cost=66823.87..1133891.04 rows=125 width=28) (actual time=1009.473..42951.234 rows=3242671 loops=1)
Q9,25941.3,->  Hash Join  (cost=66826.15..1133995.86 rows=125 width=46) (actual time=1009.555..88441.200 rows=3242671 loops=1)
Q2,4656.0,->  Merge Join  (cost=465618.54..889386.90 rows=1 width=190) (actual time=6761.242..8749.753 rows=4656 loops=1)
Q21,4054.0,->  HashAggregate  (cost=2849553.14..2849553.15 rows=1 width=26) (actual time=39720.077..39721.365 rows=4054 loops=1)
Q7,764.0,Sort  (cost=2137655.44..2137663.08 rows=3056 width=64) (actual time=25380.256..25380.256 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2137432.70..2137478.54 rows=3056 width=64) (actual time=25380.183..25380.192 rows=4 loops=1)
Q8,367.0,Sort  (cost=1747064.94..1747066.77 rows=734 width=38) (actual time=12067.325..12067.325 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1747017.16..1747030.00 rows=734 width=38) (actual time=12067.285..12067.287 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2849553.16..2849553.16 rows=1 width=26) (actual time=39722.565..39722.572 rows=100 loops=1)
Q21,100.0,Limit  (cost=2849553.16..2849553.16 rows=1 width=26) (actual time=39722.565..39722.580 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=889386.91..889386.92 rows=1 width=190) (actual time=8754.696..8754.709 rows=100 loops=1)
Q2,100.0,Limit  (cost=889386.91..889386.92 rows=1 width=190) (actual time=8754.698..8754.723 rows=100 loops=1)
Q11,32.9,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8183.556..8184.690 rows=9722 loops=1)
Q11,32.9,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8096.030..8178.164 rows=9722 loops=1)
Q3,28.0,->  HashAggregate  (cost=2453104.20..2484868.33 rows=3176413 width=20) (actual time=37134.815..37184.667 rows=113352 loops=1)
Q15,26.9,->  HashAggregate  (cost=2015251.32..2015288.43 rows=3711 width=12) (actual time=19433.778..19464.728 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=743928)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7668.17 rows=752017 width=0) (actual time=140.924..140.924 rows=10803200 loops=1)
Q3,10.5,->  Hash Join  (cost=768113.92..2405458.01 rows=3176413 width=20) (actual time=9563.089..36862.786 rows=299844 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2402.41 rows=318720 width=0) (actual time=34.842..34.842 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.085 rows=7 loops=432552)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.598..3.598 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.608..3.608 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.249..0.249 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.298..0.298 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.278..0.278 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1928517.12..1928517.18 rows=25 width=34) (actual time=16765.521..16765.521 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1928516.29..1928516.54 rows=25 width=34) (actual time=16765.476..16765.477 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490524.93..1490524.94 rows=1 width=16) (actual time=14059.355..14059.356 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.015..0.015 rows=1 loops=573770)
Q4,5.0,->  HashAggregate  (cost=1490524.91..1490524.92 rows=1 width=16) (actual time=14059.305..14059.305 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=716631)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5652.14 rows=561214 width=0) (actual time=28.679..28.679 rows=2563840 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5807.52 rows=576752 width=0) (actual time=27.533..27.533 rows=2543360 loops=1)
Q13,4.4,Sort  (cost=851526.51..851527.01 rows=200 width=8) (actual time=27498.466..27498.472 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=851516.87..851518.87 rows=200 width=8) (actual time=27498.392..27498.401 rows=45 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1202024)
Q17,3.8,->  Nested Loop  (cost=82.55..113236.84 rows=19955 width=4) (actual time=1.470..204.596 rows=5230 loops=1)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.012..0.013 rows=4 loops=457859)
Q4,3.3,->  Nested Loop Semi Join  (cost=5952.27..1489740.02 rows=156978 width=16) (actual time=27.719..13755.787 rows=526526 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.016..0.039 rows=3 loops=1948)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..244549.21 rows=32586828 width=0) (actual time=122.972..122.972 rows=10760960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.296..0.368 rows=3 loops=21851)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55218.50 rows=7357134 width=0) (actual time=27.429..27.429 rows=2558720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44680.92 rows=5952122 width=0) (actual time=27.515..27.515 rows=2561280 loops=1)
Q22,2.3,Sort  (cost=694139.12..694139.13 rows=3 width=20) (actual time=8904.313..8904.314 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=641174.22..641174.26 rows=3 width=20) (actual time=8904.268..8904.269 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.042..0.058 rows=2 loops=6268)
Q20,2.0,->  Nested Loop  (cost=754.53..11669241.07 rows=29156 width=4) (actual time=13.382..8355.536 rows=59478 loops=1)
Q20,2.0,->  Hash  (cost=11669241.07..11669241.07 rows=29156 width=4) (actual time=8392.088..8392.088 rows=59478 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.659..4.659 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402750.70..404218.24 rows=587017 width=40) (actual time=10296.196..10463.993 rows=1186879 loops=1)
Q16,2.0,->  Hash Join  (cost=54677.37..346505.54 rows=587017 width=40) (actual time=1208.337..6571.430 rows=1186879 loops=1)
Q12,2.0,Sort  (cost=3065196.22..3065196.23 rows=1 width=27) (actual time=33858.659..33858.659 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3065196.20..3065196.21 rows=1 width=27) (actual time=33858.609..33858.611 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=346562.39..2261449.29 rows=555631 width=175) (actual time=7326.121..28133.463 rows=1121421 loops=1)
Q10,2.0,->  Hash Join  (cost=346560.83..2253807.81 rows=555631 width=153) (actual time=7326.091..27735.072 rows=1121421 loops=1)
Q10,2.0,->  Hash Join  (cost=277532.83..2176445.34 rows=555631 width=12) (actual time=5606.941..25213.954 rows=1121421 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2328458.33 rows=390005 width=38) (actual time=39.551..32636.575 rows=743928 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1906305.29 rows=801934 width=34) (actual time=39.375..24784.582 rows=1538163 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.446..3768.277 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1820673.76 rows=20055167 width=8) (actual time=0.021..17831.113 rows=37966418 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.039..0.405 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672048.07..11672050.98 rows=1166 width=51) (actual time=8422.468..8422.579 rows=1795 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669648.52..11671988.68 rows=1166 width=51) (actual time=8392.554..8420.830 rows=1795 loops=1)
Q1,1.5,Sort  (cost=4199637.42..4199637.44 rows=6 width=20) (actual time=91961.212..91961.213 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4199637.24..4199637.34 rows=6 width=20) (actual time=91961.162..91961.165 rows=4 loops=1)
Q9,1.4,GroupAggregate  (cost=1134000.21..1134004.59 rows=125 width=46) (actual time=94594.100..97454.415 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.165..4.165 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2275340.07..2280896.38 rows=555631 width=175) (actual time=30046.894..30247.544 rows=375013 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2906.22 rows=140322 width=0) (actual time=467.773..467.773 rows=190955 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2941.30..41902.76 rows=140322 width=24) (actual time=476.310..575.463 rows=190955 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92446.80 rows=9229880 width=0) (actual time=120.468..120.468 rows=10792960 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=104104 width=4) (actual time=0.011..970.609 rows=108138 loops=1)
Q9,1.0,->  Hash Join  (cost=66823.30..351916.18 rows=413488 width=16) (actual time=1009.414..5286.836 rows=432552 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=104104 width=4) (actual time=1008.919..1008.919 rows=108138 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.701..2146.837 rows=300270 loops=1)
Q8,1.0,->  Nested Loop  (cost=422.19..1699014.77 rows=123937 width=20) (actual time=7.177..9522.375 rows=121506 loops=1)
Q8,1.0,->  Nested Loop  (cost=421.75..1500060.51 rows=406328 width=16) (actual time=7.015..4788.088 rows=399583 loops=1)
Q8,1.0,->  Nested Loop  (cost=38752.63..1746055.41 rows=24779 width=16) (actual time=2249.272..11984.701 rows=24165 loops=1)
Q8,1.0,->  Hash Join  (cost=38754.19..1746521.58 rows=24779 width=38) (actual time=2249.322..12023.896 rows=24165 loops=1)
Q8,1.0,->  Hash Join  (cost=38752.34..1738057.55 rows=24787 width=16) (actual time=2249.254..11839.644 rows=24165 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2239.392..2239.392 rows=300270 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..413.73 rows=13507 width=0) (actual time=4.674..4.674 rows=13333 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.64 rows=31 width=0) (actual time=0.023..0.023 rows=30 loops=13333)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=417.11..28331.61 rows=13507 width=4) (actual time=6.921..169.359 rows=13333 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.65 rows=31 width=20) (actual time=0.034..0.332 rows=30 loops=13333)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.632..419.370 rows=60054 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..408085.57 rows=15179157 width=8) (actual time=0.006..2816.893 rows=15000000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2124611.22 rows=1469882 width=42) (actual time=925.346..24502.531 rows=1462476 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2136515.45 rows=61150 width=64) (actual time=964.692..25282.271 rows=58240 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535755.14 rows=1214333 width=30) (actual time=925.322..10211.132 rows=1202024 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..878.429 rows=120034 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.037..37.095 rows=7969 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=924.799..924.799 rows=120034 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.292..39.292 rows=7969 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92647.57..1379579.87 rows=803076 width=8) (actual time=121.235..24061.024 rows=797683 loops=1)
Q5,1.0,->  Nested Loop  (cost=83602.27..1908459.22 rows=1852846 width=46) (actual time=2465.407..15830.131 rows=1830368 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.741..2306.808 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=88281.27..1927775.43 rows=74086 width=34) (actual time=2521.760..16681.125 rows=73112 loops=1)
Q5,1.0,->  Hash Join  (cost=83601.71..442258.16 rows=463326 width=38) (actual time=2465.387..9020.124 rows=457859 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2435.334..2435.334 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45260.07..390595.90 rows=2316631 width=8) (actual time=27.683..5512.755 rows=2284200 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.645..450.266 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5951.71..268883.99 rows=576752 width=20) (actual time=27.698..4855.975 rows=573770 loops=1)
Q3,1.0,->  Hash Join  (cost=106836.75..496958.66 rows=1476748 width=12) (actual time=743.296..8868.946 rows=1460255 loops=1)
Q3,1.0,->  Hash  (cost=496958.66..496958.66 rows=1476748 width=12) (actual time=9430.222..9430.222 rows=1460255 loops=1)
Q3,1.0,->  Hash  (cost=46015.40..46015.40 rows=301085 width=4) (actual time=713.314..713.314 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.56 rows=301085 width=0) (actual time=67.758..67.758 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57057.79..404822.96 rows=7357134 width=16) (actual time=27.588..5443.603 rows=7303439 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=252695.92..1736075.27 rows=32586828 width=12) (actual time=123.744..21693.486 rows=32338914 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.84..46015.40 rows=301085 width=4) (actual time=76.767..611.224 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=4) (actual time=0.016..3818.387 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=405283.20..405283.20 rows=15074920 width=4) (actual time=8118.664..8118.664 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=596661.00..640732.71 rows=58868 width=20) (actual time=8672.197..8882.962 rows=63791 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6582.75 rows=382899 width=0) (actual time=87.774..87.774 rows=381994 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6678.48..52007.58 rows=382899 width=4) (actual time=96.588..343.558 rows=381994 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.324..38.095 rows=4054 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=39.286..39.286 rows=4054 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.312..37.373 rows=4054 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6760.994..6887.572 rows=1602851 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.320..131.048 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8076 width=30) (actual time=0.059..1165.654 rows=7941 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=143.401..5587.068 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=143.251..143.251 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.264..25.342 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.308..26.676 rows=4023 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.59 rows=20004 width=0) (actual time=9.157..9.157 rows=21851 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.293..26.050 rows=4023 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.10..34893.95 rows=22022 width=4) (actual time=12.795..283.464 rows=21851 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.56..630731.02 rows=1136 width=8) (actual time=34.562..2025.026 rows=1151 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.269..4.269 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.87 rows=8118 width=0) (actual time=3.743..3.743 rows=7928 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.95 rows=8023 width=0) (actual time=3.828..3.828 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.79 rows=7908 width=0) (actual time=3.481..3.481 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.026..0.026 rows=30 loops=4804)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.82..26578.72 rows=4766 width=30) (actual time=34.072..143.588 rows=4804 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.006..2543.713 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666927.64 rows=60045464 width=8) (actual time=0.003..7250.173 rows=59985329 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666927.64 rows=60045464 width=8) (actual time=0.003..8792.962 rows=59985329 loops=1)
Q18,1.0,Limit  (cost=10154484.36..10154487.11 rows=100 width=39) (actual time=68292.525..68292.862 rows=99 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1948)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.041 rows=30 loops=1948)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.29 rows=1986 width=0) (actual time=0.939..0.939 rows=1948 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.78..6586.12 rows=1986 width=4) (actual time=1.268..31.813 rows=1948 loops=1)
Q16,1.0,Sort  (cost=412410.43..412479.71 rows=27712 width=40) (actual time=11137.234..11140.680 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50966.30..50966.30 rows=295587 width=40) (actual time=1205.494..1205.494 rows=296896 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402750.70..410365.53 rows=27712 width=40) (actual time=10296.262..11076.695 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2476.30..50966.30 rows=295587 width=40) (actual time=34.896..1077.540 rows=296896 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1992690.80 rows=2256052 width=12) (actual time=0.102..17567.700 rows=2242369 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1992690.80 rows=2256052 width=12) (actual time=0.016..17967.799 rows=2242369 loops=1)
Q14,1.0,->  Hash Join  (cost=93378.18..1144740.07 rows=752017 width=29) (actual time=1749.374..28352.156 rows=749695 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7856.18..1047937.82 rows=752017 width=12) (actual time=141.763..25960.501 rows=749695 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..445615.79 rows=14968654 width=8) (actual time=0.024..7381.861 rows=14854042 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..739173.60 rows=14968654 width=8) (actual time=842.141..17202.687 rows=15354058 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.012..5127.773 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2451285.06 rows=293033 width=15) (actual time=0.022..22838.012 rows=312549 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..3060068.12 rows=293033 width=27) (actual time=10441.054..33580.568 rows=312549 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=10363.376..10363.376 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.309..30.671 rows=3973 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.301..23.286 rows=3973 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.278..3743.591 rows=317840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=31.773..4002.951 rows=317840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.702..31.702 rows=3973 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.200..24.200 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.273..22.672 rows=3973 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.286..30.024 rows=3973 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1824306.24 rows=59383275 width=20) (actual time=0.013..19958.385 rows=59164185 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1836997.74 rows=15028924 width=12) (actual time=0.011..16528.722 rows=14822519 loops=1)
Q10,1.0,->  Hash  (cost=270517.65..270517.65 rows=561214 width=8) (actual time=5602.130..5602.130 rows=561005 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5792.44..270517.65 rows=561214 width=8) (actual time=28.843..5405.709 rows=561005 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.011..0.011 rows=0 loops=399583)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1538163)
Q19,,->  BitmapOr  (cost=12864.82..12864.82 rows=4769 width=0) (actual time=30.143..30.143 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.351..0.386 rows=0 loops=4804)
Q19,,->  BitmapAnd  (cost=6282.23..6282.23 rows=2364 width=0) (actual time=8.386..8.386 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.05..4293.05 rows=1600 width=0) (actual time=8.892..8.892 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2289.04..2289.04 rows=805 width=0) (actual time=9.197..9.197 rows=0 loops=1)
Q15,,->  Subquery Scan on revenue7  (cost=2032171.71..2032255.21 rows=3711 width=12) (actual time=39328.211..39328.211 rows=0 loops=1)
Q15,,->  Sort  (cost=2032475.23..2032484.50 rows=3711 width=12) (actual time=39328.224..39328.224 rows=0 loops=1)
Q15,,Merge Join  (cost=4047810.35..4052907.21 rows=3711 width=79) (actual time=39328.250..39328.250 rows=0 loops=1)
Q15,,->  HashAggregate  (cost=2032171.71..2032218.10 rows=3711 width=12) (actual time=39328.211..39328.211 rows=0 loops=1)
