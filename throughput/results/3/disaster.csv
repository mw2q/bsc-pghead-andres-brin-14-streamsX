Q21,709719.0,->  Nested Loop Semi Join  (cost=2406.31..2878111.41 rows=1 width=34) (actual time=36.773..39059.549 rows=709719 loops=1)
Q18,402300.7,->  GroupAggregate  (cost=10204978.01..11034723.25 rows=30172554 width=39) (actual time=74275.991..74276.245 rows=75 loops=1)
Q3,319259.2,->  Sort  (cost=2567849.54..2575831.02 rows=3192592 width=20) (actual time=36953.836..36953.837 rows=10 loops=1)
Q18,100599.3,->  Hash Join  (cost=2189462.70..2805899.61 rows=7544952 width=39) (actual time=47565.855..54488.777 rows=75 loops=1)
Q18,100599.3,->  Hash Join  (cost=2120434.70..2623697.33 rows=7544952 width=20) (actual time=46213.235..53135.886 rows=75 loops=1)
Q18,100599.3,->  Hash  (cost=2805899.61..2805899.61 rows=7544952 width=39) (actual time=54488.955..54488.955 rows=75 loops=1)
Q15,100000.0,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.021..0.021 rows=1 loops=1)
Q18,57471.5,->  Sort  (cost=10204978.01..10280409.40 rows=30172554 width=39) (actual time=74275.980..74276.009 rows=525 loops=1)
Q18,57471.5,->  Hash Join  (cost=2900211.51..5631496.98 rows=30172554 width=39) (actual time=54648.894..74275.192 rows=525 loops=1)
Q18,54652.6,->  Hash  (cost=2069197.88..2069197.88 rows=4098945 width=4) (actual time=46060.355..46060.355 rows=75 loops=1)
Q18,54652.6,->  HashAggregate  (cost=1976971.62..2028208.43 rows=4098945 width=8) (actual time=40302.532..46060.187 rows=75 loops=1)
Q21,39951.0,->  Nested Loop Anti Join  (cost=2406.88..2878113.19 rows=1 width=26) (actual time=38.491..41967.701 rows=39951 loops=1)
Q10,28969.7,->  Sort  (cost=2294705.23..2296153.71 rows=579394 width=175) (actual time=33801.675..33801.678 rows=20 loops=1)
Q9,24033.9,->  Sort  (cost=1194815.65..1194815.98 rows=135 width=46) (actual time=95737.553..96417.256 rows=3244582 loops=1)
Q9,24033.9,->  Nested Loop  (cost=66924.69..1194806.78 rows=135 width=24) (actual time=1041.716..86481.926 rows=3244582 loops=1)
Q9,24033.9,->  Nested Loop  (cost=66924.26..1194741.35 rows=135 width=24) (actual time=1041.700..54959.183 rows=3244582 loops=1)
Q9,24033.9,->  Nested Loop  (cost=66923.96..1194697.79 rows=135 width=28) (actual time=1041.690..44376.650 rows=3244582 loops=1)
Q9,24033.9,->  Hash Join  (cost=66926.25..1194810.87 rows=135 width=46) (actual time=1041.770..89667.648 rows=3244582 loops=1)
Q2,4618.0,->  Merge Join  (cost=465618.54..877222.35 rows=1 width=190) (actual time=8245.997..10569.997 rows=4618 loops=1)
Q21,4023.0,->  HashAggregate  (cost=2878113.19..2878113.20 rows=1 width=26) (actual time=42027.416..42028.658 rows=4023 loops=1)
Q7,764.0,Sort  (cost=2118897.86..2118905.50 rows=3056 width=64) (actual time=22618.244..22618.244 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2118675.11..2118720.95 rows=3056 width=64) (actual time=22618.185..22618.191 rows=4 loops=1)
Q8,367.0,Sort  (cost=1690998.68..1691000.51 rows=734 width=38) (actual time=13971.411..13971.412 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1690950.89..1690963.74 rows=734 width=38) (actual time=13971.375..13971.375 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2878113.21..2878113.22 rows=1 width=26) (actual time=42029.842..42029.848 rows=100 loops=1)
Q21,100.0,Limit  (cost=2878113.21..2878113.22 rows=1 width=26) (actual time=42029.843..42029.862 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=877222.36..877222.36 rows=1 width=190) (actual time=10575.600..10575.622 rows=100 loops=1)
Q2,100.0,Limit  (cost=877222.36..877222.36 rows=1 width=190) (actual time=10575.600..10575.629 rows=100 loops=1)
Q11,33.1,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8676.063..8677.247 rows=9650 loops=1)
Q11,33.1,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8592.184..8670.619 rows=9650 loops=1)
Q3,28.0,->  HashAggregate  (cost=2466932.85..2498858.77 rows=3192592 width=20) (actual time=36883.561..36932.577 rows=113805 loops=1)
Q15,26.2,->  HashAggregate  (cost=2009885.20..2009923.30 rows=3810 width=12) (actual time=19516.679..19547.265 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=736425)
Q14,13.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8032.29 rows=788429 width=0) (actual time=133.303..133.303 rows=10734080 loops=1)
Q3,10.6,->  Hash Join  (cost=771807.20..2419043.97 rows=3192592 width=20) (actual time=10991.859..36616.790 rows=300431 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2398.61 rows=318213 width=0) (actual time=35.557..35.557 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.088 rows=8 loops=432072)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=4.005..4.005 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.626..3.626 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.244..0.244 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.272..0.272 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.259..0.259 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.257..0.257 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1910769.05..1910769.11 rows=25 width=34) (actual time=15440.979..15440.980 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1910768.22..1910768.47 rows=25 width=34) (actual time=15440.941..15440.944 rows=5 loops=1)
Q4,5.0,Sort  (cost=1488172.41..1488172.42 rows=1 width=16) (actual time=15625.868..15625.868 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.07 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574980)
Q4,5.0,->  HashAggregate  (cost=1488172.39..1488172.40 rows=1 width=16) (actual time=15625.815..15625.816 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=709719)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5796.04 rows=575604 width=0) (actual time=48.636..48.636 rows=2538240 loops=1)
Q13,4.3,Sort  (cost=855248.43..855248.93 rows=200 width=8) (actual time=29357.637..29357.637 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=855238.79..855240.79 rows=200 width=8) (actual time=29357.569..29357.578 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5892.23 rows=585223 width=0) (actual time=27.505..27.505 rows=2558720 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1203716)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.011..0.013 rows=4 loops=457866)
Q17,3.6,->  Nested Loop  (cost=82.60..113518.49 rows=19965 width=4) (actual time=1.590..188.576 rows=5418 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5940.51..1487387.50 rows=156978 width=16) (actual time=48.921..15304.560 rows=527108 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.032 rows=3 loops=2024)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..246578.08 rows=32857345 width=0) (actual time=120.166..120.166 rows=10814720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.60 rows=1 width=8) (actual time=0.335..0.406 rows=3 loops=21291)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55302.07 rows=7368276 width=0) (actual time=27.569..27.569 rows=2571520 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44283.59 rows=5899146 width=0) (actual time=27.186..27.186 rows=2538240 loops=1)
Q22,2.3,Sort  (cost=695151.73..695151.73 rows=3 width=20) (actual time=9464.411..9464.411 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642277.73..642277.78 rows=3 width=20) (actual time=9464.362..9464.363 rows=7 loops=1)
Q20,2.1,->  Nested Loop  (cost=677.99..10936200.33 rows=26506 width=4) (actual time=13.339..8948.786 rows=57764 loops=1)
Q20,2.1,->  Hash  (cost=10936200.33..10936200.33 rows=26506 width=4) (actual time=8983.154..8983.154 rows=57764 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.049..0.069 rows=2 loops=6188)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=5.011..5.011 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402717.86..404185.06 rows=586880 width=40) (actual time=11136.193..11295.079 rows=1184800 loops=1)
Q16,2.0,->  Hash Join  (cost=54660.01..346486.81 rows=586880 width=40) (actual time=1367.968..7337.833 rows=1184800 loops=1)
Q12,2.0,Sort  (cost=3065086.00..3065086.00 rows=1 width=27) (actual time=34504.641..34504.642 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3065085.98..3065085.99 rows=1 width=27) (actual time=34504.589..34504.590 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.762..4164.675 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=346962.73..2259008.97 rows=579394 width=175) (actual time=9085.860..31422.334 rows=1149039 loops=1)
Q10,1.9,->  Hash Join  (cost=346961.17..2251040.74 rows=579394 width=153) (actual time=9085.830..31001.805 rows=1149039 loops=1)
Q10,1.9,->  Hash Join  (cost=277933.17..2173321.83 rows=579394 width=12) (actual time=7772.439..28973.065 rows=1149039 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1838827.60 rows=20255136 width=8) (actual time=0.020..19106.950 rows=37966199 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2351716.76 rows=393893 width=38) (actual time=36.679..33790.345 rows=736425 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1925288.97 rows=809930 width=34) (actual time=36.643..26140.323 rows=1524554 loops=1)
Q20,1.7,Sort  (cost=10938966.50..10938969.15 rows=1060 width=51) (actual time=9014.221..9014.339 rows=1803 loops=1)
Q20,1.7,->  Hash Semi Join  (cost=10936574.66..10938913.24 rows=1060 width=51) (actual time=8983.580..9012.762 rows=1803 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.049..0.565 rows=56 loops=1)
Q1,1.5,Sort  (cost=4212025.19..4212025.20 rows=6 width=20) (actual time=92104.100..92104.101 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4212025.00..4212025.11 rows=6 width=20) (actual time=92104.046..92104.050 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2273493.82..2279287.76 rows=579394 width=175) (actual time=33431.125..33661.504 rows=382029 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.574..4.574 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2871.50 rows=139650 width=0) (actual time=462.525..462.525 rows=190248 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2906.42..41850.23 rows=139650 width=24) (actual time=470.953..619.014 rows=190248 loops=1)
Q18,1.3,Limit  (cost=10204978.01..10204980.76 rows=100 width=39) (actual time=74275.994..74276.256 rows=75 loops=1)
Q9,1.2,GroupAggregate  (cost=1194815.65..1194820.37 rows=135 width=46) (actual time=95747.566..98615.730 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91444.76 rows=9129676 width=0) (actual time=118.937..118.937 rows=10676480 loops=1)
Q20,1.1,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.55 rows=18000 width=0) (actual time=9.010..9.010 rows=21291 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=112112 width=4) (actual time=0.012..1001.010 rows=108018 loops=1)
Q9,1.0,->  Hash Join  (cost=66923.40..352334.35 rows=445295 width=16) (actual time=1041.600..5150.813 rows=432072 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=112112 width=4) (actual time=1041.077..1041.077 rows=108018 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=4.155..2545.197 rows=299493 loops=1)
Q8,1.0,->  Nested Loop  (cost=402.12..1643334.82 rows=118983 width=20) (actual time=7.169..11011.816 rows=118589 loops=1)
Q8,1.0,->  Nested Loop  (cost=401.69..1452335.89 rows=390085 width=16) (actual time=6.731..5764.755 rows=389522 loops=1)
Q8,1.0,->  Nested Loop  (cost=38732.56..1690027.55 rows=23788 width=16) (actual time=2653.750..13888.867 rows=23908 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.34 rows=31 width=20) (actual time=0.031..0.426 rows=30 loops=13011)
Q8,1.0,->  Hash Join  (cost=38734.13..1690475.13 rows=23788 width=38) (actual time=2653.797..13929.062 rows=23908 loops=1)
Q8,1.0,->  Hash Join  (cost=38732.27..1682349.12 rows=23797 width=16) (actual time=2653.728..13740.597 rows=23908 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2644.087..2644.087 rows=299493 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..397.88 rows=12993 width=0) (actual time=4.486..4.486 rows=13011 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=401.12..27695.71 rows=12993 width=4) (actual time=6.682..86.814 rows=13011 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=4.039..499.422 rows=59899 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404477.52 rows=15044952 width=8) (actual time=0.006..2732.483 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2105934.40 rows=1456820 width=42) (actual time=619.464..21836.635 rows=1465956 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2117766.02 rows=60606 width=64) (actual time=659.461..22522.769 rows=58807 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531536.45 rows=1203596 width=30) (actual time=619.366..8863.301 rows=1203716 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.044..580.149 rows=119972 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..37.821 rows=8029 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=618.874..618.874 rows=119972 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=39.855..39.855 rows=8029 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91635.62..1364596.33 rows=763467 width=8) (actual time=119.727..25343.847 rows=762923 loops=1)
Q5,1.0,->  Nested Loop  (cost=83199.79..1890847.85 rows=1836377 width=46) (actual time=2389.466..14600.905 rows=1830372 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.717..2243.072 rows=300963 loops=1)
Q5,1.0,->  Hash Join  (cost=87878.79..1910033.95 rows=73427 width=34) (actual time=2444.495..15354.107 rows=73114 loops=1)
Q5,1.0,->  Hash Join  (cost=83199.23..438663.48 rows=459202 width=38) (actual time=2389.450..8194.849 rows=457866 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2359.689..2359.689 rows=300963 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=44857.59..387119.78 rows=2296012 width=8) (actual time=27.356..4885.119 rows=2284056 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.659..438.381 rows=60193 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5939.94..268349.00 rows=575604 width=20) (actual time=48.866..6667.374 rows=574980 loops=1)
Q3,1.0,->  Hash Join  (cost=106929.39..498523.16 rows=1479329 width=12) (actual time=731.416..10195.630 rows=1454178 loops=1)
Q3,1.0,->  Hash  (cost=498523.16..498523.16 rows=1479329 width=12) (actual time=10861.082..10861.082 rows=1454178 loops=1)
Q3,1.0,->  Hash  (cost=46020.82..46020.82 rows=301155 width=4) (actual time=701.211..701.211 rows=300036 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6903.09 rows=301155 width=0) (actual time=68.960..68.960 rows=300036 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57144.14..406313.59 rows=7368276 width=16) (actual time=27.742..6482.789 rows=7270892 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=254792.42..1746888.23 rows=32857345 width=12) (actual time=120.920..20002.979 rows=32407687 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6978.38..46020.82 rows=301155 width=4) (actual time=78.020..608.087 rows=300036 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.016..3978.629 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8641.380..8641.380 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597808.75..641838.34 rows=58586 width=20) (actual time=9181.718..9442.604 rows=63124 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6545.00 rows=381066 width=0) (actual time=86.982..86.982 rows=380884 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6640.27..51921.25 rows=381066 width=4) (actual time=95.708..338.537 rows=380884 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.301..35.419 rows=4023 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=36.581..36.581 rows=4023 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.289..34.724 rows=4023 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=8245.792..8384.251 rows=1604063 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.304..137.613 rows=20051 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7762 width=30) (actual time=0.011..1392.037 rows=7884 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=149.062..7026.149 rows=1604080 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=148.926..148.926 rows=20051 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.256..26.657 rows=4010 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.284..27.901 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.268..27.261 rows=4007 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.56..33178.47 rows=20020 width=4) (actual time=12.605..263.962 rows=21291 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.67..632932.26 rows=1146 width=8) (actual time=48.068..3590.995 rows=1125 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.518..4.518 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.23 rows=8051 width=0) (actual time=4.074..4.074 rows=7987 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.75 rows=8005 width=0) (actual time=4.125..4.125 rows=8083 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=7998 width=0) (actual time=4.066..4.066 rows=8108 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.028..0.028 rows=30 loops=4847)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.92..26619.52 rows=4783 width=30) (actual time=39.847..329.124 rows=4847 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=16) (actual time=0.006..3071.484 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1675246.08 rows=60345108 width=8) (actual time=0.012..9789.078 rows=60045826 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1675246.08 rows=60345108 width=8) (actual time=0.038..8543.844 rows=60045826 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=2024)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=2024)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.34 rows=1991 width=0) (actual time=0.928..0.928 rows=2024 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.84..6601.32 rows=1991 width=4) (actual time=1.245..27.175 rows=2024 loops=1)
Q16,1.0,Sort  (cost=412375.24..412444.50 rows=27705 width=40) (actual time=11958.994..11962.821 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=50949.81..50949.81 rows=295518 width=40) (actual time=1363.810..1363.810 rows=296366 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402717.86..410330.91 rows=27705 width=40) (actual time=11136.258..11892.807 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2472.49..50949.81 rows=295518 width=40) (actual time=35.614..1238.376 rows=296366 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1986788.27 rows=2309693 width=12) (actual time=0.008..17664.248 rows=2249014 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1986788.27 rows=2309693 width=12) (actual time=0.016..18449.364 rows=2249014 loops=1)
Q14,1.0,->  Hash Join  (cost=93751.40..1156004.87 rows=788429 width=29) (actual time=1734.040..25709.725 rows=774032 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8229.40..1058656.44 rows=788429 width=12) (actual time=134.044..23218.134 rows=774032 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446936.69 rows=15088705 width=8) (actual time=0.016..7684.597 rows=14853478 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..742295.26 rows=15088705 width=8) (actual time=827.332..18319.384 rows=15353499 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..409314.79 rows=15224879 width=20) (actual time=0.012..4862.267 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2451285.06 rows=290772 width=15) (actual time=0.025..24040.920 rows=311810 loops=1)
Q12,1.0,->  Hash Join  (cost=599625.78..3059997.47 rows=290772 width=27) (actual time=9812.565..34183.626 rows=311810 loops=1)
Q12,1.0,->  Hash  (cost=409314.79..409314.79 rows=15224879 width=20) (actual time=9733.009..9733.009 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.306..23.554 rows=3987 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.303..34.127 rows=3987 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.473..3786.536 rows=318960 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=35.167..4440.271 rows=318960 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=35.102..35.102 rows=3987 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.406..24.406 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.276..22.898 rows=3987 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.281..33.461 rows=3987 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820673.76 rows=59783781 width=20) (actual time=0.012..19724.901 rows=59608283 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1833348.23 rows=14999066 width=12) (actual time=0.017..17849.859 rows=14808082 loops=1)
Q10,1.0,->  Hash  (cost=270617.88..270617.88 rows=585223 width=8) (actual time=7767.511..7767.511 rows=575062 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6038.54..270617.88 rows=585223 width=8) (actual time=27.706..7503.741 rows=575062 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=389522)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1524554)
Q19,,->  BitmapOr  (cost=12864.92..12864.92 rows=4786 width=0) (actual time=34.483..34.483 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.606..0.650 rows=0 loops=4847)
Q19,,->  BitmapAnd  (cost=6283.19..6283.19 rows=2393 width=0) (actual time=9.666..9.666 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.82..4292.82 rows=1595 width=0) (actual time=9.468..9.468 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.41..2288.41 rows=799 width=0) (actual time=9.994..9.994 rows=0 loops=1)
Q15,,->  Subquery Scan on revenue3  (cost=2027207.89..2027293.62 rows=3810 width=12) (actual time=39920.854..39920.854 rows=0 loops=1)
Q15,,->  Sort  (cost=2027520.23..2027529.75 rows=3810 width=12) (actual time=39920.867..39920.867 rows=0 loops=1)
Q15,,Merge Join  (cost=4037491.45..4042589.80 rows=3810 width=79) (actual time=39920.892..39920.892 rows=0 loops=1)
Q15,,->  HashAggregate  (cost=2027207.89..2027255.52 rows=3810 width=12) (actual time=39920.852..39920.852 rows=0 loops=1)
