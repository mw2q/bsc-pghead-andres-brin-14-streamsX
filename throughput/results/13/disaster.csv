Q21,699900.0,->  Nested Loop Semi Join  (cost=2406.31..2843835.91 rows=1 width=34) (actual time=50.009..34288.875 rows=699900 loops=1)
Q18,353287.2,->  GroupAggregate  (cost=10275803.87..11111328.23 rows=30382704 width=39) (actual time=72796.355..72796.636 rows=86 loops=1)
Q3,312854.3,->  Sort  (cost=2531634.72..2539456.08 rows=3128543 width=20) (actual time=36605.160..36605.161 rows=10 loops=1)
Q18,88342.5,->  Hash Join  (cost=2203232.20..2823673.51 rows=7597456 width=39) (actual time=45947.825..52227.816 rows=86 loops=1)
Q18,88342.5,->  Hash Join  (cost=2134204.20..2640683.67 rows=7597456 width=20) (actual time=45057.801..51337.511 rows=86 loops=1)
Q18,88342.5,->  Hash  (cost=2823673.51..2823673.51 rows=7597456 width=39) (actual time=52227.998..52227.998 rows=86 loops=1)
Q18,50469.6,->  Sort  (cost=10275803.87..10351760.63 rows=30382704 width=39) (actual time=72796.345..72796.389 rows=602 loops=1)
Q18,50469.6,->  Hash Join  (cost=2918641.71..5668950.45 rows=30382704 width=39) (actual time=52307.166..72795.444 rows=602 loops=1)
Q18,47662.1,->  Hash  (cost=2082967.38..2082967.38 rows=4098945 width=4) (actual time=44947.265..44947.265 rows=86 loops=1)
Q18,47662.1,->  HashAggregate  (cost=1990741.12..2041977.93 rows=4098945 width=8) (actual time=39332.575..44947.059 rows=86 loops=1)
Q21,39230.0,->  Nested Loop Anti Join  (cost=2406.88..2843837.69 rows=1 width=26) (actual time=50.282..37114.253 rows=39230 loops=1)
Q10,28236.1,->  Sort  (cost=2284197.48..2285609.29 rows=564722 width=175) (actual time=31783.221..31783.224 rows=20 loops=1)
Q9,23033.8,->  Sort  (cost=1240012.91..1240013.27 rows=142 width=46) (actual time=94717.811..95349.864 rows=3270804 loops=1)
Q9,23033.8,->  Nested Loop  (cost=66999.77..1240003.61 rows=142 width=24) (actual time=1009.587..85400.781 rows=3270804 loops=1)
Q9,23033.8,->  Nested Loop  (cost=66999.33..1239934.79 rows=142 width=24) (actual time=1009.569..52948.439 rows=3270804 loops=1)
Q9,23033.8,->  Nested Loop  (cost=66999.04..1239888.97 rows=142 width=28) (actual time=1009.559..42049.005 rows=3270804 loops=1)
Q9,23033.8,->  Hash Join  (cost=67001.33..1240007.84 rows=142 width=46) (actual time=1009.646..88648.141 rows=3270804 loops=1)
Q2,4794.0,->  Merge Join  (cost=465618.54..886651.10 rows=1 width=190) (actual time=7721.987..9674.199 rows=4794 loops=1)
Q21,3960.0,->  HashAggregate  (cost=2843837.69..2843837.70 rows=1 width=26) (actual time=37166.653..37167.809 rows=3960 loops=1)
Q15,3675.0,->  Subquery Scan on revenue13  (cost=1899459.47..1899542.16 rows=3675 width=12) (actual time=50935.445..50953.003 rows=1 loops=1)
Q15,3675.0,->  Sort  (cost=1899759.78..1899768.97 rows=3675 width=12) (actual time=50953.022..50953.023 rows=1 loops=1)
Q15,3675.0,Merge Join  (cost=3782530.59..3787626.92 rows=3675 width=79) (actual time=50983.838..50983.840 rows=1 loops=1)
Q15,3675.0,->  HashAggregate  (cost=1899459.47..1899505.41 rows=3675 width=12) (actual time=50935.444..50953.001 rows=1 loops=1)
Q7,764.0,Sort  (cost=2116806.93..2116814.57 rows=3056 width=64) (actual time=20384.385..20384.385 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2116584.19..2116630.03 rows=3056 width=64) (actual time=20384.317..20384.326 rows=4 loops=1)
Q8,367.0,Sort  (cost=1747650.34..1747652.18 rows=734 width=38) (actual time=10899.358..10899.358 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1747602.56..1747615.40 rows=734 width=38) (actual time=10899.314..10899.315 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=37168.902..37168.908 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=37168.904..37168.920 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=886651.11..886651.12 rows=1 width=190) (actual time=9679.121..9679.137 rows=100 loops=1)
Q2,100.0,Limit  (cost=886651.11..886651.12 rows=1 width=190) (actual time=9679.124..9679.150 rows=100 loops=1)
Q11,34.3,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7355.602..7356.665 rows=9322 loops=1)
Q11,34.3,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=7270.401..7350.437 rows=9322 loops=1)
Q3,27.6,->  HashAggregate  (cost=2432742.60..2464028.03 rows=3128543 width=20) (actual time=36537.606..36584.112 rows=113156 loops=1)
Q15,27.2,->  HashAggregate  (cost=1882687.82..1882724.57 rows=3675 width=12) (actual time=24023.618..24054.980 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=726387)
Q14,14.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7653.34 rows=750534 width=0) (actual time=135.721..135.721 rows=10782720 loops=1)
Q3,10.4,->  Hash Join  (cost=762593.70..2385814.45 rows=3128543 width=20) (actual time=13396.325..36293.528 rows=298701 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2432.86 rows=322780 width=0) (actual time=34.803..34.803 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.084 rows=8 loops=435632)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.748..3.748 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.588..3.588 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.291..0.291 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.233..0.233 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.261..0.261 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.247..0.247 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.242..0.242 rows=23040 loops=1)
Q5,5.0,Sort  (cost=2015951.15..2015951.22 rows=25 width=34) (actual time=14620.244..14620.244 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=2015950.32..2015950.57 rows=25 width=34) (actual time=14620.203..14620.204 rows=5 loops=1)
Q4,5.0,Sort  (cost=1504607.23..1504607.24 rows=1 width=16) (actual time=16262.436..16262.436 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.03 rows=5 width=4) (actual time=0.014..0.014 rows=1 loops=574570)
Q4,5.0,->  HashAggregate  (cost=1504607.21..1504607.22 rows=1 width=16) (actual time=16262.386..16262.388 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=699900)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5743.94 rows=570394 width=0) (actual time=27.398..27.398 rows=2548480 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5905.39 rows=586539 width=0) (actual time=27.666..27.666 rows=2561280 loops=1)
Q13,4.3,Sort  (cost=854815.29..854815.79 rows=200 width=8) (actual time=27371.772..27371.776 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=854805.65..854807.65 rows=200 width=8) (actual time=27371.703..27371.712 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.008..0.008 rows=1 loops=1200391)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.04 rows=15 width=16) (actual time=0.010..0.011 rows=4 loops=455943)
Q17,3.6,->  Nested Loop  (cost=82.57..113347.10 rows=19915 width=4) (actual time=1.519..246.534 rows=5402 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=6052.59..1503814.53 rows=158536 width=16) (actual time=27.899..15936.133 rows=526402 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.024..0.056 rows=3 loops=2025)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..259561.19 rows=34588425 width=0) (actual time=120.473..120.473 rows=10814720 loops=1)
Q15,3.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..259561.19 rows=34588425 width=0) (actual time=119.263..119.263 rows=10814720 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..241685.07 rows=32204943 width=0) (actual time=119.075..119.075 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.60 rows=1 width=8) (actual time=0.396..0.469 rows=3 loops=21793)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55116.66 rows=7343555 width=0) (actual time=28.259..28.259 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=695345.39..695345.40 rows=3 width=20) (actual time=9199.765..9199.766 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=642367.08..642367.13 rows=3 width=20) (actual time=9199.719..9199.722 rows=7 loops=1)
Q20,2.2,->  Nested Loop  (cost=678.01..10936202.95 rows=26506 width=4) (actual time=15.893..10837.450 rows=59357 loops=1)
Q20,2.2,->  Hash  (cost=10936202.95..10936202.95 rows=26506 width=4) (actual time=10873.970..10873.970 rows=59357 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6528)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.637..4.637 rows=405760 loops=1)
Q12,2.0,Sort  (cost=3038022.35..3038022.36 rows=1 width=27) (actual time=34206.342..34206.342 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3038022.33..3038022.34 rows=1 width=27) (actual time=34206.293..34206.293 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=345388.94..2249405.16 rows=564722 width=175) (actual time=7567.960..29392.788 rows=1147011 loops=1)
Q10,2.0,->  Hash Join  (cost=345387.38..2241638.67 rows=564722 width=153) (actual time=7567.928..28973.030 rows=1147011 loops=1)
Q10,2.0,->  Hash Join  (cost=276359.38..2164139.84 rows=564722 width=12) (actual time=6169.373..26719.843 rows=1147011 loops=1)
Q16,1.9,->  Sort  (cost=403839.23..405326.79 rows=595022 width=40) (actual time=10439.376..10587.578 rows=1187981 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.419..3951.166 rows=7995520 loops=1)
Q16,1.9,->  Hash Join  (cost=54860.71..346768.93 rows=595022 width=40) (actual time=1295.922..6876.648 rows=1187981 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.30 rows=20015155 width=8) (actual time=0.004..16600.441 rows=37928797 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2323804.50 rows=389226 width=38) (actual time=49.994..30157.606 rows=726387 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1902506.79 rows=800334 width=34) (actual time=49.896..23111.247 rows=1503054 loops=1)
Q20,1.7,Sort  (cost=10938969.12..10938971.77 rows=1060 width=51) (actual time=10904.206..10904.349 rows=1825 loops=1)
Q20,1.7,->  Hash Semi Join  (cost=10936577.27..10938915.86 rows=1060 width=51) (actual time=10874.404..10902.748 rows=1825 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.038..0.372 rows=56 loops=1)
Q1,1.5,Sort  (cost=4200671.47..4200671.48 rows=6 width=20) (actual time=91516.697..91516.697 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4200671.28..4200671.39 rows=6 width=20) (actual time=91516.643..91516.646 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.166..4.166 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2263523.21..2269170.43 rows=564722 width=175) (actual time=31407.000..31643.736 rows=381504 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.55 rows=140457 width=0) (actual time=774.373..774.373 rows=190874 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.67..41907.66 rows=140457 width=24) (actual time=783.668..940.445 rows=190874 loops=1)
Q9,1.2,GroupAggregate  (cost=1240012.91..1240017.88 rows=142 width=46) (actual time=94727.760..97549.425 rows=175 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..672.57 rows=18002 width=0) (actual time=11.028..11.028 rows=21793 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..92612.80 rows=9246480 width=0) (actual time=120.064..120.064 rows=10760960 loops=1)
Q18,1.1,Limit  (cost=10275803.87..10275806.62 rows=100 width=39) (actual time=72796.358..72796.647 rows=86 loops=1)
Q15,1.1,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..22.641 rows=83967 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=118118 width=4) (actual time=0.037..966.993 rows=108908 loops=1)
Q9,1.0,->  Hash Join  (cost=66998.48..352647.97 rows=469150 width=16) (actual time=1009.513..4376.924 rows=435632 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=118118 width=4) (actual time=1008.894..1008.894 rows=108908 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.936..2157.468 rows=299838 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.16..1699787.89 rows=121530 width=20) (actual time=7.320..8321.928 rows=120726 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.73..1504687.64 rows=398437 width=16) (actual time=7.280..4269.392 rows=398485 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.60..1746659.45 rows=24298 width=16) (actual time=2262.894..10820.656 rows=24177 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..112.18 rows=32 width=20) (actual time=0.026..0.301 rows=30 loops=13283)
Q8,1.0,->  Hash Join  (cost=38739.16..1747116.60 rows=24298 width=38) (actual time=2262.936..10858.691 rows=24177 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.31..1738816.83 rows=24306 width=16) (actual time=2262.875..10661.446 rows=24177 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2253.239..2253.239 rows=299838 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.88 rows=13127 width=0) (actual time=4.691..4.691 rows=13283 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.16..27865.33 rows=13127 width=4) (actual time=7.221..144.117 rows=13283 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.784..421.437 rows=59968 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..404074.68 rows=15029968 width=8) (actual time=0.005..3343.252 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2103852.43 rows=1455372 width=42) (actual time=612.256..19666.526 rows=1456092 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2115676.00 rows=60546 width=64) (actual time=653.307..20292.421 rows=58368 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..531065.43 rows=1202397 width=30) (actual time=612.226..9008.272 rows=1200391 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.037..573.215 rows=120119 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.059..38.255 rows=7971 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=611.737..611.737 rows=120119 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.337..40.337 rows=7971 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=92713.43..1376803.23 rows=402489 width=8) (actual time=121.097..27635.810 rows=397817 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..483528.15 rows=2291107 width=8) (actual time=0.013..4837.282 rows=2279304 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.690..2031.607 rows=299838 loops=1)
Q5,1.0,->  Nested Loop  (cost=38342.20..1996062.68 rows=1832432 width=46) (actual time=2149.061..13819.371 rows=1823764 loops=1)
Q5,1.0,->  Hash Join  (cost=43021.20..2015217.62 rows=73270 width=34) (actual time=2205.332..14535.164 rows=73643 loops=1)
Q5,1.0,->  Hash Join  (cost=38341.63..535043.64 rows=458221 width=38) (actual time=2148.997..7957.913 rows=455943 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2146.629..2146.629 rows=299838 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.620..396.547 rows=59968 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6052.02..270904.11 rows=586539 width=20) (actual time=27.848..7603.307 rows=574570 loops=1)
Q3,1.0,->  Hash Join  (cost=106612.00..494588.16 rows=1461539 width=12) (actual time=766.210..12656.014 rows=1464319 loops=1)
Q3,1.0,->  Hash  (cost=494588.16..494588.16 rows=1461539 width=12) (actual time=13267.042..13267.042 rows=1464319 loops=1)
Q3,1.0,->  Hash  (cost=45927.76..45927.76 rows=298535 width=4) (actual time=735.421..735.421 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.44 rows=298535 width=0) (actual time=70.489..70.489 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56952.55..402774.99 rows=7343555 width=16) (actual time=28.415..9055.747 rows=7340832 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=249736.31..1720903.10 rows=32204943 width=12) (actual time=119.817..17469.469 rows=32190166 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.07..45927.76 rows=298535 width=4) (actual time=79.632..638.011 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406090.48 rows=15104948 width=4) (actual time=0.037..4038.875 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406090.48..406090.48 rows=15104948 width=4) (actual time=8077.849..8077.849 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=597845.00..641925.15 rows=58925 width=20) (actual time=8913.247..9176.982 rows=63693 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.48 rows=383267 width=0) (actual time=84.643..84.643 rows=382620 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6681.30..52020.06 rows=383267 width=4) (actual time=93.045..633.873 rows=382620 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.276..48.471 rows=3961 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=49.859..49.859 rows=3961 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.264..47.617 rows=3961 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=7721.514..7856.438 rows=1602524 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.378..166.579 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=8005 width=30) (actual time=0.239..1159.350 rows=8003 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=182.416..6532.995 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=182.249..182.249 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.311..32.130 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.292..26.821 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.274..26.242 rows=3973 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=677.58..33181.08 rows=20020 width=4) (actual time=15.076..582.446 rows=21793 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.22..632156.76 rows=1145 width=8) (actual time=35.042..2143.218 rows=1171 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.181..4.181 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.03 rows=8031 width=0) (actual time=3.729..3.729 rows=8135 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.71 rows=7999 width=0) (actual time=3.688..3.688 rows=8037 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.51 rows=7979 width=0) (actual time=3.414..3.414 rows=8015 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.026..0.026 rows=30 loops=4820)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.47..26603.83 rows=4777 width=30) (actual time=33.800..281.577 rows=4820 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..408509.11 rows=15194911 width=16) (actual time=0.006..3187.566 rows=15000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1686914.08 rows=60765408 width=8) (actual time=0.005..9205.200 rows=59985538 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1686914.08 rows=60765408 width=8) (actual time=0.049..10602.641 rows=59985538 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2025)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.025..0.040 rows=30 loops=2025)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.31 rows=1988 width=0) (actual time=0.957..0.957 rows=2025 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.80..6592.20 rows=1988 width=4) (actual time=1.310..36.635 rows=2025 loops=1)
Q16,1.0,Sort  (cost=413633.44..413703.67 rows=28090 width=40) (actual time=11245.268..11248.642 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51099.26..51099.26 rows=299618 width=40) (actual time=1293.537..1293.537 rows=297153 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403839.23..411557.91 rows=28090 width=40) (actual time=10439.431..11185.215 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2507.76..51099.26 rows=299618 width=40) (actual time=34.872..1171.705 rows=297153 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=260120.25..1860325.62 rows=2236220 width=12) (actual time=120.126..21997.622 rows=2248818 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=260120.25..1860325.62 rows=2236220 width=12) (actual time=121.422..24536.407 rows=2248818 loops=1)
Q14,1.0,->  Hash Join  (cost=93362.97..1142651.31 rows=750534 width=29) (actual time=1716.362..23786.549 rows=751083 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=7840.97..1045871.30 rows=750534 width=12) (actual time=136.507..21189.625 rows=751083 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..446496.39 rows=15089063 width=8) (actual time=0.015..6902.387 rows=14852952 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..741860.33 rows=15089063 width=8) (actual time=1135.239..17168.702 rows=15352973 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..405686.04 rows=15089904 width=20) (actual time=0.011..4684.151 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2429559.93 rows=290309 width=15) (actual time=0.097..24367.213 rows=311229 loops=1)
Q12,1.0,->  Hash Join  (cost=594309.84..3032941.93 rows=290309 width=27) (actual time=9188.591..33872.484 rows=311229 loops=1)
Q12,1.0,->  Hash  (cost=405686.04..405686.04 rows=15089904 width=20) (actual time=9142.707..9142.707 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.282..30.685 rows=4007 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.281..23.293 rows=4007 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=24.210..2410.142 rows=320560 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=31.726..4527.451 rows=320560 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.663..31.663 rows=4007 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=24.160..24.160 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.257..22.646 rows=4007 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.263..30.045 rows=4007 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1820673.76 rows=59499938 width=20) (actual time=0.021..19472.389 rows=59334161 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1826108.85 rows=14939839 width=12) (actual time=0.012..16973.590 rows=14823276 loops=1)
Q10,1.0,->  Hash  (cost=269229.45..269229.45 rows=570394 width=8) (actual time=6164.195..6164.195 rows=573882 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5886.54..269229.45 rows=570394 width=8) (actual time=27.560..5936.511 rows=573882 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=398485)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1503054)
Q19,,->  BitmapOr  (cost=12864.47..12864.47 rows=4780 width=0) (actual time=29.713..29.713 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.349..0.381 rows=0 loops=4820)
Q19,,->  BitmapAnd  (cost=6282.95..6282.95 rows=2385 width=0) (actual time=8.293..8.293 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.14..4293.14 rows=1602 width=0) (actual time=8.662..8.662 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.88..2287.88 rows=793 width=0) (actual time=9.082..9.082 rows=0 loops=1)
