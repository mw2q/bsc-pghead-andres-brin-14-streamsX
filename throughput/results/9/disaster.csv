Q21,695036.0,->  Nested Loop Semi Join  (cost=2406.31..2852389.66 rows=1 width=34) (actual time=31.797..36254.821 rows=695036 loops=1)
Q3,315709.3,->  Sort  (cost=2535830.02..2543722.75 rows=3157093 width=20) (actual time=34072.585..34072.588 rows=10 loops=1)
Q18,301427.7,->  GroupAggregate  (cost=10194934.85..11023861.03 rows=30142770 width=39) (actual time=71367.504..71367.821 rows=100 loops=1)
Q18,67905.0,->  Hash Join  (cost=2187511.16..2803376.66 rows=7537460 width=39) (actual time=46947.933..52620.304 rows=111 loops=1)
Q18,67905.0,->  Hash Join  (cost=2118483.16..2621286.76 rows=7537460 width=20) (actual time=46043.708..51715.772 rows=111 loops=1)
Q18,67905.0,->  Hash  (cost=2803376.66..2803376.66 rows=7537460 width=39) (actual time=52620.504..52620.504 rows=111 loops=1)
Q18,42999.6,->  Sort  (cost=10194934.85..10270291.78 rows=30142770 width=39) (actual time=71367.494..71367.531 rows=701 loops=1)
Q21,39107.0,->  Nested Loop Anti Join  (cost=2406.88..2852391.44 rows=1 width=26) (actual time=32.096..39030.347 rows=39107 loops=1)
Q18,38793.7,->  Hash Join  (cost=2897594.91..5626184.23 rows=30142770 width=39) (actual time=52730.587..71366.499 rows=777 loops=1)
Q18,36927.4,->  Hash  (cost=2067246.35..2067246.35 rows=4098945 width=4) (actual time=45907.090..45907.090 rows=111 loops=1)
Q18,36927.4,->  HashAggregate  (cost=1975020.08..2026256.90 rows=4098945 width=8) (actual time=39906.084..45906.864 rows=111 loops=1)
Q10,28918.2,->  Sort  (cost=2288200.62..2289646.53 rows=578364 width=175) (actual time=32762.207..32762.209 rows=20 loops=1)
Q9,27123.1,->  Sort  (cost=1113718.06..1113718.36 rows=121 width=46) (actual time=97563.070..98250.827 rows=3281898 loops=1)
Q9,27123.1,->  Nested Loop  (cost=66774.54..1113710.04 rows=121 width=24) (actual time=928.488..88092.725 rows=3281898 loops=1)
Q9,27123.1,->  Nested Loop  (cost=66774.11..1113651.40 rows=121 width=24) (actual time=928.471..56366.677 rows=3281898 loops=1)
Q9,27123.1,->  Nested Loop  (cost=66773.82..1113612.36 rows=121 width=28) (actual time=928.460..45662.943 rows=3281898 loops=1)
Q9,27123.1,->  Hash Join  (cost=66776.10..1113713.87 rows=121 width=46) (actual time=928.553..91351.058 rows=3281898 loops=1)
Q2,4692.0,->  Merge Join  (cost=465618.54..885722.88 rows=1 width=190) (actual time=6448.995..8390.782 rows=4692 loops=1)
Q21,3933.0,->  HashAggregate  (cost=2852391.45..2852391.46 rows=1 width=26) (actual time=39083.858..39085.034 rows=3933 loops=1)
Q15,3779.0,->  Subquery Scan on revenue9  (cost=2018854.80..2018939.83 rows=3779 width=12) (actual time=39637.629..39661.329 rows=1 loops=1)
Q15,3779.0,->  Sort  (cost=2019164.37..2019173.82 rows=3779 width=12) (actual time=39661.350..39661.351 rows=1 loops=1)
Q15,3779.0,Merge Join  (cost=4020991.72..4026089.61 rows=3779 width=79) (actual time=39688.742..39688.745 rows=1 loops=1)
Q15,3779.0,->  HashAggregate  (cost=2018854.80..2018902.04 rows=3779 width=12) (actual time=39637.628..39661.327 rows=1 loops=1)
Q7,764.0,Sort  (cost=2135644.70..2135652.34 rows=3056 width=64) (actual time=21752.707..21752.707 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2135421.96..2135467.80 rows=3056 width=64) (actual time=21752.642..21752.650 rows=4 loops=1)
Q8,367.0,Sort  (cost=1705670.06..1705671.90 rows=734 width=38) (actual time=13874.701..13874.701 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1705622.28..1705635.13 rows=734 width=38) (actual time=13874.664..13874.665 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2852391.47..2852391.47 rows=1 width=26) (actual time=39086.184..39086.191 rows=100 loops=1)
Q21,100.0,Limit  (cost=2852391.47..2852391.47 rows=1 width=26) (actual time=39086.186..39086.205 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885722.89..885722.90 rows=1 width=190) (actual time=8395.895..8395.908 rows=100 loops=1)
Q2,100.0,Limit  (cost=885722.89..885722.90 rows=1 width=190) (actual time=8395.897..8395.921 rows=100 loops=1)
Q11,34.2,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8630.606..8631.724 rows=9348 loops=1)
Q11,34.2,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8537.775..8625.388 rows=9348 loops=1)
Q3,27.8,->  HashAggregate  (cost=2436035.44..2467606.37 rows=3157093 width=20) (actual time=34003.985..34051.606 rows=113450 loops=1)
Q15,26.4,->  HashAggregate  (cost=2001742.02..2001779.81 rows=3779 width=12) (actual time=19762.190..19793.454 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.005..0.005 rows=1 loops=721525)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..7873.66 rows=772566 width=0) (actual time=174.757..174.757 rows=10814720 loops=1)
Q3,10.5,->  Hash Join  (cost=763264.20..2388679.05 rows=3157093 width=20) (actual time=11184.669..33757.702 rows=300197 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2424.36 rows=321647 width=0) (actual time=37.523..37.523 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.91 rows=1 width=24) (actual time=0.018..0.089 rows=7 loops=437776)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.610..3.610 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.605..3.605 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.269..0.269 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.285..0.285 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.251..0.251 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1880590.57..1880590.63 rows=25 width=34) (actual time=17538.876..17538.877 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1880589.74..1880589.99 rows=25 width=34) (actual time=17538.833..17538.833 rows=5 loops=1)
Q4,5.0,Sort  (cost=1503315.77..1503315.78 rows=1 width=16) (actual time=14440.497..14440.497 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.01 rows=5 width=4) (actual time=0.013..0.013 rows=1 loops=566793)
Q4,5.0,->  HashAggregate  (cost=1503315.75..1503315.76 rows=1 width=16) (actual time=14440.448..14440.450 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=695036)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5910.65 rows=587065 width=0) (actual time=27.577..27.577 rows=2553600 loops=1)
Q13,4.3,Sort  (cost=844895.76..844896.26 rows=200 width=8) (actual time=30601.069..30601.070 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=844886.12..844888.12 rows=200 width=8) (actual time=30600.999..30601.009 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5881.79 rows=584179 width=0) (actual time=27.426..27.426 rows=2551040 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.008..0.009 rows=1 loops=1203327)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.03 rows=15 width=16) (actual time=0.014..0.015 rows=4 loops=453298)
Q17,3.7,->  Nested Loop  (cost=78.36..112219.46 rows=19734 width=4) (actual time=1.563..170.162 rows=5277 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.014..0.033 rows=3 loops=1958)
Q4,3.2,->  Nested Loop Semi Join  (cost=6057.99..1502520.00 rows=159150 width=16) (actual time=27.763..14131.635 rows=519393 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..242565.96 rows=32322395 width=0) (actual time=117.988..117.988 rows=10686720 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.303..0.373 rows=3 loops=21780)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..54948.30 rows=7321106 width=0) (actual time=27.220..27.220 rows=2540800 loops=1)
Q22,2.3,Sort  (cost=696307.38..696307.39 rows=3 width=20) (actual time=10377.080..10377.080 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643448.69..643448.73 rows=3 width=20) (actual time=10377.033..10377.033 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.040..0.056 rows=2 loops=6235)
Q20,2.0,->  Nested Loop  (cost=754.49..11669238.64 rows=29156 width=4) (actual time=13.818..8381.149 rows=59020 loops=1)
Q20,2.0,->  Hash  (cost=11669238.64..11669238.64 rows=29156 width=4) (actual time=8417.391..8417.391 rows=59020 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403554.37..405036.74 rows=592947 width=40) (actual time=10368.169..10522.607 rows=1189854 loops=1)
Q16,2.0,->  Hash Join  (cost=54810.57..346698.04 rows=592947 width=40) (actual time=1329.755..6767.062 rows=1189854 loops=1)
Q12,2.0,Sort  (cost=3056115.03..3056115.04 rows=1 width=27) (actual time=34236.310..34236.310 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3056115.01..3056115.02 rows=1 width=27) (actual time=34236.259..34236.260 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.422..3857.947 rows=7995520 loops=1)
Q10,1.9,->  Hash Join  (cost=346163.32..2252567.82 rows=578364 width=175) (actual time=8109.544..30436.438 rows=1147560 loops=1)
Q10,1.9,->  Hash Join  (cost=346161.75..2244613.76 rows=578364 width=153) (actual time=8109.516..30024.392 rows=1147560 loops=1)
Q10,1.9,->  Hash Join  (cost=277133.75..2166910.30 rows=578364 width=12) (actual time=6416.413..27594.709 rows=1147560 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1822478.08 rows=20075042 width=8) (actual time=0.018..18332.429 rows=37966584 loops=1)
Q21,1.8,->  Nested Loop  (cost=2405.75..2330770.55 rows=390391 width=38) (actual time=31.744..32145.032 rows=721525 loops=1)
Q21,1.8,->  Hash Join  (cost=2405.31..1908192.09 rows=802729 width=34) (actual time=31.572..24986.537 rows=1493459 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.037..0.386 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672045.64..11672048.56 rows=1166 width=51) (actual time=8450.407..8450.535 rows=1830 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669646.09..11671986.25 rows=1166 width=51) (actual time=8417.869..8447.834 rows=1830 loops=1)
Q1,1.5,Sort  (cost=4202861.26..4202861.27 rows=6 width=20) (actual time=90148.351..90148.352 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4202861.08..4202861.18 rows=6 width=20) (actual time=90148.304..90148.306 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=2267026.92..2272810.56 rows=578364 width=175) (actual time=32396.133..32623.343 rows=381513 loops=1)
Q9,1.4,GroupAggregate  (cost=1113718.06..1113722.29 rows=121 width=46) (actual time=97573.659..100473.266 rows=175 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..27413.94 rows=3649859 width=0) (actual time=27.542..27.542 rows=2571520 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.171..4.171 rows=405760 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.96 rows=139497 width=0) (actual time=1058.687..1058.687 rows=190469 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2904.84..41844.63 rows=139497 width=24) (actual time=1067.777..1544.827 rows=190469 loops=1)
Q15,1.3,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.020..20.318 rows=71981 loops=1)
Q9,1.1,->  Hash Join  (cost=66773.25..351707.10 rows=397585 width=16) (actual time=928.414..5446.141 rows=437776 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91350.96 rows=9120296 width=0) (actual time=132.560..132.560 rows=10686720 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=100100 width=4) (actual time=0.018..888.434 rows=109444 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=100100 width=4) (actual time=927.804..927.804 rows=109444 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.753..2500.074 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=407.16..1657910.57 rows=120210 width=20) (actual time=7.241..10959.337 rows=119699 loops=1)
Q8,1.0,->  Nested Loop  (cost=406.73..1464941.85 rows=394108 width=16) (actual time=6.938..5674.181 rows=395114 loops=1)
Q8,1.0,->  Nested Loop  (cost=38737.60..1704689.40 rows=24034 width=16) (actual time=2615.487..13790.134 rows=24124 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.16 rows=31 width=20) (actual time=0.030..0.414 rows=30 loops=13149)
Q8,1.0,->  Hash Join  (cost=38739.16..1705141.60 rows=24034 width=38) (actual time=2615.537..13831.027 rows=24124 loops=1)
Q8,1.0,->  Hash Join  (cost=38737.31..1696931.93 rows=24042 width=16) (actual time=2615.471..13646.564 rows=24124 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2604.260..2604.260 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..402.88 rows=13127 width=0) (actual time=4.677..4.677 rows=13149 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=406.16..27865.33 rows=13127 width=4) (actual time=6.868..85.589 rows=13149 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.644..490.288 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=8) (actual time=0.006..2958.214 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2122609.51 rows=1468424 width=42) (actual time=875.533..20975.040 rows=1460452 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2134505.63 rows=61089 width=64) (actual time=917.615..21661.786 rows=57818 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..535308.32 rows=1213195 width=30) (actual time=875.510..9365.824 rows=1203327 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.036..830.347 rows=119861 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.039..37.992 rows=7928 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=875.019..875.019 rows=119861 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.252..40.252 rows=7928 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91541.63..1365413.29 rows=762683 width=8) (actual time=133.336..18261.643 rows=762385 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.726..1897.452 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=66333.53..1860579.56 rows=1847197 width=46) (actual time=2033.094..16678.891 rows=1814114 loops=1)
Q5,1.0,->  Hash Join  (cost=71012.53..1879851.14 rows=73860 width=34) (actual time=2088.807..17448.487 rows=71939 loops=1)
Q5,1.0,->  Hash Join  (cost=66332.97..391426.81 rows=461912 width=38) (actual time=2033.071..9083.234 rows=453298 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2003.331..2003.331 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=27991.33..339805.22 rows=2309558 width=8) (actual time=27.728..6102.628 rows=2275958 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.641..369.707 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=6057.42..270158.40 rows=587065 width=20) (actual time=27.743..6460.734 rows=566793 loops=1)
Q3,1.0,->  Hash Join  (cost=106557.53..494248.68 rows=1469517 width=12) (actual time=728.227..10431.482 rows=1462794 loops=1)
Q3,1.0,->  Hash  (cost=494248.68..494248.68 rows=1469517 width=12) (actual time=11056.008..11056.008 rows=1462794 loops=1)
Q3,1.0,->  Hash  (cost=46015.40..46015.40 rows=301085 width=4) (actual time=698.367..698.367 rows=300441 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6898.56 rows=301085 width=0) (actual time=67.589..67.589 rows=300441 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56778.57..402320.40 rows=7321106 width=16) (actual time=27.386..6583.899 rows=7315809 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=250646.56..1723281.50 rows=32322395 width=12) (actual time=118.727..16803.358 rows=32290128 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6973.84..46015.40 rows=301085 width=4) (actual time=76.429..605.257 rows=300441 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.018..4114.450 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8580.488..8580.488 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=598989.78..643009.77 rows=58522 width=20) (actual time=9734.054..10348.515 rows=63505 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6541.85 rows=380647 width=0) (actual time=125.284..125.284 rows=381356 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6637.01..51906.99 rows=380647 width=4) (actual time=135.266..924.276 rows=381356 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.319..30.425 rows=3933 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=31.524..31.524 rows=3933 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.305..29.777 rows=3933 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6448.674..6581.149 rows=1602900 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.428..147.337 rows=20037 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7981 width=30) (actual time=0.120..1123.060 rows=8019 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=161.030..5287.993 rows=1602960 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=160.893..160.893 rows=20037 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.297..28.493 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.286..28.375 rows=4044 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.552..9.552 rows=21780 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.269..27.800 rows=4044 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.219..230.503 rows=21780 loops=1)
Q19,1.0,->  Nested Loop  (cost=12869.49..612373.33 rows=1135 width=8) (actual time=34.255..2139.345 rows=1131 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.170..4.170 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.35 rows=8065 width=0) (actual time=3.729..3.729 rows=8091 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.99 rows=8029 width=0) (actual time=3.812..3.812 rows=8090 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.19 rows=7948 width=0) (actual time=3.435..3.435 rows=7932 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4744)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12864.75..26598.99 rows=4774 width=30) (actual time=32.939..302.326 rows=4744 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..405283.20 rows=15074920 width=16) (actual time=0.005..2654.345 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.005..8888.992 rows=60046221 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1673592.39 rows=60285539 width=8) (actual time=0.064..7910.638 rows=60046221 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=1958)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.024..0.039 rows=30 loops=1958)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..68.11 rows=1968 width=0) (actual time=0.911..0.911 rows=1958 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=68.60..6530.36 rows=1968 width=4) (actual time=1.226..13.380 rows=1958 loops=1)
Q16,1.0,Sort  (cost=413313.72..413383.70 rows=27992 width=40) (actual time=11181.005..11184.404 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51062.18..51062.18 rows=298573 width=40) (actual time=1326.929..1326.929 rows=297622 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403554.37..411246.13 rows=27992 width=40) (actual time=10368.221..11120.878 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2499.00..51062.18 rows=298573 width=40) (actual time=37.584..1191.422 rows=297622 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1978924.98 rows=2281704 width=12) (actual time=0.011..17752.452 rows=2245872 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..1978924.98 rows=2281704 width=12) (actual time=0.018..17951.644 rows=2245872 loops=1)
Q14,1.0,->  Hash Join  (cost=93588.80..1154706.74 rows=772566 width=29) (actual time=1727.256..24340.870 rows=772360 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8066.80..1057596.25 rows=772566 width=12) (actual time=175.536..21942.792 rows=772360 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441649.60 rows=14835426 width=8) (actual time=0.019..7350.349 rows=14853941 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..733208.99 rows=14835426 width=8) (actual time=1042.765..19379.232 rows=15353957 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..408106.27 rows=15179927 width=20) (actual time=0.012..4505.808 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2444047.13 rows=291539 width=15) (actual time=0.060..24453.426 rows=313575 loops=1)
Q12,1.0,->  Hash Join  (cost=597855.36..3051013.08 rows=291539 width=27) (actual time=9080.385..33914.045 rows=313575 loops=1)
Q12,1.0,->  Hash  (cost=408106.27..408106.27 rows=15179927 width=20) (actual time=9028.311..9028.311 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.299..31.958 rows=4004 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.293..24.298 rows=4004 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.220..3926.817 rows=320320 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=33.044..4260.653 rows=320320 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=32.982..32.982 rows=4004 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.161..25.161 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.266..23.667 rows=4004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.278..31.276 rows=4004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1831523.48 rows=59283440 width=20) (actual time=0.013..19127.707 rows=58830619 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1827913.15 rows=14954601 width=12) (actual time=0.034..18047.548 rows=14822937 loops=1)
Q10,1.0,->  Hash  (cost=269831.52..269831.52 rows=584179 width=8) (actual time=6411.233..6411.233 rows=574241 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=6027.83..269831.52 rows=584179 width=8) (actual time=27.594..6181.488 rows=574241 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.013..0.013 rows=0 loops=395114)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1493459)
Q19,,->  BitmapOr  (cost=12864.75..12864.75 rows=4777 width=0) (actual time=29.039..29.039 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.345..0.380 rows=0 loops=4744)
Q19,,->  BitmapAnd  (cost=6282.63..6282.63 rows=2376 width=0) (actual time=8.253..8.253 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.10..4293.10 rows=1601 width=0) (actual time=8.672..8.672 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2288.52..2288.52 rows=800 width=0) (actual time=8.590..8.590 rows=0 loops=1)
