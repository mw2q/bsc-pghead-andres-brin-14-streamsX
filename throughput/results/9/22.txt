BEGIN;
BEGIN
EXPLAIN (ANALYZE, BUFFERS)
select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substr(c_phone, 1, 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substr(c_phone, 1, 2) in
				('24', '28', '11', '30', '15', '27', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substr(c_phone, 1, 2) in
						('24', '28', '11', '30', '15', '27', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as vip
group by
	cntrycode
order by
	cntrycode;
                                                                              QUERY PLAN                                                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=696307.38..696307.39 rows=3 width=20) (actual time=10377.080..10377.080 rows=7 loops=1)
   Sort Key: (substr((customer.c_phone)::text, 1, 2))
   Sort Method: quicksort  Memory: 25kB
   Buffers: shared hit=202705 read=124891 written=136
   InitPlan 1 (returns $0)
     ->  Aggregate  (cost=52858.61..52858.62 rows=1 width=4) (actual time=1002.838..1002.838 rows=1 loops=1)
           Buffers: shared hit=9 read=36331 written=55
           ->  Bitmap Heap Scan on customer customer_1  (cost=6637.01..51906.99 rows=380647 width=4) (actual time=135.266..924.276 rows=381356 loops=1)
                 Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{24,28,11,30,15,27,17}'::text[])) AND (c_acctbal > 0::double precision))
                 Heap Blocks: exact=35278
                 Buffers: shared hit=9 read=36331 written=55
                 ->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6541.85 rows=380647 width=0) (actual time=125.284..125.284 rows=381356 loops=1)
                       Index Cond: (substr((c_phone)::text, 1, 2) = ANY ('{24,28,11,30,15,27,17}'::text[]))
                       Buffers: shared hit=7 read=1055
   ->  HashAggregate  (cost=643448.69..643448.73 rows=3 width=20) (actual time=10377.033..10377.033 rows=7 loops=1)
         Group Key: substr((customer.c_phone)::text, 1, 2)
         Buffers: shared hit=202702 read=124891 written=136
         ->  Hash Anti Join  (cost=598989.78..643009.77 rows=58522 width=20) (actual time=9734.054..10348.515 rows=63505 loops=1)
               Hash Cond: (customer.c_custkey = orders.o_custkey)
               Buffers: shared hit=202702 read=124891 written=136
               ->  Bitmap Heap Scan on customer  (cost=2904.84..41844.63 rows=139497 width=24) (actual time=1067.777..1544.827 rows=190469 loops=1)
                     Recheck Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{24,28,11,30,15,27,17}'::text[])) AND (c_acctbal > $0))
                     Heap Blocks: exact=35158
                     Buffers: shared hit=21 read=72021 written=81
                     ->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2869.96 rows=139497 width=0) (actual time=1058.687..1058.687 rows=190469 loops=1)
                           Index Cond: ((substr((c_phone)::text, 1, 2) = ANY ('{24,28,11,30,15,27,17}'::text[])) AND (c_acctbal > $0))
                           Buffers: shared hit=19 read=36865 written=56
               ->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8580.488..8580.488 rows=15015000 loops=1)
                     Buckets: 16777216  Batches: 1  Memory Usage: 658944kB
                     Buffers: shared hit=202678 read=52870 written=55
                     ->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.018..4114.450 rows=15015000 loops=1)
                           Buffers: shared hit=202678 read=52870 written=55
 Planning time: 2.985 ms
 Execution time: 10390.955 ms
(34 rows)

COMMIT;
COMMIT
