Q21,724660.0,->  Nested Loop Semi Join  (cost=2406.31..2883793.65 rows=1 width=34) (actual time=34.086..37707.678 rows=724660 loops=1)
Q18,403493.5,->  GroupAggregate  (cost=10235146.40..11067351.92 rows=30262019 width=39) (actual time=76013.581..76013.824 rows=75 loops=1)
Q3,314167.5,->  Sort  (cost=2526861.17..2534715.35 rows=3141675 width=20) (actual time=38034.396..38034.398 rows=10 loops=1)
Q18,100899.8,->  Hash Join  (cost=2195324.64..2813480.32 rows=7567488 width=39) (actual time=49410.750..55685.474 rows=75 loops=1)
Q18,100899.8,->  Hash Join  (cost=2126296.64..2630940.00 rows=7567488 width=20) (actual time=48496.699..54771.115 rows=75 loops=1)
Q18,100899.8,->  Hash  (cost=2813480.32..2813480.32 rows=7567488 width=39) (actual time=55685.673..55685.673 rows=75 loops=1)
Q18,57641.9,->  Sort  (cost=10235146.40..10310801.45 rows=30262019 width=39) (actual time=76013.571..76013.598 rows=525 loops=1)
Q18,57641.9,->  Hash Join  (cost=2908073.92..5647457.99 rows=30262019 width=39) (actual time=55790.379..76012.834 rows=525 loops=1)
Q18,54652.6,->  Hash  (cost=2075059.83..2075059.83 rows=4098945 width=4) (actual time=48375.837..48375.837 rows=75 loops=1)
Q18,54652.6,->  HashAggregate  (cost=1982833.57..2034070.38 rows=4098945 width=8) (actual time=41306.297..48375.604 rows=75 loops=1)
Q21,40970.0,->  Nested Loop Anti Join  (cost=2406.88..2883795.43 rows=1 width=26) (actual time=34.726..40605.050 rows=40970 loops=1)
Q10,28342.3,->  Sort  (cost=2273881.06..2275298.17 rows=566847 width=175) (actual time=32942.525..32942.532 rows=20 loops=1)
Q9,24700.8,->  Sort  (cost=1178970.78..1178971.11 rows=132 width=46) (actual time=93922.628..94537.125 rows=3260507 loops=1)
Q9,24700.8,->  Nested Loop  (cost=66899.67..1178962.09 rows=132 width=24) (actual time=911.368..84786.463 rows=3260507 loops=1)
Q9,24700.8,->  Nested Loop  (cost=66899.23..1178898.12 rows=132 width=24) (actual time=911.351..52559.617 rows=3260507 loops=1)
Q9,24700.8,->  Nested Loop  (cost=66898.94..1178855.53 rows=132 width=28) (actual time=911.342..41868.719 rows=3260507 loops=1)
Q9,24700.8,->  Hash Join  (cost=66901.23..1178966.13 rows=132 width=46) (actual time=911.423..88037.822 rows=3260507 loops=1)
Q2,4714.0,->  Merge Join  (cost=465618.54..885576.32 rows=1 width=190) (actual time=6472.448..8420.283 rows=4714 loops=1)
Q21,4095.0,->  HashAggregate  (cost=2883795.44..2883795.45 rows=1 width=26) (actual time=40657.577..40658.952 rows=4095 loops=1)
Q15,3713.0,->  Subquery Scan on revenue6  (cost=1587832.11..1587915.65 rows=3713 width=12) (actual time=43266.297..43288.815 rows=1 loops=1)
Q15,3713.0,->  Sort  (cost=1588135.80..1588145.08 rows=3713 width=12) (actual time=43288.844..43288.844 rows=1 loops=1)
Q15,3713.0,Merge Join  (cost=3159307.02..3164403.91 rows=3713 width=79) (actual time=43306.579..43306.581 rows=1 loops=1)
Q15,3713.0,->  HashAggregate  (cost=1587832.11..1587878.52 rows=3713 width=12) (actual time=43266.296..43288.813 rows=1 loops=1)
Q7,764.0,Sort  (cost=2129363.54..2129371.18 rows=3056 width=64) (actual time=22590.441..22590.442 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2129140.80..2129186.64 rows=3056 width=64) (actual time=22590.381..22590.388 rows=4 loops=1)
Q8,367.0,Sort  (cost=1664044.60..1664046.43 rows=734 width=38) (actual time=10547.012..10547.012 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1663996.82..1664009.66 rows=734 width=38) (actual time=10546.967..10546.968 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2883795.46..2883795.46 rows=1 width=26) (actual time=40660.135..40660.142 rows=100 loops=1)
Q21,100.0,Limit  (cost=2883795.46..2883795.46 rows=1 width=26) (actual time=40660.137..40660.156 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=885576.33..885576.34 rows=1 width=190) (actual time=8425.253..8425.268 rows=100 loops=1)
Q2,100.0,Limit  (cost=885576.33..885576.34 rows=1 width=190) (actual time=8425.255..8425.281 rows=100 loops=1)
Q11,34.8,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=8422.407..8423.520 rows=9181 loops=1)
Q11,34.8,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=8321.487..8417.222 rows=9181 loops=1)
Q3,27.7,->  HashAggregate  (cost=2427553.95..2458970.70 rows=3141675 width=20) (actual time=37963.593..38013.223 rows=113375 loops=1)
Q15,26.9,->  HashAggregate  (cost=1571087.37..1571124.50 rows=3713 width=12) (actual time=20273.428..20305.345 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=752061)
Q14,13.4,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8162.92 rows=801492 width=0) (actual time=121.455..121.455 rows=10803200 loops=1)
Q3,10.4,->  Hash Join  (cost=761995.57..2380428.82 rows=3141675 width=20) (actual time=9958.736..37681.539 rows=299233 loops=1)
Q16,10.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2425.71 rows=321827 width=0) (actual time=34.982..34.982 rows=3246080 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.016..0.082 rows=7 loops=435100)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.616..3.616 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.597..3.597 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.243..0.243 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.299..0.299 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.263..0.263 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.253..0.253 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1933296.43..1933296.50 rows=25 width=34) (actual time=16673.923..16673.924 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1933295.60..1933295.85 rows=25 width=34) (actual time=16673.875..16673.876 rows=5 loops=1)
Q4,5.0,Sort  (cost=1490192.67..1490192.67 rows=1 width=16) (actual time=11543.044..11543.044 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.11 rows=5 width=4) (actual time=0.012..0.012 rows=1 loops=567035)
Q4,5.0,->  HashAggregate  (cost=1490192.65..1490192.66 rows=1 width=16) (actual time=11542.992..11542.992 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.004..0.004 rows=1 loops=724660)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5780.38 rows=574038 width=0) (actual time=48.008..48.008 rows=2553600 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5765.41 rows=572541 width=0) (actual time=30.277..30.277 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=846062.20..846062.70 rows=200 width=8) (actual time=27660.800..27660.805 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=846052.56..846054.56 rows=200 width=8) (actual time=27660.736..27660.744 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.009..0.010 rows=1 loops=1199912)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.02 rows=15 width=16) (actual time=0.014..0.016 rows=4 loops=456320)
Q17,3.7,->  Nested Loop  (cost=82.68..121799.09 rows=20264 width=4) (actual time=1.668..209.525 rows=5406 loops=1)
Q17,3.6,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.78..57.57 rows=11 width=12) (actual time=0.014..0.033 rows=3 loops=2024)
Q4,3.3,->  Nested Loop Semi Join  (cost=5924.46..1489414.56 rows=155618 width=16) (actual time=48.246..11266.592 rows=519671 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..544.40 rows=1 width=8) (actual time=0.305..0.375 rows=3 loops=21823)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55454.26 rows=7388568 width=0) (actual time=31.462..31.462 rows=2538240 loops=1)
Q3,2.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..239905.00 rows=31967600 width=0) (actual time=118.423..118.423 rows=10676480 loops=1)
Q15,2.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.022..13.687 rows=40961 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..44769.13 rows=5963884 width=0) (actual time=27.423..27.423 rows=2568960 loops=1)
Q22,2.3,Sort  (cost=696526.35..696526.36 rows=3 width=20) (actual time=9418.489..9418.490 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=643548.98..643549.03 rows=3 width=20) (actual time=9418.437..9418.438 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.041..0.056 rows=2 loops=6298)
Q20,2.0,->  Nested Loop  (cost=754.49..12023792.75 rows=29156 width=4) (actual time=14.106..8500.517 rows=59325 loops=1)
Q20,2.0,->  Hash  (cost=12023792.75..12023792.75 rows=29156 width=4) (actual time=8534.947..8534.947 rows=59325 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.186..4.186 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=403595.60..405078.71 rows=593243 width=40) (actual time=10084.492..10240.456 rows=1188465 loops=1)
Q16,2.0,->  Hash Join  (cost=54818.32..346708.75 rows=593243 width=40) (actual time=1287.033..6502.357 rows=1188465 loops=1)
Q12,2.0,Sort  (cost=3053107.90..3053107.91 rows=1 width=27) (actual time=33667.268..33667.268 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3053107.88..3053107.89 rows=1 width=27) (actual time=33667.217..33667.219 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344204.99..2238957.82 rows=566847 width=175) (actual time=10274.618..30705.908 rows=1148184 loops=1)
Q10,2.0,->  Hash Join  (cost=344203.42..2231162.11 rows=566847 width=153) (actual time=10274.588..30300.216 rows=1148184 loops=1)
Q10,2.0,->  Hash Join  (cost=275175.42..2153631.40 rows=566847 width=12) (actual time=8921.112..28130.449 rows=1148184 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2356342.75 rows=394667 width=38) (actual time=34.019..32957.849 rows=752061 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1929064.33 rows=811520 width=34) (actual time=33.969..25449.620 rows=1555785 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.426..3675.278 rows=7995520 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..159964.63 rows=21308884 width=0) (actual time=118.783..118.783 rows=10686720 loops=1)
Q15,1.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..159964.63 rows=21308884 width=0) (actual time=117.658..117.658 rows=10686720 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1842437.93 rows=20294905 width=8) (actual time=0.015..18691.713 rows=37965829 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.035..0.391 rows=56 loops=1)
Q20,1.5,Sort  (cost=12026599.75..12026602.66 rows=1166 width=51) (actual time=8566.367..8566.488 rows=1823 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=12024200.20..12026540.35 rows=1166 width=51) (actual time=8535.513..8564.844 rows=1823 loops=1)
Q1,1.5,Sort  (cost=4230777.69..4230777.71 rows=6 width=20) (actual time=91380.658..91380.658 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4230777.51..4230777.61 rows=6 width=20) (actual time=91380.606..91380.608 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.166..4.166 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2253128.99..2258797.46 rows=566847 width=175) (actual time=32600.751..32804.079 rows=381945 loops=1)
Q9,1.3,GroupAggregate  (cost=1178970.78..1178975.40 rows=132 width=46) (actual time=93932.625..96685.543 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2907.48 rows=140447 width=0) (actual time=580.753..580.753 rows=191120 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2942.60..41907.33 rows=140447 width=24) (actual time=589.543..739.182 rows=191120 loops=1)
Q18,1.3,Limit  (cost=10235146.40..10235149.15 rows=100 width=39) (actual time=76013.583..76013.838 rows=75 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..91717.91 rows=9156991 width=0) (actual time=122.674..122.674 rows=10708480 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=110110 width=4) (actual time=0.011..871.325 rows=108775 loops=1)
Q9,1.0,->  Hash Join  (cost=66898.38..352229.80 rows=437343 width=16) (actual time=911.261..5202.225 rows=435100 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=110110 width=4) (actual time=910.771..910.771 rows=108775 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.778..1874.691 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=396.11..1616530.15 rows=117068 width=20) (actual time=6.968..8267.285 rows=121598 loops=1)
Q8,1.0,->  Nested Loop  (cost=395.67..1428600.51 rows=383808 width=16) (actual time=6.747..4490.836 rows=400163 loops=1)
Q8,1.0,->  Nested Loop  (cost=38726.55..1663088.27 rows=23406 width=16) (actual time=1974.496..10466.420 rows=24271 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..109.74 rows=31 width=20) (actual time=0.026..0.316 rows=30 loops=13312)
Q8,1.0,->  Hash Join  (cost=38728.11..1663528.70 rows=23406 width=38) (actual time=1974.539..10505.687 rows=24271 loops=1)
Q8,1.0,->  Hash Join  (cost=38726.26..1655533.44 rows=23414 width=16) (actual time=1974.479..10324.996 rows=24271 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=1965.016..1965.016 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..391.93 rows=12733 width=0) (actual time=4.427..4.427 rows=13312 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=395.11..27369.02 rows=12733 width=4) (actual time=6.677..155.708 rows=13312 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.650..365.783 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..406494.91 rows=15119991 width=8) (actual time=0.006..3103.107 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2116355.31 rows=1464059 width=42) (actual time=626.035..21794.633 rows=1458923 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2128227.18 rows=60908 width=64) (actual time=666.573..22494.066 rows=58829 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..533895.27 rows=1209599 width=30) (actual time=626.003..9297.746 rows=1199912 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.038..586.099 rows=119598 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.034..37.969 rows=8016 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=625.454..625.454 rows=119598 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=40.161..40.161 rows=8016 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91909.35..1368678.64 rows=765751 width=8) (actual time=123.458..23772.084 rows=763576 loops=1)
Q5,1.0,->  Nested Loop  (cost=83691.63..1913196.74 rows=1857883 width=46) (actual time=2155.985..15747.675 rows=1824763 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.740..2012.957 rows=300270 loops=1)
Q5,1.0,->  Hash Join  (cost=88370.63..1932552.73 rows=74287 width=34) (actual time=2212.976..16579.511 rows=72760 loops=1)
Q5,1.0,->  Hash Join  (cost=83691.07..443056.28 rows=464242 width=38) (actual time=2155.960..7895.724 rows=456320 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2125.990..2125.990 rows=300270 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=45349.44..391367.70 rows=2321209 width=8) (actual time=27.586..4716.261 rows=2281952 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.630..392.816 rows=60054 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5923.89..269829.46 rows=574038 width=20) (actual time=48.195..4264.586 rows=567035 loops=1)
Q3,1.0,->  Hash Join  (cost=107024.74..495634.95 rows=1477098 width=12) (actual time=1383.603..9286.502 rows=1479875 loops=1)
Q3,1.0,->  Hash  (cost=495634.95..495634.95 rows=1477098 width=12) (actual time=9832.753..9832.753 rows=1479875 loops=1)
Q3,1.0,->  Hash  (cost=45974.90..45974.90 rows=299875 width=4) (actual time=1349.992..1349.992 rows=299496 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6873.49 rows=299875 width=0) (actual time=68.999..68.999 rows=299496 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=57301.40..403433.50 rows=7388568 width=16) (actual time=31.623..5123.369 rows=7396516 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=247896.90..1715034.90 rows=31967600 width=12) (actual time=119.185..22069.448 rows=31965617 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6948.46..45974.90 rows=299875 width=4) (actual time=77.909..1243.028 rows=299496 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=4) (actual time=0.014..4045.403 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=406897.75..406897.75 rows=15134975 width=4) (actual time=8463.195..8463.195 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=599027.53..643107.08 rows=58920 width=20) (actual time=9130.202..9396.007 rows=63857 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6585.33 rows=383240 width=0) (actual time=121.620..121.620 rows=382385 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6681.14..52019.19 rows=383240 width=4) (actual time=135.345..450.993 rows=382385 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.325..32.769 rows=4095 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=33.912..33.912 rows=4095 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.311..32.122 rows=4095 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=6472.003..6598.122 rows=1603339 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.312..130.881 rows=20042 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7978 width=30) (actual time=0.223..1146.200 rows=7941 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=142.406..5332.893 rows=1603360 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=142.258..142.258 rows=20042 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.259..25.283 rows=4008 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.321..28.100 rows=4010 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=9.630..9.630 rows=21823 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.303..27.461 rows=4010 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=13.411..278.228 rows=21823 loops=1)
Q19,1.0,->  Nested Loop  (cost=12868.64..630224.73 rows=1142 width=8) (actual time=34.275..1788.972 rows=1112 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.170..4.170 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..290.43 rows=8074 width=0) (actual time=3.830..3.830 rows=8186 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.47 rows=7978 width=0) (actual time=3.702..3.702 rows=8004 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..288.79 rows=7908 width=0) (actual time=3.484..3.484 rows=7963 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=32 width=0) (actual time=0.027..0.027 rows=30 loops=4791)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12863.89..26570.12 rows=4762 width=30) (actual time=33.254..156.880 rows=4791 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..406897.75 rows=15134975 width=16) (actual time=0.006..2522.295 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1680213.38 rows=60524038 width=8) (actual time=0.005..10552.812 rows=60044082 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1680213.38 rows=60524038 width=8) (actual time=0.015..10579.681 rows=60044082 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.024..0.046 rows=30 loops=2024)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.12 rows=32 width=4) (actual time=0.024..0.046 rows=30 loops=2024)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.40 rows=1997 width=0) (actual time=0.956..0.956 rows=2024 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.90..6616.54 rows=1997 width=4) (actual time=1.297..33.021 rows=2024 loops=1)
Q16,1.0,Sort  (cost=413359.92..413429.94 rows=28006 width=40) (actual time=10897.673..10901.304 rows=27839 loops=1)
Q16,1.0,->  Hash  (cost=51068.06..51068.06 rows=298722 width=40) (actual time=1284.043..1284.043 rows=297271 loops=1)
Q16,1.0,->  GroupAggregate  (cost=403595.60..411291.20 rows=28006 width=40) (actual time=10084.548..10837.000 rows=27839 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2500.39..51068.06 rows=298722 width=40) (actual time=35.053..1159.203 rows=297271 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=160522.79..1548761.05 rows=2232632 width=12) (actual time=118.410..18434.569 rows=2245262 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=160522.79..1548761.05 rows=2232632 width=12) (actual time=119.584..20900.105 rows=2245262 loops=1)
Q14,1.0,->  Hash Join  (cost=93885.29..1166216.13 rows=801492 width=29) (actual time=1489.585..25777.684 rows=772508 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8363.29..1068671.75 rows=801492 width=12) (actual time=124.490..23501.094 rows=772508 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..442530.20 rows=14849718 width=8) (actual time=0.016..7241.979 rows=14852505 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..734303.97 rows=14849718 width=8) (actual time=860.108..17514.162 rows=15352524 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..407703.43 rows=15164943 width=20) (actual time=0.012..4726.629 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2441623.90 rows=291667 width=15) (actual time=0.085..23303.976 rows=312873 loops=1)
Q12,1.0,->  Hash Join  (cost=597265.22..3048003.71 rows=291667 width=27) (actual time=9773.355..33369.990 rows=312873 loops=1)
Q12,1.0,->  Hash  (cost=407703.43..407703.43 rows=15164943 width=20) (actual time=9703.521..9703.521 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.298..30.530 rows=4023 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.294..24.606 rows=4023 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=25.565..3755.716 rows=321840 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=31.678..4195.997 rows=321840 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=31.608..31.608 rows=4023 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=25.485..25.485 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.268..23.957 rows=4023 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..29.870 rows=4023 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1835176.39 rows=59890028 width=20) (actual time=0.015..19557.102 rows=59249091 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.30 rows=14865656 width=12) (actual time=0.009..16080.178 rows=14808323 loops=1)
Q10,1.0,->  Hash  (cost=268018.66..268018.66 rows=572541 width=8) (actual time=8916.565..8916.565 rows=573365 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5908.55..268018.66 rows=572541 width=8) (actual time=30.445..8677.814 rows=573365 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.009..0.009 rows=0 loops=400163)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=1555785)
Q19,,->  BitmapOr  (cost=12863.89..12863.89 rows=4765 width=0) (actual time=29.437..29.437 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.75..126.75 rows=1 width=16) (actual time=0.305..0.335 rows=0 loops=4791)
Q19,,->  BitmapAnd  (cost=6282.22..6282.22 rows=2364 width=0) (actual time=8.351..8.351 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4293.53..4293.53 rows=1610 width=0) (actual time=8.797..8.797 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.64..2287.64 rows=791 width=0) (actual time=8.631..8.631 rows=0 loops=1)
