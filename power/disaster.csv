Q21,721293.0,->  Nested Loop Semi Join  (cost=2406.31..2843835.91 rows=1 width=34) (actual time=40.336..39868.734 rows=721293 loops=1)
Q18,357413.4,->  GroupAggregate  (cost=10154484.36..10980109.49 rows=30022732 width=39) (actual time=68981.228..68981.510 rows=84 loops=1)
Q3,312486.0,->  Sort  (cost=2526317.19..2534129.34 rows=3124860 width=20) (actual time=46451.199..46451.199 rows=10 loops=1)
Q18,89374.9,->  Hash Join  (cost=2179646.04..2793225.90 rows=7507492 width=39) (actual time=43533.484..50177.984 rows=84 loops=1)
Q18,89374.9,->  Hash Join  (cost=2110618.04..2611585.52 rows=7507492 width=20) (actual time=42409.558..49053.780 rows=84 loops=1)
Q18,89374.9,->  Hash  (cost=2793225.90..2793225.90 rows=7507492 width=39) (actual time=50178.289..50178.289 rows=84 loops=1)
Q18,51059.0,->  Sort  (cost=10154484.36..10229541.19 rows=30022732 width=39) (actual time=68981.211..68981.234 rows=588 loops=1)
Q18,51059.0,->  Hash Join  (cost=2887069.54..5604792.80 rows=30022732 width=39) (actual time=50606.017..68980.067 rows=588 loops=1)
Q18,48796.9,->  Hash  (cost=2059381.22..2059381.22 rows=4098945 width=4) (actual time=42240.481..42240.481 rows=84 loops=1)
Q18,48796.9,->  HashAggregate  (cost=1967154.96..2018391.77 rows=4098945 width=8) (actual time=37768.629..42240.008 rows=84 loops=1)
Q21,40451.0,->  Nested Loop Anti Join  (cost=2406.88..2843837.69 rows=1 width=26) (actual time=41.665..42716.085 rows=40451 loops=1)
Q10,28095.8,->  Sort  (cost=2273198.33..2274603.12 rows=561917 width=175) (actual time=35851.955..35851.959 rows=20 loops=1)
Q9,25906.0,->  Sort  (cost=1147799.58..1147799.90 rows=126 width=46) (actual time=88874.413..89329.360 rows=3264158 loops=1)
Q9,25906.0,->  Nested Loop  (cost=66849.62..1147791.26 rows=126 width=24) (actual time=662.482..80345.304 rows=3264158 loops=1)
Q9,25906.0,->  Nested Loop  (cost=66849.18..1147730.20 rows=126 width=24) (actual time=662.426..49202.959 rows=3264158 loops=1)
Q9,25906.0,->  Nested Loop  (cost=66848.89..1147689.54 rows=126 width=28) (actual time=662.414..39262.669 rows=3264158 loops=1)
Q9,25906.0,->  Hash Join  (cost=66851.18..1147795.19 rows=126 width=46) (actual time=662.558..83535.716 rows=3264158 loops=1)
Q2,4836.0,->  Merge Join  (cost=465618.54..884257.27 rows=1 width=190) (actual time=5960.055..7872.706 rows=4836 loops=1)
Q21,4079.0,->  HashAggregate  (cost=2843837.69..2843837.70 rows=1 width=26) (actual time=42786.695..42787.790 rows=4079 loops=1)
Q15,3711.0,->  Subquery Scan on revenue0  (cost=1772602.44..1772685.94 rows=3711 width=12) (actual time=54196.417..54198.919 rows=1 loops=1)
Q15,3711.0,->  Sort  (cost=1772905.96..1772915.23 rows=3711 width=12) (actual time=54198.940..54198.941 rows=1 loops=1)
Q15,3711.0,Merge Join  (cost=3528888.64..3533985.51 rows=3711 width=79) (actual time=54219.096..54219.098 rows=1 loops=1)
Q15,3711.0,->  HashAggregate  (cost=1772602.44..1772648.83 rows=3711 width=12) (actual time=54196.416..54198.917 rows=1 loops=1)
Q7,764.0,Sort  (cost=2114715.67..2114723.31 rows=3056 width=64) (actual time=24269.837..24269.837 rows=4 loops=1)
Q7,764.0,->  HashAggregate  (cost=2114492.93..2114538.77 rows=3056 width=64) (actual time=24269.759..24269.766 rows=4 loops=1)
Q8,367.0,Sort  (cost=1779477.44..1779479.28 rows=734 width=38) (actual time=10356.005..10356.005 rows=2 loops=1)
Q8,367.0,->  HashAggregate  (cost=1779429.66..1779442.51 rows=734 width=38) (actual time=10355.968..10355.968 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=42788.951..42788.959 rows=100 loops=1)
Q21,100.0,Limit  (cost=2843837.71..2843837.72 rows=1 width=26) (actual time=42788.953..42788.971 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=884257.28..884257.29 rows=1 width=190) (actual time=7877.482..7877.494 rows=100 loops=1)
Q2,100.0,Limit  (cost=884257.28..884257.29 rows=1 width=190) (actual time=7877.484..7877.508 rows=100 loops=1)
Q11,36.8,Sort  (cost=614369.02..615168.74 rows=319885 width=12) (actual time=7283.933..7284.785 rows=8685 loops=1)
Q11,36.8,->  HashAggregate  (cost=292160.15..296158.71 rows=319885 width=12) (actual time=7206.145..7279.050 rows=8685 loops=1)
Q3,27.6,->  HashAggregate  (cost=2427541.49..2458790.09 rows=3124860 width=20) (actual time=46393.152..46429.912 rows=113163 loops=1)
Q15,26.9,->  HashAggregate  (cost=1755898.88..1755935.99 rows=3711 width=12) (actual time=24826.049..24851.172 rows=100000 loops=1)
Q21,15.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.56..1.15 rows=15 width=8) (actual time=0.006..0.006 rows=1 loops=748809)
Q14,13.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..8109.05 rows=796105 width=0) (actual time=117.620..117.620 rows=10664960 loops=1)
Q3,10.4,->  Hash Join  (cost=761295.70..2380668.59 rows=3124860 width=20) (actual time=7817.521..46088.816 rows=298721 loops=1)
Q16,10.2,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..2396.31 rows=317907 width=0) (actual time=34.499..34.499 rows=3246080 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..1.88 rows=1 width=24) (actual time=0.015..0.077 rows=8 loops=434932)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.607..3.607 rows=353280 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..750.00 rows=60000 width=0) (actual time=3.635..3.635 rows=353280 loops=5)
Q2,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..330.00 rows=4000 width=0) (actual time=0.251..0.251 rows=23040 loops=5)
Q21,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.270..0.270 rows=23040 loops=1)
Q20,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.262..0.262 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.268..0.268 rows=23040 loops=1)
Q11,5.7,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..42.00 rows=4000 width=0) (actual time=0.255..0.255 rows=23040 loops=1)
Q5,5.0,Sort  (cost=1960374.00..1960374.06 rows=25 width=34) (actual time=16153.446..16153.446 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=1960373.17..1960373.42 rows=25 width=34) (actual time=16153.401..16153.402 rows=5 loops=1)
Q4,5.0,Sort  (cost=1479453.15..1479453.16 rows=1 width=16) (actual time=14316.520..14316.520 rows=5 loops=1)
Q4,5.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..7.13 rows=5 width=4) (actual time=0.016..0.016 rows=1 loops=566839)
Q4,5.0,->  HashAggregate  (cost=1479453.13..1479453.14 rows=1 width=16) (actual time=14316.464..14316.466 rows=5 loops=1)
Q21,5.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.56..1.15 rows=5 width=8) (actual time=0.003..0.003 rows=1 loops=721293)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5715.62 rows=567562 width=0) (actual time=27.324..27.324 rows=2535680 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..5715.62 rows=567562 width=0) (actual time=27.598..27.598 rows=2535680 loops=1)
Q13,4.3,Sort  (cost=844456.50..844457.00 rows=200 width=8) (actual time=29545.391..29545.395 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=844446.86..844448.86 rows=200 width=8) (actual time=29545.322..29545.330 rows=46 loops=1)
Q7,4.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..1.27 rows=4 width=20) (actual time=0.010..0.011 rows=1 loops=1200314)
Q5,3.7,->  Index Scan using pk_lineitem on lineitem  (cost=0.56..3.01 rows=15 width=16) (actual time=0.013..0.015 rows=4 loops=455387)
Q17,3.7,->  Nested Loop  (cost=82.63..113681.88 rows=19955 width=4) (actual time=1.555..176.439 rows=5329 loops=1)
Q4,3.3,->  Nested Loop Semi Join  (cost=5858.08..1478678.44 rows=154939 width=16) (actual time=27.515..13999.659 rows=519707 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.76..53.60 rows=10 width=12) (actual time=0.011..0.023 rows=3 loops=2003)
Q5,3.2,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..61441.36 rows=8186848 width=0) (actual time=27.392..27.392 rows=2535680 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..240910.13 rows=32101618 width=0) (actual time=119.031..119.031 rows=10664960 loops=1)
Q20,3.0,->  Index Scan using pk_partsupp on partsupp  (cost=0.43..528.30 rows=1 width=8) (actual time=0.284..0.354 rows=3 loops=21606)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderkey_o_orderdate_brin_idx  (cost=0.00..55118.97 rows=7343863 width=0) (actual time=27.502..27.502 rows=2535680 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..222297.90 rows=29619986 width=0) (actual time=120.546..120.546 rows=10664960 loops=1)
Q15,2.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..222297.90 rows=29619986 width=0) (actual time=118.616..118.616 rows=10664960 loops=1)
Q15,2.4,->  Index Scan using pk_supplier on supplier  (cost=0.29..4791.49 rows=100000 width=71) (actual time=0.017..16.038 rows=40959 loops=1)
Q22,2.3,Sort  (cost=691680.02..691680.02 rows=3 width=20) (actual time=9044.009..9044.010 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=638765.48..638765.53 rows=3 width=20) (actual time=9043.934..9043.937 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=0.86..48.83 rows=1 width=4) (actual time=0.033..0.049 rows=2 loops=6573)
Q20,2.0,->  Nested Loop  (cost=754.49..11669238.64 rows=29156 width=4) (actual time=12.997..8270.168 rows=58679 loops=1)
Q20,2.0,->  Hash  (cost=11669238.64..11669238.64 rows=29156 width=4) (actual time=8306.331..8306.331 rows=58679 loops=1)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..1995.53 rows=198353 width=0) (actual time=4.159..4.159 rows=405760 loops=1)
Q16,2.0,->  Sort  (cost=402648.42..404114.38 rows=586382 width=40) (actual time=10215.936..10361.113 rows=1183501 loops=1)
Q16,2.0,->  Hash Join  (cost=54646.86..346468.68 rows=586382 width=40) (actual time=1483.857..6977.870 rows=1183501 loops=1)
Q12,2.0,Sort  (cost=3022943.56..3022943.56 rows=1 width=27) (actual time=35305.370..35305.370 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=3022943.54..3022943.55 rows=1 width=27) (actual time=35305.290..35305.291 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=344017.03..2238578.83 rows=561917 width=175) (actual time=11286.269..33584.110 rows=1146807 loops=1)
Q10,2.0,->  Hash Join  (cost=344015.47..2230850.91 rows=561917 width=153) (actual time=11286.241..33187.503 rows=1146807 loops=1)
Q10,2.0,->  Hash Join  (cost=274987.47..2153394.15 rows=561917 width=12) (actual time=9620.355..30567.825 rows=1146807 loops=1)
Q21,1.9,->  Nested Loop  (cost=2405.75..2323804.50 rows=389226 width=38) (actual time=40.321..34645.947 rows=748809 loops=1)
Q21,1.9,->  Hash Join  (cost=2405.31..1902506.79 rows=800334 width=34) (actual time=40.228..26760.395 rows=1550438 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=16.23..270974.23 rows=4000000 width=8) (actual time=0.564..3920.406 rows=7995520 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..1817041.30 rows=20015155 width=8) (actual time=0.005..20789.651 rows=37967116 loops=1)
Q16,1.7,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..15.98 rows=100 width=4) (actual time=0.034..0.516 rows=56 loops=1)
Q20,1.5,Sort  (cost=11672045.64..11672048.56 rows=1166 width=51) (actual time=8334.865..8334.970 rows=1835 loops=1)
Q20,1.5,->  Hash Semi Join  (cost=11669646.09..11671986.25 rows=1166 width=51) (actual time=8306.773..8333.541 rows=1835 loops=1)
Q1,1.5,Sort  (cost=4179787.40..4179787.42 rows=6 width=20) (actual time=90876.829..90876.829 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=4179787.22..4179787.33 rows=6 width=20) (actual time=90876.742..90876.744 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..5990.80 rows=597880 width=0) (actual time=4.134..4.134 rows=405760 loops=1)
Q10,1.4,->  HashAggregate  (cost=2252626.75..2258245.92 rows=561917 width=175) (actual time=35495.869..35711.934 rows=381459 loops=1)
Q9,1.3,GroupAggregate  (cost=1147799.58..1147803.99 rows=126 width=46) (actual time=88884.057..91445.229 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..2875.56 rows=140057 width=0) (actual time=415.656..415.656 rows=190555 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=2910.58..41865.07 rows=140057 width=24) (actual time=423.706..521.639 rows=190555 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..90877.32 rows=9072932 width=0) (actual time=118.270..118.270 rows=10664960 loops=1)
Q18,1.1,Limit  (cost=10154484.36..10154487.11 rows=100 width=39) (actual time=68981.230..68981.522 rows=84 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..65522.00 rows=106106 width=4) (actual time=0.018..630.474 rows=108733 loops=1)
Q9,1.0,->  Hash Join  (cost=66848.32..352020.73 rows=421440 width=16) (actual time=662.314..4760.330 rows=434932 loops=1)
Q9,1.0,->  Hash  (cost=65522.00..65522.00 rows=106106 width=4) (actual time=661.799..661.799 rows=108733 loops=1)
Q8,1.0,->  Nested Loop  (cost=766.08..34580.15 rows=300000 width=4) (actual time=3.674..1914.450 rows=299436 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.43..1731232.19 rows=126437 width=20) (actual time=7.318..8021.235 rows=121079 loops=1)
Q8,1.0,->  Nested Loop  (cost=428.00..1528267.09 rows=414524 width=16) (actual time=7.096..3728.636 rows=397101 loops=1)
Q8,1.0,->  Nested Loop  (cost=38758.87..1778448.54 rows=25279 width=16) (actual time=2027.572..10277.991 rows=24077 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.56..108.30 rows=31 width=20) (actual time=0.026..0.251 rows=30 loops=13226)
Q8,1.0,->  Hash Join  (cost=38760.43..1778924.08 rows=25279 width=38) (actual time=2027.631..10316.014 rows=24077 loops=1)
Q8,1.0,->  Hash Join  (cost=38758.58..1770289.34 rows=25287 width=16) (actual time=2027.521..10114.118 rows=24077 loops=1)
Q8,1.0,->  Hash  (cost=34580.15..34580.15 rows=300000 width=4) (actual time=2017.124..2017.124 rows=299436 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..423.98 rows=13807 width=0) (actual time=4.834..4.834 rows=13226 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=427.43..28694.00 rows=13807 width=4) (actual time=7.047..276.151 rows=13226 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.641..373.764 rows=59887 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=8) (actual time=0.006..3505.061 rows=15015000 loops=1)
Q7,1.0,->  Nested Loop  (cost=58604.97..2101770.17 rows=1453914 width=42) (actual time=615.663..23579.816 rows=1458083 loops=1)
Q7,1.0,->  Hash Join  (cost=62340.37..2113585.65 rows=60485 width=64) (actual time=653.514..24180.299 rows=58139 loops=1)
Q7,1.0,->  Hash Join  (cost=58604.40..530594.42 rows=1201199 width=30) (actual time=615.355..9354.441 rows=1200314 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..57104.40 rows=120000 width=30) (actual time=0.043..576.686 rows=120107 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..3635.40 rows=8000 width=30) (actual time=0.038..35.810 rows=8027 loops=1)
Q7,1.0,->  Hash  (cost=57104.40..57104.40 rows=120000 width=30) (actual time=614.849..614.849 rows=120107 loops=1)
Q7,1.0,->  Hash  (cost=3635.40..3635.40 rows=8000 width=30) (actual time=37.718..37.718 rows=8027 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=91075.29..1361689.26 rows=791869 width=8) (actual time=119.111..28938.366 rows=796494 loops=1)
Q5,1.0,->  Nested Loop  (cost=765.14..34591.63 rows=300000 width=38) (actual time=3.830..2253.742 rows=299493 loops=1)
Q5,1.0,->  Nested Loop  (cost=100356.95..1940469.00 rows=1834425 width=46) (actual time=2406.170..15316.419 rows=1821898 loops=1)
Q5,1.0,->  Hash Join  (cost=105035.95..1959639.68 rows=73349 width=34) (actual time=2476.921..16071.289 rows=72311 loops=1)
Q5,1.0,->  Hash Join  (cost=100356.39..489869.22 rows=458717 width=38) (actual time=2406.146..7930.928 rows=455387 loops=1)
Q5,1.0,->  Hash  (cost=34591.63..34591.63 rows=300000 width=38) (actual time=2375.811..2375.811 rows=299493 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=62014.76..438339.48 rows=2293584 width=8) (actual time=27.557..4562.093 rows=2277830 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=765.00..6315.54 rows=60000 width=8) (actual time=3.689..440.511 rows=59899 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=5857.52..267892.95 rows=567562 width=20) (actual time=27.500..4400.526 rows=566839 loops=1)
Q3,1.0,->  Hash Join  (cost=106614.39..494090.16 rows=1461600 width=12) (actual time=411.240..7214.712 rows=1466763 loops=1)
Q3,1.0,->  Hash  (cost=494090.16..494090.16 rows=1461600 width=12) (actual time=7690.756..7690.756 rows=1466763 loops=1)
Q3,1.0,->  Hash  (cost=45927.76..45927.76 rows=298535 width=4) (actual time=381.494..381.494 rows=299751 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..6843.44 rows=298535 width=0) (actual time=64.297..64.297 rows=299751 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=56954.94..402275.22 rows=7343863 width=16) (actual time=27.674..4614.199 rows=7353121 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=248935.54..1716678.76 rows=32101618 width=12) (actual time=119.814..32855.957 rows=32141233 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=6918.07..45927.76 rows=298535 width=4) (actual time=72.305..309.015 rows=299751 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=4) (actual time=0.011..3500.555 rows=15015000 loops=1)
Q22,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=4) (actual time=8300.811..8300.811 rows=15015000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=594269.72..638324.81 rows=58757 width=20) (actual time=8813.187..9022.779 rows=63547 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..6553.35 rows=382176 width=0) (actual time=71.510..71.510 rows=382058 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=6648.89..51959.01 rows=382176 width=4) (actual time=79.267..292.357 rows=382058 loops=1)
Q21,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=30) (actual time=0.299..39.081 rows=4079 loops=1)
Q21,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=30) (actual time=40.181..40.181 rows=4079 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=34) (actual time=0.286..38.401 rows=4079 loops=1)
Q2,1.0,->  Sort  (cost=465618.05..469616.61 rows=1599424 width=168) (actual time=5959.770..6084.372 rows=1602409 loops=1)
Q2,1.0,->  Nested Loop  (cost=332.07..3602.20 rows=20000 width=164) (actual time=0.413..175.872 rows=20033 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..102473.43 rows=7944 width=30) (actual time=0.027..1144.160 rows=8133 loops=1)
Q2,1.0,->  Hash Join  (cost=3852.20..300804.44 rows=1599424 width=168) (actual time=187.404..4913.159 rows=1602640 loops=1)
Q2,1.0,->  Hash  (cost=3602.20..3602.20 rows=20000 width=164) (actual time=187.270..187.270 rows=20033 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=331.00..679.95 rows=4000 width=142) (actual time=0.285..34.205 rows=4007 loops=5)
Q20,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=55) (actual time=0.296..25.930 rows=4049 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..748.55 rows=20000 width=0) (actual time=8.924..8.924 rows=21606 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=59) (actual time=0.280..25.348 rows=4049 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=754.06..34891.52 rows=22022 width=4) (actual time=12.430..581.467 rows=21606 loops=1)
Q19,1.0,->  Nested Loop  (cost=12868.40..611240.60 rows=1123 width=8) (actual time=31.162..1550.273 rows=1105 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..4000.47 rows=398847 width=0) (actual time=4.141..4.141 rows=405760 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.55 rows=7983 width=0) (actual time=3.203..3.203 rows=7962 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.47 rows=7977 width=0) (actual time=3.428..3.428 rows=8054 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..289.43 rows=7972 width=0) (actual time=3.450..3.450 rows=7966 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.026..0.026 rows=30 loops=4742)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=12863.65..26577.52 rows=4765 width=30) (actual time=30.665..279.145 rows=4742 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=16) (actual time=0.005..3735.579 rows=15015000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..1666927.64 rows=60045464 width=8) (actual time=0.004..8432.278 rows=60045669 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..1666927.64 rows=60045464 width=8) (actual time=0.006..8208.306 rows=60045669 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.021..0.033 rows=30 loops=2003)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.56..9.11 rows=31 width=4) (actual time=0.021..0.033 rows=30 loops=2003)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..72.37 rows=1994 width=0) (actual time=0.877..0.877 rows=2003 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=72.87..6610.44 rows=1994 width=4) (actual time=1.213..46.773 rows=2003 loops=1)
Q16,1.0,Sort  (cost=412297.49..412366.69 rows=27682 width=40) (actual time=11025.536..11027.386 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=50939.80..50939.80 rows=295267 width=40) (actual time=1481.286..1481.286 rows=296054 loops=1)
Q16,1.0,->  GroupAggregate  (cost=402648.42..410255.02 rows=27682 width=40) (actual time=10216.016..10967.779 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=2470.12..50939.80 rows=295267 width=40) (actual time=34.596..1351.869 rows=296054 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=222854.68..1733627.47 rows=2227141 width=12) (actual time=119.378..22704.490 rows=2247894 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=222854.68..1733627.47 rows=2227141 width=12) (actual time=121.348..27008.405 rows=2247894 loops=1)
Q14,1.0,->  Hash Join  (cost=93830.08..1154344.93 rows=796105 width=29) (actual time=1619.798..42629.926 rows=773287 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=8308.08..1056881.36 rows=796105 width=12) (actual time=118.413..40126.258 rows=773287 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..441209.30 rows=14835478 width=8) (actual time=0.017..7479.424 rows=14854097 loops=1)
Q13,1.0,->  Hash Right Join  (cost=69028.00..732769.47 rows=14835478 width=8) (actual time=855.273..17999.923 rows=15354119 loops=1)
Q12,1.0,->  Seq Scan on orders  (cost=0.00..403671.84 rows=15014984 width=20) (actual time=0.009..4776.656 rows=15015000 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..2417495.94 rows=288994 width=15) (actual time=0.297..24249.608 rows=312558 loops=1)
Q12,1.0,->  Hash Join  (cost=591359.14..3017886.14 rows=288994 width=27) (actual time=10337.310..34980.434 rows=312558 loops=1)
Q12,1.0,->  Hash  (cost=403671.84..403671.84 rows=15014984 width=20) (actual time=10267.500..10267.500 rows=15015000 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.316..27.134 rows=4049 loops=1)
Q11,1.0,->  Nested Loop  (cost=43.00..2355.31 rows=4000 width=4) (actual time=0.307..47.936 rows=4049 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=8) (actual time=28.043..2642.171 rows=323920 loops=1)
Q11,1.0,->  Hash Join  (cost=2405.31..286562.16 rows=319885 width=12) (actual time=49.277..4214.558 rows=323920 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=49.184..49.184 rows=4049 loops=1)
Q11,1.0,->  Hash  (cost=2355.31..2355.31 rows=4000 width=4) (actual time=27.946..27.946 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.280..26.429 rows=4049 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=43.00..2314.00 rows=4000 width=8) (actual time=0.291..47.040 rows=4049 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.30 rows=59068648 width=20) (actual time=0.050..19294.881 rows=59086028 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..1817041.30 rows=14865656 width=12) (actual time=0.009..17596.174 rows=14822992 loops=1)
Q10,1.0,->  Hash  (cost=267892.95..267892.95 rows=567562 width=8) (actual time=9614.907..9614.907 rows=573807 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=5857.52..267892.95 rows=567562 width=8) (actual time=27.832..9334.975 rows=573807 loops=1)
Q8,,->  Index Scan using pk_orders on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.010..0.010 rows=0 loops=397101)
Q21,,->  Index Scan using pk_orders on orders  (cost=0.43..0.52 rows=1 width=4) (actual time=0.004..0.005 rows=0 loops=1550438)
Q19,,->  BitmapOr  (cost=12863.65..12863.65 rows=4768 width=0) (actual time=26.926..26.926 rows=0 loops=1)
Q19,,->  Bitmap Heap Scan on lineitem  (cost=4.74..122.69 rows=1 width=16) (actual time=0.245..0.263 rows=0 loops=4742)
Q19,,->  BitmapAnd  (cost=6282.98..6282.98 rows=2387 width=0) (actual time=7.902..7.902 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=4292.57..4292.57 rows=1591 width=0) (actual time=8.139..8.139 rows=0 loops=1)
Q19,,->  BitmapAnd  (cost=2287.60..2287.60 rows=791 width=0) (actual time=8.183..8.183 rows=0 loops=1)
